{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Thorin's Notebook!","text":"<p>About me</p> <p> There were sixpence all over the ground, but he looked up and saw the moon. </p>"},{"location":"changelog/","title":"\u66f4\u65b0\u8bb0\u5f55","text":"<p>Abstract</p> <p>\u7279\u522b\u9e23\u8c22\uff1a@TonyCrane \u672c\u9875\u9762\u6837\u5f0f\u6765\u81ea TonyCrane \u8001\u5e08\u7684\u63d2\u4ef6\uff0c\u53ef\u89c1  TonyCrane/mkdocs-changelog-plugin</p>"},{"location":"changelog/#2024","title":"2024","text":"2024-1-20\u00b6 <p> Computer Science &gt; \u8ba1\u7b97\u7406\u8bba</p> 2024-1-7\u00b6 <p> Computer Science &gt; \u5e94\u7528\u8fd0\u7b79\u5b66\u57fa\u7840</p>"},{"location":"changelog/#2023","title":"2023","text":"2023-12-16\u00b6 <p> System &gt; \u64cd\u4f5c\u7cfb\u7edf\u539f\u7406\u4e0e\u5b9e\u8df5 &gt; \u5927\u5bb9\u91cf\u5b58\u50a8\u3001I/O \u7cfb\u7edf</p> <p> System &gt; \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784 &gt; \u6307\u4ee4\u7ea7\u5e76\u884c</p> <p> System &gt; \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784 &gt; DLP \u548c TLP</p> 2023-12-7\u00b6 <p> System &gt; \u64cd\u4f5c\u7cfb\u7edf\u539f\u7406\u4e0e\u5b9e\u8df5 &gt; \u865a\u62df\u5185\u5b58</p> <p> Computer Science &gt; \u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790</p> <p> \u66f4\u65b0\u4e86 Miscellaneous \u90e8\u5206\u9875\u9762\u7ed3\u6784\uff01</p> <p> Miscellaneous &gt; \u6d6e\u70b9\u6570\u4e0e\u5b9a\u70b9\u6570</p> 2023-11-16\u00b6 <p> System &gt; \u64cd\u4f5c\u7cfb\u7edf\u539f\u7406\u4e0e\u5b9e\u8df5 &gt; \u4e3b\u5b58</p> <p> System &gt; \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784 &gt; \u6307\u4ee4\u7ea7\u5e76\u884c</p> 2023-11-10\u00b6 <p> System &gt; \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784 &gt; \u6307\u4ee4\u7ea7\u5e76\u884c</p> 2023-11-9\u00b6 <p> System &gt; \u64cd\u4f5c\u7cfb\u7edf\u539f\u7406\u4e0e\u5b9e\u8df5 &gt; \u6b7b\u9501</p> 2023-11-7\u00b6 <p> System &gt; \u64cd\u4f5c\u7cfb\u7edf\u539f\u7406\u4e0e\u5b9e\u8df5 &gt; \u540c\u6b65</p> 2023-11-4\u00b6 <p> System &gt; \u64cd\u4f5c\u7cfb\u7edf\u539f\u7406\u4e0e\u5b9e\u8df5 &gt; \u7ebf\u7a0b\u3001\u8c03\u5ea6</p> <p> System &gt; \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784 &gt; \u5185\u5b58\u5c42\u6b21</p> 2023-10-31\u00b6 <p> \u7b14\u8bb0\u672c\u6837\u5f0f\u5927\u66f4\u65b0\uff01</p>"},{"location":"link/","title":"\u53cb\u94fe","text":"<p>Abstract</p> <p>\u4e00\u4e9b\u670b\u53cb\u4eec\u7684\u7b14\u8bb0\u672c\uff01 \u53cb\u94fe\u6837\u5f0f\u6765\u81ea @TonyCrane</p> \u9e64\u7fd4\u4e07\u91cc\u7684\u7b14\u8bb0\u672c \u4e0a\u5e1d\u8bf4\u8981\u6709\u795e\uff0c\u4e8e\u662f\u4fbf\u6709\u4e86 TonyCrane \u54b8\u9c7c\u6684\u7684\u4ee3\u7801\u7a7a\u95f4 \u4e00\u4e2a\u597d\u602a\u7684\u5b66\u957f\uff08\u5212\u6389 yhwu_is's Notes wyy \u4e3a\u4ec0\u4e48\u662f\u795e FFox's Notes kami\u2757\ufe0f Bowling's TechStack \u5f3a\u5f97\u6050\u6016\u7684\u5b66\u5f1f"},{"location":"ADS/","title":"\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790\u201d \u8bfe\u7a0b\u53ca\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <ul> <li>Prof:\u6768\u6d0b</li> <li>TA\uff1a\u9093\u7693\u7136/\u8881\u77e5\u5f70/\u51af\u9a81</li> </ul> <p>\u58f0\u660e</p> <p>\u672c\u7b14\u8bb0\u7684\u6574\u7406\u53c2\u8003\u4e86\u5218\u91d1\u98de\u73ed\u7684\u52a9\u6559\u5434\u4e00\u822a\u7684\u76f8\u5173\u68b3\u7406(\u5f3a\u70c8\u63a8\u8350\uff0c\u5b69\u5b50\u7ec8\u4e8e\u80fd\u5b66\u61c2ADS\u4e86) </p> <p>Success</p> <ul> <li> Chapter 1 : AVL Trees, Splay Trees, and Amortized Analysis</li> <li> chapter 2 : Red-Black Trees and B+ Trees</li> </ul>"},{"location":"ADS/ADS1/","title":"chapter 1 AVL Tree\u3001Splay Tree and Amortized Analysis","text":""},{"location":"ADS/ADS1/#avl-treespeed-up-searching","title":"AVL Tree(speed up searching)","text":"<p>Info</p> <p>An empty binary tree is height balanced.  If \\(T\\) is a nonempty binary tree with \\(T_L\\) and \\(T_R\\) as its left and right subtrees, then \\(T\\) is height balanced iff     (1)  \\(T_L\\) and \\(T_R\\) are height balanced, and     (2)  \\(| h_L - h_R | \\leq 1\\) where  \\(h_L\\) and \\(h_R\\) are the heights of \\(T_L\\) and \\(T_R\\) , respectively.</p> <p>\u8fd9\u91cc\u5b9a\u4e49Balance Factor(BF) = \\(h_L - h_R\\)\u6765\u5224\u65ad\u6811\u7684\u5e73\u8861\u6027\uff0c\u5728\u4e00\u4e2aAVL Tree\u4e2d\uff0c\\(BF = -1, 0, 1\\)</p> <p>Warning</p> <ul> <li>\u5bf9\u4e8e\u7a7a\u8282\u70b9\uff0c\u5176BF\u9ed8\u8ba4\u4e3a-1</li> <li>\u5bf9\u4e8e\u5355\u8282\u70b9\uff0c\u5176BF\u9ed8\u8ba4\u4e3a0</li> </ul>"},{"location":"ADS/ADS1/#tree-rotation","title":"Tree Rotation","text":"<p>Warning</p> <p>\u901a\u8fc7Rotation\u5904\u7406\u975e\u5e73\u8861\u7684\u60c5\u51b5\u4f9d\u7167\u4ece\u53f6\u5b50\u8282\u70b9\u5411\u4e0a\uff0c\u5148\u89e3\u51b3\u6700\u4f4e\u7684</p>"},{"location":"ADS/ADS1/#rightor-leftrotation","title":"Right(or Left)Rotation","text":"<ul> <li>Tree rotation is an operation on a binary tree that changes the structure without interfering with the order of the elements.</li> </ul> <ul> <li> <p>After a rotation, the side of the rotation increases its height by 1 whilst the side opposite the rotation decreases its height similarly.</p> </li> <li> <p>Time complexity: \\(O(1)\\)</p> </li> </ul> <p>Example</p> <p>The trouble maker Nov is in the right subtree\u2019s right subtree of the trouble finder Mar.  Hence it is called an RR rotation. </p>"},{"location":"ADS/ADS1/#double-rotation","title":"Double Rotation","text":""},{"location":"ADS/ADS1/#minimum-number-of-nodes","title":"Minimum Number of Nodes","text":"<p>Let \\(n_h\\) be the minimum number of nodes in a height balanced tree of height \\(h\\). Then the tree must look like</p> <p></p> <p>\\(F_0 = 0,  F_1 = 1,  F_i = F_{i-1} + F_{i-2}\\) \\(for\\) \\(i &gt; 1\\)</p> <p>\\(n_h = F_{h+3} - 1, for \\quad h \\leq -1\\)</p>"},{"location":"ADS/ADS1/#splay-tree","title":"Splay Tree","text":"<p>Abstract</p> <ul> <li>Target: Any \\(M\\) consecutive tree operations starting from an empty tree take at most \\(O(M log N)\\) time.</li> <li>Idea: After a node is accessed, it is pushed to the root by a series of AVL tree rotations</li> </ul> <p>\u4e3a\u4e86\u907f\u514d\u51fa\u73b0\u5197\u4f59\u7684\u5faa\u73af\u540e\u56de\u5230\u539f\u70b9\uff0c\u5bf9Splay Tree\u7684\u5904\u7406\u91c7\u7528zig-zig\u548czig-zag\u4e24\u79cd\u65b9\u5f0f\u3002</p> Tip <p>Splay \u6811\u7684\u60f3\u6cd5\u4e00\u65b9\u9762\u6765\u6e90\u4e8e\u5e0c\u671b\u53ef\u4ee5\u4e0d\u50cf AVL \u90a3\u6837\u4fdd\u6301\u4e25\u683c\u7684\u5e73\u8861\u7ea6\u675f\uff0c\u4f46\u4e5f\u80fd\u4fdd\u8bc1\u67d0\u79cd\u5c42\u9762\uff08\u5747\u644a\uff09\u7684\u5bf9\u6570\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u53e6\u4e00\u65b9\u9762 Splay \u6811\u5728\u8bbf\u95ee\uff08\u7279\u522b\u6ce8\u610f\u8bbf\u95ee\u5305\u62ec\u641c\u7d22\u3001\u63d2\u5165\u548c\u5220\u9664\uff09\u65f6\u90fd\u9700\u8981\u5c06\u5143\u7d20\u79fb\u52a8\u5230\u6839\u7ed3\u70b9\uff0c\u8fd9\u975e\u5e38\u7b26\u5408\u7a0b\u5e8f\u5c40\u90e8\u6027\u7684\u8981\u6c42\uff0c\u5373\u521a\u521a\u8bbf\u95ee\u7684\u6570\u636e\u5f88\u6709\u53ef\u80fd\u518d\u6b21\u88ab\u8bbf\u95ee\uff0c\u56e0\u6b64\u5728\u5b9e\u73b0\u7f13\u5b58\u548c\u5783\u573e\u6536\u96c6\u7b97\u6cd5\u4e2d\u6709\u4e00\u5b9a\u7684\u5e94\u7528\u3002</p> <ul> <li>\u641c\u7d22\uff1a\u4f7f\u7528\u666e\u901a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u65b9\u6cd5\u627e\u5230\u7ed3\u70b9\uff0c\u7136\u540e\u901a\u8fc7 splay \u64cd\u4f5c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u65cb\u8f6c\u5c06\u641c\u7d22\u7684\u7ed3\u70b9\u79fb\u52a8\u5230\u6839\u7ed3\u70b9\u7684\u4f4d\u7f6e</li> <li>\u63d2\u5165\uff1a\u4f7f\u7528\u666e\u901a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u65b9\u6cd5\u627e\u5230\u8981\u63d2\u5165\u7684\u4f4d\u7f6e\u8fdb\u884c\u63d2\u5165\uff0c\u7136\u540e\u628a\u521a\u521a\u63d2\u5165\u7684\u7ed3\u70b9\u901a\u8fc7splay\u64cd\u4f5c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u65cb\u8f6c\u79fb\u52a8\u5230\u6839\u7ed3\u70b9\u7684\u4f4d\u7f6e</li> <li>\u5220\u9664\uff1a\u4f7f\u7528\u666e\u901a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u65b9\u6cd5\u627e\u5230\u8981\u5220\u9664\u7684\u7ed3\u70b9\uff0c\u7136\u540e\u901a\u8fc7 splay \u64cd\u4f5c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u65cb\u8f6c\u5c06\u8981\u5220\u9664\u7684\u7ed3\u70b9\u79fb\u52a8\u5230\u6839\u7ed3\u70b9\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5220\u9664\u6839\u7ed3\u70b9\uff08\u73b0\u5728\u6839\u7ed3\u70b9\u5c31\u662f\u8981\u5220\u9664\u7684\u70b9\uff09\uff0c\u7136\u540e\u548c\u666e\u901a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u5220\u9664\u4e00\u6837\u8fdb\u884c\u5408\u7406\u7684merge\u5373\u53ef\u3002</li> </ul> <p>Zig-zig</p> <p>zig-zig\u867d\u7136\u5199\u4f5csingle rotation\uff0c\u4f46\u662f\u5176\u5b9e\u9645\u4e0a\u65cb\u8f6c\u4e86\u4e24\u6b21\uff0c\u5148\u662fG\u4e0eP\u4ea4\u6362\u4f4d\u7f6e(G\u53d8\u4e3aP\u7684\u53f3\u5b50\u6811)\uff0c\u518d\u4ea4\u6362P\u4e0eX\u7684\u5173\u7cfb(P\u53d8\u4e3aX\u7684\u53f3\u5b50\u6811) </p>"},{"location":"ADS/ADS1/#amortized-analysis","title":"Amortized Analysis(\u644a\u8fd8\u5206\u6790)","text":"Abstract <p>\u644a\u8fd8\u5206\u6790\u7684\u60f3\u6cd5\u6765\u6e90\u4e8e\u6211\u4eec\u5e0c\u671b\u4f30\u8ba1\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u7ecf\u8fc7\u4e00\u7cfb\u5217\u64cd\u4f5c\u7684\u5e73\u5747\u82b1\u8d39\u65f6\u95f4\u3002\u7136\u800c\uff0c\u5e73\u5747\u65f6\u95f4\u975e\u5e38\u96be\u8ba1\u7b97\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6b65\u90fd\u6709\u975e\u5e38\u591a\u7684\u9009\u62e9\uff0c\u8fde\u7eedm\u4e2a\u64cd\u4f5c\uff0c\u53ef\u80fd\u7684\u64cd\u4f5c\u8def\u5f84\u662f\u6307\u6570\u7ea7\u522b\u7684\u3002\u5e76\u4e14\u6709\u65f6\u5019\u5e73\u5747\u6d89\u53ca\u6982\u7387\u5206\u5e03\u7b49\uff0c\u4f46\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u786e\u5207\u7684\u5206\u5e03\uff0c\u56e0\u6b64\u6bd4\u8f83\u96be\u4ee5\u8ba1\u7b97\u3002\u4e00\u79cd\u6700\u7b80\u5355\u7684\u4f30\u8ba1\u65b9\u6cd5\u5c31\u662f\u7528\u6700\u5dee\u60c5\u51b5\u5206\u6790\u4f5c\u4e3a\u5e73\u5747\u60c5\u51b5\u7684\u4e0a\u754c\uff0c\u4f8b\u5982Splay\u6811\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u6700\u5dee\u90fd\u662f\\(O(n)\\)\uff08\\(n\\)\u4e3a\u6811\u4e2d\u7ed3\u70b9\u4e2a\u6570\uff09\u7684\uff0c\u56e0\u6b64\u5e73\u5747\u4e0d\u4f1a\u6bd4\u6700\u5dee\u60c5\u51b5\u5dee\uff0c\u6240\u4ee5\u4e5f\u662f\\(O(n)\\)\u7684\u3002\u7136\u800c\u8fd9\u6837\u7684\u4f30\u8ba1\u663e\u7136\u662f\u653e\u5f97\u592a\u5bbd\u4e86\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e2a\u590d\u6742\u5ea6\u662f\u975e\u5e38\u4e0d\u6ee1\u610f\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u8fdb\u884c\u644a\u8fd8\u5206\u6790\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u6700\u5dee\u60c5\u51b5\u7684\u5206\u6790\u4e2d\uff0c\u6211\u4eec\u5ffd\u7565\u4e86\u4e00\u4ef6\u4e8b\u60c5\uff0c\u5c31\u662f\u6709\u7684\u5e8f\u5217\u662f\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\uff0c\u4f8b\u5982\u76f4\u63a5\u5728\u7a7a\u7684\u6811\u4e0a\u7528$ O(n)$\u65f6\u95f4\u5220\u9664\uff0c\u644a\u8fd8\u5206\u6790\u5219\u662f\u5e0c\u671b\u6392\u9664\u6389\u6700\u5dee\u60c5\u51b5\u5206\u6790\u4e2d\u628a\u6240\u6709\u4e0d\u7ba1\u53ef\u80fd\u4e0d\u53ef\u80fd\u7684\u60c5\u51b5\uff0c\u6700\u5dee\u7684\u8def\u5f84\u6311\u51fa\u6765\u7684\u8fd9\u79cd\u65e0\u8111\u884c\u4e3a\uff0c\u8f6c\u800c\u5206\u6790\u6240\u6709\u53ef\u80fd\u7684\u4ece\u7a7a\u7ed3\u6784\u5f00\u59cb\u7684\u64cd\u4f5c\u8def\u5f84\u4e2d\uff0c\u6700\u5dee\u7684\u5e73\u5747\u65f6\u95f4\uff0c\u90a3\u4e48\u8fd9\u4e00\u65f6\u95f4\u4e00\u5b9a\u6bd4\u6700\u5dee\u60c5\u51b5\u5206\u6790\u597d\uff0c\u56e0\u4e3a\u6392\u9664\u6389\u4e86\u4e00\u4e9b\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u6240\u8c13\u6700\u5dee\u5e8f\u5217\uff0c\u4f46\u53c8\u4f1a\u5927\u4e8e\u7b49\u4e8e\u5e73\u5747\u65f6\u95f4\uff0c\u56e0\u4e3a\u53d6\u7684\u662f\u6240\u6709\u53ef\u80fd\u5e8f\u5217\u4e2d\u6700\u5dee\u7684\u90a3\u4e00\u79cd\u3002\u56e0\u6b64\u5f53\u6211\u4eec\u7b97\u51fa\u644a\u8fd8\u5206\u6790\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u90a3\u4e48\u5b83\u4e5f\u4e00\u5b9a\u662f\u5e73\u5747\u65f6\u95f4\u7684\u4e0a\u754c\uff0c\u540c\u65f6\u8fd9\u4e2a\u4e0a\u754c\u4f1a\u6bd4\u6700\u5dee\u60c5\u51b5\u5206\u6790\u597d\uff0c\u8fd9\u4e5f\u662f\u4e0d\u7b49\u5f0fworst-case bound  $ \\geq $ amortized bound $ \\geq $ average-case bound\u7684\u5185\u5728\u542b\u4e49\u3002</p> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u4ecb\u7ecd\u4e09\u79cd\u65b9\u6cd5\uff1a\u805a\u5408\u5206\u6790\u3001\u6838\u7b97\u6cd5\u4ee5\u53ca\u52bf\u80fd\u6cd5\u3002\u805a\u5408\u5206\u6790\u76f4\u63a5\u4f7f\u7528\u4e86\u6211\u4eec\u4e0a\u9762\u63d0\u5230\u7684\u601d\u60f3\uff1a\u201c\u644a\u8fd8\u5206\u6790\u662f\u8003\u8651\u53ef\u80fd\u51fa\u73b0\u7684\u64cd\u4f5c\u5e8f\u5217\u4e2d\u7684\u6700\u5dee\u5e8f\u5217\u201d\uff08\u518d\u6b21\u5f3a\u8c03\uff0c\u8fd9\u91cc\u7684\u6700\u5dee\u4e0d\u662f\u6700\u5dee\u60c5\u51b5\u5206\u6790\u7684\u6700\u5dee\uff0c\u6700\u5dee\u60c5\u51b5\u5206\u6790\u7684\u6700\u5dee\u4f1a\u5305\u62ec\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u5e8f\u5217\uff0c\u4f46\u644a\u8fd8\u5206\u6790\u8981\u6392\u9664\u4e0d\u53ef\u80fd\u7684\u5e8f\u5217\uff09</p>"},{"location":"ADS/ADS1/#aggregate-analysis","title":"Aggregate analysis(\u805a\u5408\u5206\u6790)","text":"Example <p>\u601d\u8003\u8fd9\u4e00\u652f\u6301 MultiPop \u64cd\u4f5c\u7684\u6808\uff0c\u5728\u4ece\u7a7a\u6808\u5f00\u59cb\u7684\u8fde\u7eed n \u6b21\u64cd\u4f5c\u4e2d\uff0c\u6700\u5dee\u7684\u60c5\u51b5\u662f\u4ec0\u4e48\uff1a\u5b9e\u9645\u4e0a\u5c31\u662f\u5148 Push n\u22121\u4e2a\u7136\u540e\u6700\u540e\u4e00\u6b21\u64cd\u4f5c\u4e00\u6b21\u6027 Multipop \u51fa\u6240\u6709\u5143\u7d20\u3002\u4e3a\u4ec0\u4e48\u8fd9\u6837\u662f\u6700\u5dee\u7684\u5462\uff1f\u4e8b\u5b9e\u4e0a\u7b80\u5355\u60f3\u60f3\u5c31\u80fd\u7406\u89e3\uff0c\u65e0\u6cd5\u7406\u89e3\u6216\u8005\u5e0c\u671b\u4e25\u8c28\u4e00\u4e9b\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u89e3\u91ca\uff1a\u56e0\u4e3a n \u6b21\u64cd\u4f5c\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u76ee\u6807\u662f\uff0c\u56fa\u5b9a n \u7684\u60c5\u51b5\u4f7f\u5f97\u4e0b\u603b\u7684\u4ee3\u4ef7\u6700\u5927\uff0c\u666e\u901a\u7684 Push \u548c Pop \u90fd\u662f 1 \u6b21\u64cd\u4f5c\u5bf9\u5e941 \u4e2a\u5355\u4f4d\u4ee3\u4ef7\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5bc4\u5e0c\u671b\u4e8e\u5e8f\u5217\u4e2d MultiPop \u4ee3\u4ef7\u6700\u5927\uff0c\u90a3\u4ee3\u4ef7\u6700\u5927\u7684\u60c5\u51b5\u5c31\u662f\u53ea MultiPop\u4e00\u6b21\uff0c\u4e14\u5c31\u5728\u6700\u540e\u4e00\u6b21\uff0c\u56e0\u4e3a\u5982\u679c\u53ea MultiPop \u4e00\u6b21\uff0c\u4e0d\u5728\u6700\u540e\u4e00\u6b21\uff0c\u663e\u7136\u8fd9\u6b21 MultiPop \u4ee3\u4ef7\u6bd4 n \u2212 1\u5c0f\uff1b\u5982\u679c MultiPop \u591a\u6b21\uff0c\u90a3\u4e48 Push \u64cd\u4f5c\u7684\u4e2a\u6570\u5c11\u4e86\uff0c\u6240\u4ee5 MultiPop \u80fd\u5f39\u51fa\u7684\u6bd4 n \u2212 1 \u5c11\uff0c\u6240\u4ee5\u4ee3\u4ef7\u4e5f\u5c11\u3002 </p>"},{"location":"ADS/ADS1/#accounting-method","title":"Accounting method(\u6838\u7b97\u6cd5)","text":"<p>\u6838\u7b97\u6cd5\u5c31\u662f\u4f20\u7edf\u610f\u4e49\u4e0a\u7684\u53d6\u957f\u8865\u77ed</p> \\[\\sum\\limits_{i=1}^{n}\\hat{c_i} \\geq \\sum\\limits_{i=1}^{n}{c_i}\\] <p>\\(\\hat{c_i}\\)\u662f\u9884\u6d4b\u7684\u671f\u671b(\u644a\u8fd8\u4ee3\u4ef7)\uff0c\\(c_i\\)\u662f\u5b9e\u9645\u7684\u5f00\u9500\uff0c\u4ed6\u4eec\u6ee1\u8db3\\(\\hat{c_i} = c_i + \\Delta_i\\)\uff0c\\(\\Delta_i\\)\u662f\u622a\u53d6\u7684\u957f\u6216\u8005\u662f\u8865\u8db3\u7684\u77ed\u3002(\u53ef\u6b63\u53ef\u8d1f)</p> <p>\u4e00\u4e2a\u60b2\u4f24\u7684\u4f8b\u5b50</p> <p>\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u8bf4\uff0c\u4f60\u5e0c\u671b\u4f60\u7684\u5e73\u5747\u7ee9\u70b9\u4fdd\u6301\u57284.0\u4ee5\u4e0a\uff0c\u4f60\u77e5\u9053ADS\u8fd9\u95e8\u8bfe\u4f60\u53ef\u80fd\u4f1a\u6302\u79d1\uff0c\u6240\u4ee5\u4f60\u4e4b\u524d\u7684\u5fae\u79ef\u5206\u3001\u7ebf\u6027\u4ee3\u6570\u3001FDS\u7b49\u5c31\u9700\u8981\u4e3a\u8fd9\u6b21\u6302\u79d1\u5b58\u4e0b\u8db3\u591f\u9ad8\u7684\u5747\u7ee9\u3002</p>"},{"location":"ADS/ADS1/#potential-method","title":"Potential method(\u52bf\u80fd\u6cd5)","text":"<p>\u52bf\u51fd\u6570</p> <p>\u6bd4\u5982\u601d\u8003 Splay \u6811\u8fd9\u79cd\u590d\u6742\u7684\u7ed3\u6784\uff0c\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u6709\u4e00\u4e2a\u66f4\u7edf\u4e00\u7684\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u4e0d\u518d\u628a\u76ee\u5149\u5c40\u9650\u4e8e\u6bcf\u4e2a\u64cd\u4f5c\uff0c\u800c\u662f\u7ed9\u6574\u4e2a\u7ed3\u6784\u5b9a\u4e49\u4e00\u4e2a\u52bf\u51fd\u6570\uff0c\u8fd9\u4e2a\u52bf\u51fd\u6570\u63cf\u8ff0\u4e86\u8fd9\u4e2a\u7ed3\u6784\u4e0d\u540c\u72b6\u6001\uff0c\u5176\u5b9e\u5c31\u662f\u501f\u7528\u4e86\u7269\u7406\u91cc\u9762\u7684\u52bf\u80fd\u7684\u601d\u60f3\uff0c\u6bd4\u5982\u91cd\u529b\u52bf\u80fd\u662f\u9ad8\u5ea6\u7684\u51fd\u6570\uff0c\u4f46\u6811\u7684\u52bf\u80fd\u53ef\u80fd\u662f\u6811\u9ad8\u7684\u51fd\u6570\uff0c\u4e5f\u53ef\u80fd\u662f\u6811\u7684\u7ed3\u70b9\u603b\u6570\u7684\u51fd\u6570\u751a\u81f3\u66f4\u590d\u6742\u7b49\u7b49\u3002</p> \\[ \\sum\\limits_{i=1}^{n}\\hat{c_i} = \\sum\\limits_{i=1}^{n}({c_i}+\\Phi(D_i)-\\Phi(D_{i-1})) = \\sum\\limits_{i=1}^{n}{c_i} + \\Phi(D_n) - \\Phi(D_0) \\] <p>Attention</p> <p>\u6ce8\u610f\u8fd9\u91cc\u7684\\(i\\)\u4e0d\u518d\u662f\u6838\u7b97\u6cd5\u4e2d\u8868\u793a\u7b2c\\(i\\)\u79cd\u64cd\u4f5c\uff0c\u800c\u662f\\(n\\)\u4e2a\u64cd\u4f5c\u7ec4\u6210\u7684\u5e8f\u5217\u4e2d\u7684\u7b2c\\(i\\)\u4e2a\uff01\u56e0\u6b64\u8fd9\u91cc\u7684\u542b\u4e49\u662f\uff0c\u6bcf\u4e00\u6b65\u7684\u644a\u8fd8\u4ee3\u4ef7\u7b49\u4e8e\u771f\u5b9e\u64cd\u4f5c\u7684\u4ee3\u4ef7\u52a0\u4e0a\u52bf\u51fd\u6570\u7684\u53d8\u5316</p> \u5982\u4f55\u8bbe\u8ba1\u52bf\u51fd\u6570 <p>\u4e3a\u4e86\u4f7f\u5f97\u644a\u8fd8\u6210\u672c\u662f\u5e73\u5747\u6210\u672c\u7684\u4e0a\u754c\uff0c\u6211\u4eec\u4ecd\u7136\u9700\u8981\u6ee1\u8db3\\(\\sum\\limits_{i=1}^{n}\\hat{c_i} \\geq \\sum\\limits_{i=1}^{n}{c_i}\\)\u56e0\u6b64\u53ea\u9700\u8981\u6ee1\u8db3\\(\\Phi(D_n) \\leq \\Phi(D_0)\\)\u5373\u53ef\uff0c\u8fd9\u4e00\u70b9\u5728\u8bbe\u8ba1\u51fd\u6570\u7684\u65f6\u5019\u5f88\u5bb9\u6613\u6ee1\u8db3\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u4f7f\u5f97 \\(\u03a6(D_0) = 0\\)\uff0c\u5373\u521d\u59cb\u72b6\u6001\u52bf\u80fd\u4e3a0\uff0c\u5176\u5b83\u4efb\u4f55\u72b6\u6001\u7684\u52bf\u80fd\u90fd\u4e0d\u4f1a\u5c0f\u4e8e0\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6bd4\u8003\u8651\u6838\u7b97\u6cd5\u4e2d\u5bf9\u4efb\u4f55\u53ef\u80fd\u7684\u5e8f\u5217\u90fd\u6210\u7acb\u66f4\u52a0\u7b80\u5355\u76f4\u63a5\uff0c\u56e0\u6b64\u66f4\u591a\u65f6\u5019\u6211\u4eec\u91c7\u7528\u52bf\u80fd\u6cd5\u8fdb\u884c\u5206\u6790\u3002</p>"},{"location":"ADS/ADS1/#splay","title":"Splay\u6811\u7684\u644a\u8fd8\u5206\u6790","text":"<p>Rank of SubTree</p> <p>\u8282\u70b9\u6570\u76ee\u7684\u5bf9\u6570\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u7528Height,Height\u4e0d\u80fd\u5f88\u597d\u7684\u53cd\u5e94\u6570\u91cf\uff0c\u4e14\u4e0d\u4f1a\u4e25\u683c\u589e\u52a0</p> <p></p> \\[ \\sum\\limits_{i=1}^{n}\\hat{c_i} \\leq 1 + 3(R_{k+1}(X)-R_{k}(X)) + \\sum\\limits_{i=1}^{k}3(R_i(X)-R_{i-1}(X)) = 1 + 3(R_{k+1}(X) - R_0(X)) = O(logN) \\]"},{"location":"ADS/ADS2/","title":"chapter 2 Red-Black Trees and B+ Trees","text":""},{"location":"ADS/ADS2/#red-black-trees","title":"Red-Black Trees","text":"<p>Definition of red-black tree</p> <p>A red-black tree is a binary search tree that satisfies the following red-black properties: 1. Every node is either red or black. 2. The root is black. 3. Every leaf (NIL) is black. 4. If a node is red, then both its children are black. 5. For each node, all simple paths from the node to descendant leaves contain the same number of black nodes.(\u9ed1\u9ad8\u76f8\u540c)</p> <p>Warning</p> <ul> <li>\u9664\u4e86\u5e38\u89c4\u7684\u7236\u5b50\u4ee5\u53ca\u952e\u503c\u4fe1\u606f\u4e4b\u5916\uff0c\u7ea2\u9ed1\u6811\u8fd8\u6709\u4e00\u4e2a\u989c\u8272\u7684\u5c5e\u6027\uff0c\u5e76\u4e14\u5f53\u5de6\u53f3\u5b50\u7ed3\u70b9\u4e3a\u7a7a\u65f6\uff0c\u5fc5\u987b\u662f\u9ed1\u8272\u7684NIL\u7ed3\u70b9\uff08\u5b83\u6ca1\u6709\u952e\u503c\uff09\uff0c\u8fd9\u4e0e\u4e00\u822c\u7684NULL\u4e0d\u4e00\u6837\u3002</li> <li>\u9ed1\u9ad8\u662f\u7edd\u5bf9\u4e25\u683c\u7684\u5e73\u8861\u8981\u6c42\uff0c\u800c\u7ea2\u8272\u7ed3\u70b9\u5219\u662f\u5c11\u91cf\u4e0d\u5e73\u8861\u7684\u56e0\u7d20\uff0c\u5e76\u4e14\u5b9a\u4e49\u63a7\u5236\u4e86\u7ea2\u8272\u7ed3\u70b9\u7684\u4e2a\u6570\uff0c\u4e5f\u5c31\u63a7\u5236\u4e86\u4e0d\u5e73\u8861\u56e0\u7d20\u7684\u5f71\u54cd</li> </ul>"},{"location":"ADS/ADS2/#insertion","title":"Insertion","text":"\u4e3a\u4ec0\u4e48\u9ed8\u8ba4\u63d2\u5165\u7ea2\u8272\u8282\u70b9 <p>\u5047\u8bbe\u6211\u4eec\u6bcf\u6b21\u90fd\u63d2\u5165\u9ed1\u8272\u7ed3\u70b9\uff0c\u90a3\u4e48\u5b9a\u4e49\u7b2c\u4e94\u6761\u4e00\u5b9a\u4f1a\u88ab\u7834\u574f\uff0c\u56e0\u6b64\u6bcf\u6b21\u63d2\u5165\u90fd\u5fc5\u987b\u8c03\u6574\uff08\u9664\u4e86\u4ece\u7a7a\u6811\u63d2\u5165\u7684\u90a3\u6b21\uff09\uff1b\u4f46\u662f\u5982\u679c\u63d2\u5165\u7ea2\u8272\u7ed3\u70b9\uff0c\u5b9a\u4e49\u7b2c\u4e8c\u6761\uff08\u4ec5\u5728\u63d2\u5165\u7a7a\u6811\u65f6\uff09\u548c\u5b9a\u4e49\u7b2c\u56db\u6761\u4ec5\u4ec5\u662f\u6709\u53ef\u80fd\u88ab\u7834\u574f\uff0c\u56e0\u6b64\u76f4\u89c2\u6765\u770b\u63d2\u5165\u7ea2\u8272\u7ed3\u70b9\u4f1a\u6bd4\u63d2\u5165\u9ed1\u8272\u7ed3\u70b9\u9700\u8981\u7684\u8c03\u6574\u66f4\u5c11\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5728\u5b66\u5b8c\u7ea2\u9ed1\u6811\u5220\u9664\u540e\uff0c\u7ea2\u9ed1\u6811\u5220\u9664\u9ed1\u8272\u7ed3\u70b9\u65f6\u7684\u590d\u6742\u60c5\u51b5\u4e5f\u6697\u793a\u4e86\u63d2\u5165\u7ea2\u8272\u5e94\u5f53\u662f\u66f4\u597d\u7684\u9009\u62e9\u3002</p> <ul> <li>\u60c5\u51b5 1\uff1a\\(X\\) \u7684\u53d4\u53d4\uff08\u5373\u7236\u4eb2\u7684\u5144\u5f1f\uff09\u662f\u7ea2\u8272\u7684\uff0c\\(X\\) \u65e0\u8bba\u5de6\u53f3\u5b69\u5b50\u90fd\u662f\u8be5\u60c5\u51b5</li> </ul> <p></p> <ul> <li> <p>\u60c5\u51b5 2\uff1a\\(X\\) \u7684\u53d4\u53d4\uff08\u5373\u7236\u4eb2\u7684\u5144\u5f1f\uff09\u662f\u9ed1\u8272\u7684\uff0c\u4e14 \\(X\\) \u662f\u53f3\u5b69\u5b50</p> </li> <li> <p>\u60c5\u51b5 3\uff1a\\(X\\) \u7684\u53d4\u53d4\uff08\u5373\u7236\u4eb2\u7684\u5144\u5f1f\uff09\u662f\u9ed1\u8272\u7684\uff0c\u4e14 \\(X\\) \u662f\u5de6\u5b69\u5b50</p> </li> </ul> <p></p> <p>Summary</p> <p>\u5bf9\u4e8e\u63d2\u5165\u4ea7\u751f\u7684\u51b2\u7a81\u95ee\u9898\uff0c\u6838\u5fc3\u7684\u5904\u7406\u601d\u60f3\u662f\u5c06\u9505\u4e0d\u65ad\u5411\u4e0a\u7529  </p>"},{"location":"ADS/ADS2/#deletion","title":"Deletion","text":"<p>\u57fa\u7840\u5220\u9664\u64cd\u4f5c</p> <ul> <li>\u5982\u679c\\(X\\)\u6ca1\u6709\u5b69\u5b50\uff0c\u76f4\u63a5\u5220\u9664\u5c31\u597d\uff0c\u6ca1\u6709\u4efb\u4f55\u540e\u987e\u4e4b\u5fe7\uff1b</li> <li>\u5982\u679c\\(X\\)\u53ea\u6709\u4e00\u4e2a\u5b69\u5b50\uff0c\u90a3\u5c31\u8ba9\u5b69\u5b50\u63a5\u66ff\\(X\\)\u7684\u4f4d\u7f6e\uff1b</li> <li>\u5982\u679c\\(X\\)\u6709\u4e24\u4e2a\u5b69\u5b50\uff0c\u90a3\u5c31\u8ba9\\(X\\)\u4e0e\u5176\u5de6\u5b50\u6811\u7684\u6700\u5927\u7ed3\u70b9\uff08\u6216\u53f3\u5b50\u6811\u6700\u5c0f\u7ed3\u70b9\uff09\u4ea4\u6362\uff0c\u7136\u540e\u5220\u9664 \\(X\\)\uff08\u8fd9\u65f6 \\(X\\) \u6240\u5728\u7684\u4f4d\u7f6e\u4e00\u5b9a\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u56e0\u4e3a\u5de6\u5b50\u6811\u6700\u5927\u7ed3\u70b9\u4e0d\u53ef\u80fd\u6709\u53f3\u5b69\u5b50\uff0c\u53f3\u5b50\u6811\u6700\u5c0f\u7ed3\u70b9\u4e0d\u53ef\u80fd\u6709\u5de6\u5b69\u5b50\uff09</li> </ul> <p>Red-Black Tree\u5220\u9664\u7279\u70b9</p> <p>\u4e8b\u5b9e\u4e0a\u7ea2\u9ed1\u6811\u7684\u5220\u9664\u662f\u57fa\u4e8e\u8fd9\u4e9b\u64cd\u4f5c\u7684\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\\(X\\) \u548c\u4e0e\u5176\u4ea4\u6362\u7684\u7ed3\u70b9\u53ea\u4ea4\u6362\u952e\u503c\uff0c\u4e0d\u4ea4\u6362\u989c\u8272\uff0c\u5426\u5219\u5982\u679c\u4e24\u8005\u989c\u8272\u4e0d\u540c\uff0c\u5728\u4ea4\u6362\u7684\u65f6\u5019\u5c31\u53ef\u80fd\u7834\u574f\u7b2c\u4e94\u6761\u6027\u8d28\uff0c\u8fd9\u662f\u5f88\u96be\u4ee4\u4eba\u6ee1\u610f\u7684\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u7b2c\u4e09\u79cd\u60c5\u51b5\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b65\u4ea4\u6362\u76f4\u63a5\u8f6c\u5316\u4e3a\u7b2c\u4e00\u6216\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3\u7b2c\u4e00\u548c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002</p> <p>\u53cc\u9ed1\u8282\u70b9</p> <p>\u5982\u679c\u63a5\u66ff\u88ab\u5220\u9664\u7684\u662fNIL\u6216\u662f\u9ed1\u8272\u7ed3\u70b9\u5e94\u8be5\u600e\u4e48\u529e\uff1f\u6211\u4eec\u76f4\u63a5\u7ed9\u9ed1\u8272\u7ed3\u70b9\u6216\u8005 NIL\uff08\u5176\u5b9e\u4e5f\u662f\u9ed1\u8272\u7ed3\u70b9\uff09\u518d\u52a0\u4e00\u91cd\u9ed1\u8272\uff0c\u4e8e\u662f\u5b83\u7684\u989c\u8272\u53d8\u6210\u4e86\u53cc\u9ed1\u3002\u6b64\u65f6\u7b2c\u4e94\u6761\u6027\u8d28\u6ca1\u6709\u88ab\u7834\u574f\uff0c\u4f46\u662f\uff0c\u7b2c\u4e00\u6761\u6027\u8d28\u88ab\u7834\u574f\u4e86\uff01\u8fd9\u91cc\u51fa\u73b0\u4e86\u975e\u7ea2\u4e5f\u975e\u9ed1\u7684\u989c\u8272\uff01\u4e8e\u662f\u6211\u4eec\u7684\u60f3\u6cd5\u5c31\u662f\uff1a\u628a\u8fd9\u4e2a\u9ed1\u8272\u7684 debuff \u6254\u7ed9\u4e00\u4e2a\u7ea2\u8272\u7ed3\u70b9\uff0c\u6216\u8005\u4e00\u6b65\u4e00\u6b65\u5f80\u4e0a\u6254\u7ed9\u6839\u7ed3\u70b9\uff0c\u4e8b\u5b9e\u4e0a\u6839\u7ed3\u70b9\u628a\u53cc\u9ed1\u76f4\u63a5\u53d8\u6210\u9ed1\u8272\u5b8c\u5168\u4e0d\u5f71\u54cd\u5176\u5b83\u6027\u8d28\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5220\u9664\u7684\u60c5\u51b5\u5206\u6210\u4ee5\u4e0b\u56db\u7c7b\uff08\u4e0e\u63d2\u5165\u76f8\u540c\uff0c\u8fd9\u91cc\u7528\u5b50\u6811\u8868\u793a\u66f4\u4e00\u822c\u7684\u60c5\u51b5\uff0c\\(X\\) \u5728\u6b64\u5904\u5219\u8868\u793a\u53cc\u9ed1\u7ed3\u70b9\uff0c\u56fe\u4e2d\u7528\u9ed1\u8272\u5706\u5708\u548c\u5706\u65c1\u8fb9\u7684\u52a0\u53f7\u8868\u793a\u53cc\u9ed1\uff0c\u84dd\u8272\u8868\u793a\u989c\u8272\u65e0\u6240\u8c13\uff0c\u53ef\u7ea2\u53ef\u9ed1\u3002\u6ce8\u610f\u8fd9\u91cc \\(X\\) \u90fd\u662f\u7236\u4eb2\u7684\u5de6\u5b69\u5b50\uff0c\u53f3\u5b69\u5b50\u60c5\u51b5\u5bf9\u79f0\uff09</p> <ul> <li>\u60c5\u51b5 1\uff1a\\(X\\) \u7684\u5144\u5f1f\u662f\u7ea2\u8272\u7684</li> </ul> <p></p> <p>\u7531\u4e8e\u539f\u5148\u7684\u6811\u6ee1\u8db3\u7ea2\u9ed1\u6811\u5b9a\u4e49\u7b2c\u56db\u6761\uff0c\u56e0\u6b64\u6b64\u65f6\u7236\u7ed3\u70b9\u4e00\u5b9a\u662f\u9ed1\u8272\u3002\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u5c06\u5144\u5f1f\u8282\u70b9\u62ce\u8d77\u6765</p> <ul> <li>\u60c5\u51b5 2\uff1a\\(X\\) \u7684\u5144\u5f1f\u662f\u9ed1\u8272\u7684\uff0c\u4e14\u5144\u5f1f\u7684\u4e24\u4e2a\u5b69\u5b50\uff08\u6839\u636e\u8ddd\u79bb\u5212\u5206\u4e3a\u8fd1\u3001\u8fdc\u4f84\u5b50\uff0c\u7528\u8fdc\u8fd1\u800c\u4e0d\u7528\u5de6\u53f3\u662f\u4e3a \u4e86\u5bf9\u79f0\u60c5\u51b5\u4e0d\u6df7\u6dc6\u5de6\u53f3\uff09\u90fd\u662f\u9ed1\u8272\u7684</li> </ul> <p></p> <p>\u8fd9\u65f6\u5019\u6ca1\u4eba\u662f\u7ea2\u8272\u53ef\u4ee5\u6551\u4e86\uff0c\u90a3\u5c31\u60f3\u8d77\u6839\u7ed3\u70b9\u518d\u600e\u4e48\u6837\u90fd\u80fd\u6551\uff0c\u6240\u4ee5\u628a\u53cc\u9ed1\u5f80\u4e0a\u63a8\u7ed9\u7236\u4eb2\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u7ea2\u9ed1\u6811\u6027\u8d28\uff0c\u5144\u5f1f\u4e5f\u8981\u4ece\u9ed1\u53d8\u7ea2\uff0c\u603b\u800c\u8a00\u4e4b\u5c31\u662f \\(X\\) \u8fd9\u4e00\u5c42\u7684\u9ed1\u8272\u5168\u90e8\u5f80\u4e0a\u63a8\u3002\u5982\u679c\u7236\u4eb2\u539f\u672c\u662f\u7ea2\u8272\uff0c\u90a3\u5c31\u67d3\u9ed1\uff0c\u95ee\u9898\u89e3\u51b3\uff1b\u5982\u679c\u7236\u4eb2\u539f\u672c\u662f\u9ed1\u8272\uff0c\u90a3\u7236\u4eb2\u5c31\u53d8\u6210\u53cc\u9ed1\uff0c\u8ba9\u95ee\u9898\u5411\u6839\u7ed3\u70b9\u9760\u8fd1\u3002\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u662f\u4ece\u60c5\u51b51\u53d8\u6210\u60c5\u51b52\u7684\uff0c\u7236\u4eb2\u4e00\u5b9a\u662f\u7ea2\u8272\uff0c\u6240\u4ee5\u5982\u679c\u662f1\u53d8\u4e3a2\uff0c\u5219\u95ee\u9898\u4f1a\u9a6c\u4e0a\u89e3\u51b3\u3002</p> <ul> <li>\u60c5\u51b5 3\uff1a\\(X\\) \u7684\u5144\u5f1f\u662f\u9ed1\u8272\u7684\uff0c\u4e14\u8fd1\u4f84\u5b50\u662f\u7ea2\u8272\u7684\uff0c\u8fdc\u4f84\u5b50\u662f\u9ed1\u8272\u7684</li> </ul> <p></p> <p>\u8fd9\u65f6\u6211\u4eec\u501f\u7528 AVL \u6811\u7684\u60f3\u6cd5\uff0c\u7ea2\u8272\u5728\u7236\u4eb2 P \u7684 RL \u4f4d\u7f6e\uff0c\u56e0\u6b64\u505a double rotation\uff1asingle rotation \u540e\u4f1a\u53d8\u6210\u60c5\u51b54\u7684RR\u7684\u60c5\u51b5\uff08\u4e5f\u5c31\u610f\u5473\u7740\u7ea2\u8272\u8981\u7ed9\u5230RR\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u989c\u8272\u7684\u53d8\u5316\uff0c\u7528RR\u8bb0\u5fc6\u5f88\u65b9\u4fbf\uff09\u3002</p> <ul> <li>\u60c5\u51b5 4\uff1a\\(X\\) \u7684\u5144\u5f1f\u662f\u9ed1\u8272\u7684\uff0c\u4e14\u8fdc\u4f84\u5b50\u662f\u7ea2\u8272\u7684\uff0c\u8fd1\u4f84\u5b50\u989c\u8272\u4efb\u610f</li> </ul> <p></p> <p>\u6b64\u65f6\u5bf9\u5e94AVL\u6811\u7684RR\uff0c\u4e8e\u662f\u518d\u4e00\u6b21single rotation\u5373\u53ef\u628a\u53cc\u9ed1\u7684\u4e00\u91cd\u9ed1\u4e22\u7ed9\u7ea2\u8272\u8fdc\u4f84\u5b50\uff08\u5373\\(X\\)\u548c \\(N_2\\) \u90fd\u53d8\u6210\u9ed1\u8272\uff09\uff0c\u4f46\u8981\u6ce8\u610f\u4e3a\u4e86\u4fdd\u8bc1\u7ea2\u9ed1\u6811\u6027\u8d28\u7684\u989c\u8272\u53d8\u5316\uff0c\u5373P\u548cS\u8fd8\u8981\u4ea4\u6362\u989c\u8272\uff0c\u6b64\u65f6\u95ee\u9898\u89e3\u51b3\u3002</p> \u65f6\u95f4\u590d\u6742\u5ea6 <p>\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u603b\u7ed3\u5e76\u8ba1\u7b97\u51fa\u5220\u9664\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u9996\u5148\u6211\u4eec\u6700\u591a\u7528\\(O(\\log n)\\)\u7684\u65f6\u95f4\u627e\u5230\u5220\u9664\u7ed3\u70b9\uff0c\u6700\u591a 1 \u6b21\u4ea4\u6362\u548c 1 \u4e2a\u5220\u9664\u7684\u64cd\u4f5c\u3002\u63a5\u4e0b\u6765\u5982\u679c\u5220\u9664\u540e\u6ca1\u6709\u95ee\u9898\u5219\u5230\u6b64\u7ed3\u675f\uff1b\u5426\u5219\u6839\u636e\u5206\u6790\uff0c\u60c5\u51b5 1\u30013 \u548c 4 \u5728\u95ee\u9898\u89e3\u51b3\u524d\u6700\u591a\u8fdb\u53bb\u4e00\u6b21\uff0c\u56e0\u4e3a 4 \u53ef\u4ee5\u76f4\u63a5\u89e3\u51b3\uff0c3 \u76f4\u63a5\u8fdb\u5165 4 \u7136\u540e\u89e3\u51b3\uff0c1 \u5982\u679c\u8fdb\u5165 3 \u548c 4 \u4e5f\u53ef\u4ee5\u9a6c\u4e0a\u89e3\u51b3\uff0c\u8fdb\u5165 2 \u540e\u4e5f\u56e0\u4e3a\u7236\u7ed3\u70b9\u662f\u7ea2\u8272\u53ef\u4ee5\u9a6c\u4e0a\u89e3\u51b3\u3002\u56e0\u6b64\u5173\u952e\u5728\u4e8e\u60c5\u51b5 2 \u53ef\u80fd\u51fa\u73b0\u5f88\u591a\u6b21\uff0c\u4f46\u6700\u591a\u4e5f\u53ea\u662f\u6811\u9ad8\\(O(\\log n)\\)\u6b21\uff0c\u56e0\u4e3a\u6bcf\u6b21\u90fd\u4f1a\u4e0a\u63a8 1 \u683c\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u56e0\u4e3a\u60c5\u51b5 1\u30013 \u548c 4 \u5728\u95ee\u9898\u89e3\u51b3\u524d\u6700\u591a\u8fdb\u53bb\u4e00\u6b21\uff0c\u6240\u4ee5\u6700\u591a 3 \u6b21\u65cb\u8f6c\u52a0\u4e0a\\(O(\\log n)\\)\u6b21\u989c\u8272\u8c03\u6574\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\uff0c\u56e0\u6b64\u6211\u4eec\u6709\u5982\u4e0b\u7ed3\u8bba\uff1a\u4e00\u68f5\u6709 \\(n\\)\u4e2a\u5185\u90e8\u7ed3\u70b9\u7684\u7ea2\u9ed1\u6811\u5220\u9664\u4e00\u4e2a\u7ed3\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(\\log n)\\)</p>"},{"location":"CO/","title":"\u8ba1\u7b97\u673a\u7ec4\u6210","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u8ba1\u7b97\u673a\u7ec4\u6210\u201d \u8bfe\u7a0b\u53ca\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <ul> <li>Prof:\u5218\u6d77\u98ce</li> <li>TA\uff1a\u79e6\u5609\u4fca/\u90ed\u5bb6\u8c6a</li> </ul> <p>Success</p> <ul> <li> Computer Abstractions and Technology</li> <li> Arithmetic for Computer</li> </ul> <p>Lab</p> Lab \u5185\u5bb9 Lab00:Vivado\u7684\u4ecb\u7ecd\u4e0e\u4f7f\u7528 Vivado\u4ecb\u7ecd\u4e0e\u4f7f\u7528\uff0cMUX\u6a21\u5757\u5c01\u88c5 Lab01:Warmup ALU\u548cRegfile\u8bbe\u8ba1 Lab02:CPU\u5b9e\u9a8c\u73af\u5883\u642d\u5efa IP\u6838\u96c6\u6210SOC\u8bbe\u8ba1\uff0c\u5b8c\u6210CPU\u6d4b\u8bd5\u73af\u5883\u642d\u5efa Lab03:\u590d\u6742\u64cd\u4f5c\u5b9e\u73b0 \u4e58\u9664\u6cd5\u3001\u6d6e\u70b9\u52a0\u6cd5\u5b9e\u73b0 Lab04:\u5355\u5468\u671fCPU\u8bbe\u8ba1 CPU\u6838\u96c6\u6210\u7b49 Lab05:\u6d41\u6c34\u7ebfCPU\u8bbe\u8ba1 \u6d41\u6c34\u7ebf\u5904\u7406\u5668\u96c6\u6210\u7b49 Lab06:Data Cache \u6570\u636e\u9ad8\u901f\u7f13\u5b58\u7684\u8bbe\u8ba1"},{"location":"CO/CO1/","title":"chapter 1 Computer Abstractions and Technology","text":"<p>Abstract</p> <ul> <li>8 Ideas in Computer Architecture</li> <li>Performance</li> <li>Incredible performance improvement</li> </ul>"},{"location":"CO/CO1/#8-ideas-in-computer-architecture","title":"8 Ideas in Computer Architecture","text":"<ul> <li>Moore's Law The integrate circuit resource double every 18-24 months.</li> <li>User abstraction to simplify design(\u4f7f\u7528\u62bd\u8c61\u7b80\u5316\u8bbe\u8ba1)<ul> <li>Lower-level details are hidden to higher levels</li> <li>Instruction set architecture -- the interface between HW and SW.</li> </ul> </li> <li>Make the common cases fast(\u52a0\u901f\u7ecf\u5e38\u6027\u4e8b\u4ef6)</li> <li>Performance via Parallelism(\u901a\u8fc7\u5e76\u884c\u63d0\u9ad8\u6027\u80fd)</li> <li>Performance via Pipelining (\u901a\u8fc7\u6d41\u6c34\u7ebf\u63d0\u9ad8\u6027\u80fd)</li> <li>Performance via Prediction(\u901a\u8fc7\u9884\u6d4b\u63d0\u9ad8\u6027\u80fd)</li> <li>Hierarchy of memory(\u5b58\u50a8\u5c42\u6b21)</li> <li>Dependability via redundancy(\u901a\u8fc7\u5197\u4f59\u63d0\u9ad8\u53ef\u9760\u6027)</li> </ul>"},{"location":"CO/CO1/#performance","title":"Performance(\u6027\u80fd)","text":"<ul> <li>Response time\uff08\u54cd\u5e94\u65f6\u95f4\uff09: How long it takes to do a task. (\u4e2a\u4f53\u7528\u6237\u5728\u610f) </li> <li>Throughput (\u541e\u5410\u91cf): Total work done per unit time.  \uff08\u670d\u52a1\u5668\u91cd\u89c6)</li> </ul> <p>Define \\(Performance = \\dfrac{1}{Execution\\ Time}\\) </p>"},{"location":"CO/CO1/#execution-time","title":"Execution time(\u6267\u884c\u65f6\u95f4)","text":"<ul> <li> <p>Elapsed Time (\u548c\u54cd\u5e94\u65f6\u95f4\u4e00\u56de\u4e8b) Total response time, including all aspects e.g. Processing, I/O, OS overhead, idle time.  </p> </li> <li> <p>CPU Time (CPU \u6267\u884c\u65f6\u95f4)</p> <ul> <li>\u7528\u6237CPU\u65f6\u95f4(user CPU time)</li> <li>\u7cfb\u7edfCPU\u65f6\u95f4(system CPU time)</li> <li>\u4e3a\u4e86\u4fdd\u6301\u4e00\u81f4\uff0c\u6211\u4eec\u4fdd\u6301\u533a\u5206\u57fa\u4e8e\u65f6\u95f4\u7684\u6027\u80fd\u548c\u57fa\u4e8eCPU\u6267\u884c\u65f6\u95f4\u7684\u6027\u80fd\uff0c\u524d\u8005\u53eb\u505a\u7cfb\u7edf\u6027\u80fd(system performance),\u540e\u8005\u53eb\u505aCPU\u6027\u80fd(CPU performance).</li> <li>Discounts I/O time, other jobs\u2019 shares  </li> <li>\u8fd9\u91cc\u6211\u4eec\u53ea\u8003\u8651CPU\u65f6\u95f4</li> </ul> </li> </ul>"},{"location":"CO/CO1/#cpu-clockingcpu","title":"CPU Clocking(CPU \u65f6\u949f)","text":"<ul> <li>Clock period: duration of a clock cycle.(\u5468\u671f\u957f\u5ea6) \u7528\u65f6\u949f\u5468\u671f\u4ee3\u66ff\u5177\u4f53\u7684\u79d2\u6570\u3002 </li> <li>Clock frequency(rate): cycles per second. (\u5468\u671f\u9891\u7387)</li> </ul> <p>CPI</p> <ul> <li>\u6307\u4ee4\u5e73\u5747\u65f6\u949f\u5468\u671f\u6570(clock cycle per instruction)\u8868\u793a\u6267\u884c\u6bcf\u6761\u6307\u4ee4\u6240\u9700\u7684\u65f6\u949f\u5468\u671f\u5e73\u5747\u6570\uff0c\u7f29\u5199\u4e3aCPI\u3002</li> <li>CPI is determined by CPU hardware.  </li> <li>\u5982\u679c\u4e0d\u540c\u6307\u4ee4\u6709\u4e0d\u540c\u7684 CPI, \u6211\u4eec\u53ef\u4ee5\u7528 Average CPI. </li> </ul> \\[ \\begin{align*}  CPU\\ Time &amp;= CPU\\ Clock\\ Cycles \\times Clock\\ Cycle\\ Time \\\\ &amp;=\\dfrac{ CPU\\ Clock\\ Cycles}{Clock\\ Rates} \\end{align*} \\] <p>Performance improved by * Reducing number of clock cycles * Increasing clock rate * Hardware designer must often trade off clock rate against cycle count</p> \\[ \\begin{align*} Clock\\ Cycles &amp;= Instruction\\ Count \\times Cycles\\ per\\ Instruction(CPI)\\\\ CPU\\ Time &amp; = Instruction\\ Count \\times CPI\\times CPI\\ Cycle\\ Time\\\\ &amp; = \\dfrac{Instruction\\ Count \\times CPI}{Clock\\ Rate} \\end{align*} \\] <p>\u7efc\u4e0a, \\(CPU\\ Time = \\dfrac{Instructions}{Program}\\times \\dfrac{Clock\\ Cycles}{Instruction}\\times \\dfrac{Seconds}{Clock Cycle}\\) </p> <p>Performance depends on  </p> <ul> <li>Algorithm: affects IC, possibly CPI</li> <li>Programming language: affects IC, CPI</li> <li>Compiler: affects IC, CPI</li> <li>Instruction set architecture \uff1aIC\uff0cCPI, \u65f6\u949f\u9891\u7387</li> </ul>"},{"location":"CO/CO1/#incredible-performance-improvement","title":"Incredible performance improvement","text":""},{"location":"CO/CO1/#uniprocessor","title":"Uniprocessor","text":"<p>Three Walls</p> <ul> <li>Power Wall \\(Power = Capactive\\ load \\times Voltage^2 \\times Frequency\\) </li> </ul> Example <p></p> <p>\u4e3b\u9891\u63d0\u9ad8\u4e86\u5f88\u591a\uff0c\u4f46\u529f\u8017\u5e76\u6ca1\u6709\u5f97\u5230\u8fd9\u4e48\u591a\u7684\u63d0\u5347\uff0c\u56e0\u4e3a\u6211\u4eec\u964d\u4f4e\u4e86\u5de5\u4f5c\u7535\u538b (5V-1V) \u73b0\u5728\u5de5\u4f5c\u7535\u538b\u4e0d\u80fd\u518d\u964d\u4f4e\u4e86\uff08\u5426\u5219\u6cc4\u6f0f\u7535\u6d41\u5360\u6bd4\u592a\u5927\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u80fd\u518d\u63d0\u9ad8\u529f\u7387\u4e86\u3002</p> <ul> <li>Memory Wall Memory \u7684\u6027\u80fd\u589e\u957f\u4e0d\u5982 CPU \u7684\u6027\u80fd\u589e\u957f\uff0c\u5927\u90e8\u5206\u65f6\u95f4\u82b1\u5728\u8bfb\u5199\u5185\u5b58\u4e86\uff0c\u5f71\u54cd\u6574\u4f53\u6027\u80fd\u3002\u76ee\u524d\u4f7f\u7528\u591a\u7ea7Cache</li> <li>ITP Wall difficulty to find enough parallelism in the instructions stream of a single process to keep higher performance processor cores busy. \u6307\u4ee4\u96c6\u5e76\u884c\u7a0b\u5ea6</li> </ul>"},{"location":"CO/CO1/#multiprocessors","title":"Multiprocessors","text":"<p>requires explicitly parallel programming.  </p> <p>Amdahl's Law</p> <p>Improve an aspect of a computer and expecting improvement in overall performance.  \\(T_{\\textbf{improved}}=\\dfrac{T_{\\textbf{affected}}}{\\textbf{improvement factor}}+T_{\\textbf{unaffected}}\\). </p> Example <p></p> <p>Corollary: make the common case fast.  </p> <ul> <li>Low Power Not at Idle.\u673a\u5668\u5728\u6ca1\u6709\u5de5\u4f5c\u65f6\u4e5f\u6709\u529f\u8017\u635f\u5931\u3002</li> <li> <p>MIPS as a Performance Metric</p> <ul> <li>MIPS: Millions of Instructions Per Second  </li> <li>\u8fd9\u4e2a\u53c2\u6570\u9700\u8981\u5728\u5176\u4ed6\u53c2\u6570\u4e00\u81f4\u65f6\uff0c\u624d\u6709\u6bd4\u8f83\u610f\u4e49\u3002\u4e0d\u540c\u7684 ISA \u4e4b\u95f4\u4e0d\u80fd\u4ec5\u51ed MIPS \u6bd4\u8f83\u3002</li> </ul> </li> </ul> <p>SPEC Power Benchmark</p> <ul> <li>Power consumption of server at different workload levels<ul> <li>Performance: ssj_ops/sec</li> <li>Power: Watts (Joules/sec)</li> </ul> </li> <li>Overall ssj_ops per Watt = \\(\\frac{\\sum\\limits_{i=0}^{10}{ssj\\_ops}_i}{\\sum\\limits_{i=0}^{10}{power}_i}\\)</li> </ul>"},{"location":"CO/CO2/","title":"chapter 2 Arithmetic for Computer","text":"<p>Quote</p> <p>\u672c\u5468\u8ba1\u7ec4\u662f\u5bf9\u7740HobbitQia\u7684\u7b14\u8bb0\u672c\u548c\u9a6c\u5fb7\u8001\u5e08\u7684\u667a\u4e91\u81ea\u5df1\u8865\u7684XD</p> <p>Abstract</p> <ul> <li>Introduction</li> <li>Signed and Unsigned Numbers-Possible Representations</li> <li>Arithmetic--Addition &amp; subtraction and ALU</li> <li>Multiplication</li> <li>Division</li> <li>Floating point numbers</li> </ul> <p>Warning</p> <p>\u672c\u5468\u8ba1\u7ec4\u6d89\u53ca\u5230\u4e86\u8ba1\u903b\u4e2d\u7684ALU\uff0cCLA\u7b49\u6982\u5ff5</p>"},{"location":"CO/CO2/#introduction","title":"Introduction","text":"<p>Instructions can be divided into 3 categories</p> <ul> <li>memory-reference instructions e.g. <code>lw, sw</code> \u9700\u8981 ALU \u8ba1\u7b97\u5185\u5b58\u5730\u5740</li> <li>arithmetic-logical instructions e.g. <code>add, sub, and, or, xor, slt</code> \u9700\u8981 ALU \u8fdb\u884c\u8ba1\u7b97</li> <li>control flow instructions e.g. <code>beq, bne, jal</code> \u9700\u8981 ALU \u8fdb\u884c\u6761\u4ef6\u5224\u65ad</li> </ul>"},{"location":"CO/CO2/#signed-number-formats","title":"Signed Number Formats","text":"<ul> <li>Sign and magnitude</li> <li>2's Complement</li> <li>1's Complement</li> <li> <p>Biased notation  </p> <p>Why we need biased notation</p> <p> </p> <p>\u4e0a\u56fe\u662f 32 \u4f4d\u7684\u4e8c\u8fdb\u5236\u8865\u7801\u8868\u793a\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5de6\u4fa7\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u5982\u679c\u770b\u4f5c\u65e0\u7b26\u53f7\u6570\uff0c\u90a3\u4ed6\u4eec\u662f\u4ece\u5c0f\u5230\u5927\u6392\u5217\u7684\uff1b\u4f46\u53f3\u4fa7\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u6574\u6570\u786e\u5b9e\u5206\u6bb5\u5355\u589e\u7684\u3002 \u6211\u4eec\u5e0c\u671b\u6709\u4e00\u79cd\u8fd9\u6837\u7684\u8868\u793a\uff0c\u80fd\u591f\u8ba9\u53f3\u4fa7\u7684\u5bf9\u5e94\u7684\u503c\u4e5f\u5355\u8c03\u9012\u589e\u3002 \u4e00\u4e2a\u60f3\u6cd5\u662f\u5bf9\u53f3\u4fa7\u6570\u52a0\u4e0a \\(2^{31}\\), \u76f8\u5f53\u4e8e\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u4e0b\u6700\u9ad8\u4f4d\u7ffb\u8f6c\u3002  </p> <p>\\([X]_b = 2^n + X\\)  \u4ece\u4e8c\u8fdb\u5236\u8865\u7801\u5230\u79fb\u7801\uff0c\u53ea\u9700\u8981\u7ffb\u8f6c\u7b26\u53f7\u4f4d\u5373\u53ef\u3002</p> </li> </ul>"},{"location":"CO/CO2/#overflow","title":"Overflow","text":"<p>\u51fa\u73b0Overflow\u65f6\u5019\uff0c\u8bb0\u5f55\u5f53\u524d\u6307\u4ee4\u5730\u5740\uff0c\u7136\u540e\u8df3\u8f6c\u4e13\u95e8\u5904\u7406\u5f02\u5e38\u6307\u4ee4\u7684\u5730\u65b9</p> <ul> <li>The sum of two numbers can exceed any representation</li> <li>The difference of two numbers can exceed any representation</li> <li>2's complement:Numbers change sign and size</li> </ul> <p>Example</p> <p> </p> <p></p>"},{"location":"CO/CO2/#reaction-of-overflow","title":"Reaction of Overflow","text":"<ul> <li>An exception (interrupt) occurs<ul> <li>Control jumps to predefined address for exception</li> <li>Interrupted address is saved for possible resumption</li> </ul> </li> <li>Signaling to application (Ada, Fortran) </li> <li>Ignore, don't always want to detect overflow</li> <li>note: <code>sltu, sltiu</code> for unsigned comparisons</li> </ul>"},{"location":"CO/CO2/#overflow-process","title":"Overflow process","text":"<ul> <li>Hardware detection in the ALU<ul> <li>Generation of an exception (interrupt)</li> </ul> </li> <li>Save the instruction address (not PC) in special register SEPC</li> <li>Jump to specific routine in OS<ul> <li>Correct &amp; return to program</li> <li>Return to program with error code</li> <li>Abort program</li> </ul> </li> </ul>"},{"location":"CO/CO2/#logical-operation","title":"Logical Operation","text":""},{"location":"CO/CO2/#logical-operations","title":"Logical operations","text":"<ul> <li>Logical shift operation</li> <li>right (srl)</li> <li>left (sll)  </li> </ul>"},{"location":"CO/CO2/#the-machine-instruction-for-the-instruction","title":"The machine instruction for the instruction","text":"<ul> <li>slli x11, x9, 3 </li> </ul>"},{"location":"CO/CO2/#constructing-an-alu","title":"Constructing an ALU","text":""},{"location":"CO/CO2/#alu-symbol-control","title":"ALU symbol &amp; Control","text":""},{"location":"CO/CO2/#carry-skip-adder","title":"Carry skip adder(\u8df3\u8dc3\u52a0\u6cd5\u5668)","text":"<ul> <li>Accelerating the carry by skipping the interior blocks</li> <li>Optimal speed with no-equal distribution of block length</li> </ul>"},{"location":"CO/CO2/#arithmetic","title":"Arithmetic","text":"<ul> <li>Substraction  </li> <li>Overflow detection: \\(C_n \\oplus C_{n-1}\\)</li> </ul> <p>\u6ce8: RISC-V \u4e0d\u652f\u6301 nor \u6307\u4ee4\u3002</p>"},{"location":"CO/CO2/#multiplication","title":"Multiplication","text":""},{"location":"CO/CO2/#unsigned-multiplication","title":"Unsigned multiplication","text":"<p>Multiplicand (\u88ab\u4e58\u6570) \\(\\times\\) Multiplier (\u4e58\u6570)  </p> <ul> <li> <p>\u5982\u679c\u4e58\u6570\u672b\u4f4d\u662f 1, \u52a0\u88ab\u4e58\u6570\uff0c\u5426\u5219\u52a0 0. \u968f\u540e\u5c06\u88ab\u4e58\u6570\u5de6\u79fb 1 \u4f4d\u3002      </p> <p>\u9700\u8981 128+128+64 bit \u7684\u5bc4\u5b58\u5668\uff0c\u548c\u4e00\u4e2a 128 bit ALU.  </p> </li> <li> <p>\u4e0d\u79fb\u88ab\u4e58\u6570\uff0c\u800c\u662f\u79fb\u79ef (product). \u8fd9\u6837 ALU \u53ea\u9700\u8981 64 \u4f4d\u3002      </p> Example <p></p> </li> <li> <p>\u8fd9\u91cc\u79ef\u6700\u5f00\u59cb\u53ea\u4fdd\u5b58\u5728\u5de6\u534a\u90e8\u5206\uff0c\u53f3\u534a\u90e8\u5206\u4e3a\u7a7a\u3002\u800c\u4e58\u6570\u4e5f\u8981\u53f3\u79fb\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u628a\u4e24\u4e2a\u6570\u62fc\u5230\u4e00\u8d77\uff0c\u540c\u65f6\u53f3\u79fb\u3002 </p> </li> </ul>"},{"location":"CO/CO2/#signed-multiplication","title":"Signed multiplication","text":"<p>\u6709\u7b26\u53f7\u76f8\u4e58\u4e0d\u80fd\u76f4\u63a5\u4e58\uff0c\u53ef\u4ee5\u5148\u7528\u7b26\u53f7\u4f4d\u51b3\u5b9a\u7ed3\u679c\u7b26\u53f7\uff0c\u518d\u5bf9\u7edd\u5bf9\u503c\u8fdb\u884c\u4e58\u6cd5\u3002 </p> <p>Booth's Algorithm</p> <p>  \u601d\u60f3\uff1a\u5982\u679c\u6709\u4e00\u4e32\\(1\\) - \u51cf\u6389\u4e58\u6570\u7684\u7b2c\u4e00\u4e2a1 - \u540e\u9762\u76841\u7684\u5e8f\u5217\u8fdb\u884c\u79fb\u4f4d - \u5f53\u4e0a\u4e00\u6b65\u662f\u6700\u540e\u4e00\u4e2a1\u65f6\u52a0 \u6700\u5f00\u59cb\u628a\u79ef\u653e\u5728\u9ad8\u4f4d\uff0c\u88ab\u4e58\u6570\u653e\u5728\u4f4e\u4f4d\u3002\uff08\u6570\u636e\u4fdd\u5b58\u65b9\u6cd5\u540c 2.1.1\uff09\u9ed8\u8ba4 \\(bit_{-1}=0\\)</p> <ul> <li> <p>Action</p> <ul> <li>10 - subtract multiplicand from left</li> <li>11 - nop</li> <li>01 - add multiplicand to left half</li> <li>00 - nop</li> </ul> <p>\u6bcf\u4e2a\u64cd\u4f5c\u7ed3\u675f\u540e\u90fd\u8981\u79fb\u4f4d\uff0c\u548c 2.1.1 \u4e2d\u7c7b\u4f3c</p> </li> </ul> <p>\u6ce8\u610f\u79fb\u4f4d\u65f6\u4e0d\u8981\u6539\u53d8\u7b26\u53f7\u4f4d\u3002</p> <p>Example</p> <p> </p> <p>\u88ab\u4e58\u6570 Multiplicand \u662f 0010,  \u4e58\u6570 Multiplier \u662f 1101. \u6700\u5f00\u59cb\u5c06\u79ef 0000 \u653e\u5728\u9ad8\u56db\u4f4d, 1101 \u4f5c\u4e3a\u4e58\u6570\u653e\u5728\u4f4e\u56db\u4f4d\u3002 \u6700\u5f00\u59cb 10, \u5373\u6267\u884c\u51cf\u64cd\u4f5c, \\(0000-0010=1110\\). \u7b54\u6848\u4f9d\u7136\u653e\u5728\u9ad8\u56db\u4f4d\uff0c\u968f\u540e\u53f3\u79fb\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u6ce8\u610f\u53f3\u79fb\u7684\u65f6\u5019\u662f\u7b97\u672f\u53f3\u79fb, \\(bit_{-1}\\) \u4e5f\u53ef\u80fd\u4f1a\u6539\u53d8\u3002</p>"},{"location":"CO/CO2/#faster-multiplication","title":"Faster Multiplication","text":"<p>32 \u4f4d\u6570\u4e58 32 \u4f4d\u6570\uff0c\u76f8\u5f53\u4e8e 32 \u4e2a 32 \u4f4d\u6570\u76f8\u52a0\u3002\uff08\u5e76\u884c\u52a0\u901f\uff09  </p>"},{"location":"CO/CO2/#division","title":"Division","text":"<p>Dividend (\u88ab\u9664\u6570) \\(\\div\\) Divisor (\u9664\u6570)</p> <ul> <li>\u5c06\u9664\u6570\u653e\u5230\u9ad8\u4f4d\u3002\u4ece\u9ad8\u4f4d\u5f00\u59cb\u51cf\uff0c\u51cf\u5b8c\u5c06\u9664\u6570\u53f3\u79fb\u3002\u5546\u4e5f\u968f\u4e4b\u4e0d\u65ad\u5de6\u79fb\u3002\u5982\u679c\u51cf\u5b8c\u4e4b\u540e\u662f\u8d1f\u6570\uff0c\u9700\u8981\u8fd8\u56de\u53bb\u3002      </li> </ul> 7\u00f72 <p></p> <ul> <li>\u9664\u6570\u4e0d\u52a8\uff0c\u88ab\u9664\u6570\u4e0d\u505c\u5730\u5f80\u5de6\u79fb\u3002\u51cf\u5230\u6700\u540e\u4e00\u6b21\uff0c\u5982\u679c\u662f\u5c0f\u4e8e 0 \u7684\uff0c\u8bf4\u660e\u4e0d\u7528\u51cf\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u4f59\u6570\uff0c\u9700\u8981\u53f3\u79fb\u79fb\u56de\u6765\u3002\uff08\u5373\u5c06\u5de6\u534a\u90e8\u5206\u53f3\u79fb\u4e00\u4f4d)\u56e0\u4e3a\u6bcf\u6b21\u90fd\u662f\u5c06\u9664\u6570\u548c\u88ab\u9664\u6570\u6700\u9ad8\u4f4d\u51cf\uff0c\u51cf\u4e86\u4e4b\u540e\u9ad8\u4f4d\u5c31\u6ca1\u7528\u4e86\uff0c\u53ef\u4ee5\u79fb\u51fa\u53bb\u3002</li> </ul> <p></p> <p>\u5b9e\u9645\u4e0a\u8fd9\u91cc\u7ed3\u679c\u662f 129 \u4f4d\uff0c\u9632\u6b62 carry \u4e22\u5931</p> Example <p> \u8fd9\u91cc\u6700\u5f00\u59cb\u4f59\u6570\u5c31\u662f\u6574\u4e2a\u88ab\u9664\u6570\u3002  \u7c7b\u4f3c\u4e58\u6cd5\uff0c\u8fd9\u91cc\u7684\u9664\u6570\u53ea\u548c\u88ab\u9664\u6570\u7684\u9ad8\u4f4d\u76f8\u51cf\u3002\u5982\u679c\u51cf\u51fa\u6765\u662f\u8d1f\u6570\uff0c\u9700\u8981\u52a0\u56de\u53bb\u3002\u6bcf\u6b21\u51cf\u5b8c\u4e4b\u540e\u5148\u5de6\u79fb\uff0c\u7136\u540e\u6700\u53f3\u8fb9\u7684\u4e00\u4f4d\u653e\u5546\u30024.1 \u65f6\u5176\u5b9e\u6211\u4eec\u5df2\u7ecf\u7ed3\u675f\u4e86\u9664\u6cd5\u64cd\u4f5c\uff0c\u6b64\u65f6\u7684\u9ad8\u4f4d\u5c31\u662f\u6211\u4eec\u7684\u4f59\u6570\uff0c\u4f46\u662f\u8fd9\u6700\u540e\u4e00\u6b21\u7684\u7ed3\u679c\u8fd8\u6ca1\u6709\u653e\u56de\u5230 Reminder \u4e2d\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u518d\u5f80\u5de6\u79fb\u4e00\u4f4d\u4e3a\u5546\u7559\u51fa\u7a7a\u95f4\uff0c\u653e\u5165\u540e\uff0c\u518d\u628a\u9ad8\u4f4d\u4f59\u6570\u5f80\u53f3\u79fb\u52a8\u4ee5\u62b5\u6d88\u5f71\u54cd\u3002</p>"},{"location":"CO/CO2/#signed-division","title":"signed division","text":"<ul> <li>\u5e26\u7b26\u53f7\u7684\u9664\u6cd5\uff1a\u8981\u6c42\u4f59\u6570\u548c\u88ab\u9664\u6570\u7b26\u53f7\u76f8\u540c\u3002   </li> <li>\u9664\u96f6\u4f1a\u4ea7\u751f\u6ea2\u51fa\uff0c\u7531\u8f6f\u4ef6\u68c0\u6d4b\u3002</li> </ul>"},{"location":"CO/CO2/#risc-v-division","title":"RISC-V Division","text":"<ul> <li>Four instructions:<ul> <li>div, rem: signed divide, remainder</li> <li>divu, remu: unsigned divide, remainder</li> </ul> </li> <li>Overflow and division-by-zero don\u2019t produce errors<ul> <li>Just return defined results</li> <li>Faster for the common case of no error</li> </ul> </li> </ul>"},{"location":"CS61A/","title":"CS61A","text":"<p>Abstract</p> <p>CS61A\u8bfe\u7a0b\u53ca\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p>"},{"location":"CS61A/61a1/","title":"1 \u4f7f\u7528\u51fd\u6570\u6784\u9020\u62bd\u8c61","text":""},{"location":"CS61A/61a1/#11","title":"1.1 \u7b2c\u4e00\u4e2a\u4f8b\u5b50","text":"<pre><code>from urllib.request import urlopen\nshakespeare = urlopen('https://www.composingprograms.com/shakespeare.txt')\nwords = set(shakespeare.read().decode().split())\nprint({w for w in words if len(w) == 6 and w[::-1] in words})\n# {'drawer', 'redder', 'diaper', 'reward', 'repaid'}\n</code></pre> <ul> <li> <p>\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f\uff1aPython \u4ee3\u7801\u7531\u8868\u8fbe\u5f0f\u548c\u8bed\u53e5\u7ec4\u6210\uff0c\u4ece\u5e7f\u4e49\u4e0a\u8bb2\uff0c\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7531\u4ee5\u4e0b\u6307\u4ee4\u7ec4\u6210   1. \u8ba1\u7b97\u4e00\u4e9b\u503c   2. \u6267\u884c\u4e00\u4e9b\u64cd\u4f5c</p> </li> <li> <p>\u51fd\u6570\uff1a\u51fd\u6570\u5c01\u88c5\u4e86\u64cd\u4f5c\u6570\u636e\u7684\u903b\u8f91\u3002<code>urlopen</code> \u5c31\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u800c\u7f51\u5740\u662f\u4e00\u4e2a\u6570\u636e\uff0c\u838e\u58eb\u6bd4\u4e9a\u7684\u620f\u5267\u662f\u53e6\u4e00\u4e2a\u6570\u636e\u3002\u4ece\u524d\u8005\u5230\u540e\u8005\u7684\u8f6c\u6362\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u5f88\u590d\u6742\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u79cd\u590d\u6742\u6027\u9690\u85cf\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\uff0c\u4ece\u800c\u80fd\u591f\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u8868\u8fbe\u5f0f\u6765\u8df3\u8fc7\u8be5\u8fc7\u7a0b\u3002\u51fd\u6570\u662f\u672c\u7ae0\u7684\u4e3b\u9898\u3002</p> </li> <li>\u5bf9\u8c61\uff1a<code>set</code> \u5c31\u662f\u4e00\u79cd\u5bf9\u8c61\uff0c\u652f\u6301\u5982\u8ba1\u7b97\u4ea4\u96c6\u548c\u96c6\u5408\u5173\u7cfb\uff08membership\uff09\u7b49\u8fd0\u7b97\u3002\u5bf9\u8c61\u65e0\u7f1d\u6574\u5408\u4e86\u6570\u636e\u4ee5\u53ca\u7528\u4e8e\u64cd\u4f5c\u8be5\u6570\u636e\u7684\u903b\u8f91\uff0c\u5e76\u9690\u85cf\u4e86\u4e8c\u8005\u7684\u590d\u6742\u6027\u3002\u5bf9\u8c61\u662f\u7b2c\u4e8c\u7ae0\u7684\u4e3b\u9898\u3002</li> <li>\u89e3\u91ca\u5668\uff1a\u590d\u5408\u8868\u8fbe\u5f0f\u7684\u6c42\u89e3\u9700\u8981\u4ee5\u4e00\u4e2a\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u6765\u7cbe\u786e\u89e3\u91ca\u4ee3\u7801\u7684\u8fc7\u7a0b\u3002\u5b9e\u73b0\u8fd9\u6837\u7684\u8fc7\u7a0b\uff0c\u7528\u4e8e\u8ba1\u7b97\u590d\u5408\u8868\u8fbe\u5f0f\u7684\u7a0b\u5e8f\u5c31\u79f0\u4e3a\u89e3\u91ca\u5668\u3002\u89e3\u91ca\u5668\u7684\u8bbe\u8ba1\u548c\u5b9e\u73b0\u662f\u7b2c\u4e09\u7ae0\u7684\u4e3b\u9898\u3002</li> </ul>"},{"location":"CS61A/61a1/#12","title":"1.2 \u7f16\u7a0b\u8981\u7d20","text":"<p>\u8fd9\u6837\uff0c\u5f53\u6211\u4eec\u63cf\u8ff0\u4e00\u79cd\u8bed\u8a00\u65f6\uff0c\u5c31\u9700\u8981\u7279\u522b\u6ce8\u610f\u8be5\u8bed\u8a00\u6240\u63d0\u4f9b\u7684\u80fd\u591f\u5c06\u7b80\u5355\u601d\u60f3\u7ec4\u5408\u6210\u590d\u6742\u601d\u60f3\u7684\u5de5\u5177\u3002\u6bcf\u4e00\u79cd\u5f3a\u5927\u7684\u8bed\u8a00\u90fd\u6709\u8fd9\u6837\u4e09\u79cd\u673a\u5236\uff1a</p> <ul> <li>\u539f\u59cb\u8868\u8fbe\u5f0f\u548c\u8bed\u53e5\uff1a\u8bed\u8a00\u6240\u5173\u5fc3\u7684\u6700\u7b80\u5355\u7684\u4e2a\u4f53</li> <li>\u7ec4\u5408\u65b9\u6cd5\uff1a\u7531\u7b80\u5355\u5143\u7d20\u7ec4\u5408\u6784\u5efa\u590d\u5408\u5143\u7d20</li> <li>\u62bd\u8c61\u65b9\u6cd5\uff1a\u547d\u540d\u590d\u5408\u5143\u7d20\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u5355\u5143\u8fdb\u884c\u64cd\u4f5c</li> </ul>"},{"location":"CS61A/61a1/#121","title":"1.2.1 \u51fd\u6570\u7c7b\u578b","text":"<ul> <li> <p>\u7eaf\u51fd\u6570\uff08Pure functions\uff09\uff1a\u51fd\u6570\u6709\u4e00\u4e9b\u8f93\u5165\uff08\u53c2\u6570\uff09\u5e76\u8fd4\u56de\u4e00\u4e9b\u8f93\u51fa\uff08\u8c03\u7528\u8fd4\u56de\u7ed3\u679c\uff09\u3002</p> </li> <li> <p>\u975e\u7eaf\u51fd\u6570\uff08Non-pure functions\uff09\uff1a\u9664\u4e86\u8fd4\u56de\u503c\u5916\uff0c\u8c03\u7528\u4e00\u4e2a\u975e\u7eaf\u51fd\u6570\u8fd8\u4f1a\u4ea7\u751f\u5176\u4ed6\u6539\u53d8\u89e3\u91ca\u5668\u548c\u8ba1\u7b97\u673a\u7684\u72b6\u6001\u7684\u526f\u4f5c\u7528\uff08side effect\uff09\u3002\u4e00\u4e2a\u5e38\u89c1\u7684\u526f\u4f5c\u7528\u5c31\u662f\u4f7f\u7528 <code>print</code> \u51fd\u6570\u4ea7\u751f\uff08\u975e\u8fd4\u56de\u503c\u7684\uff09\u989d\u5916\u8f93\u51fa\u3002</p> </li> </ul> <p>\u5982\u4f55\u7406\u89e3\u73af\u5883\uff1a</p> <ul> <li> <p>\u6c42\u89e3\u8868\u8fbe\u5f0f\u7684\u73af\u5883\u7531 \u5e27 \u5e8f\u5217\u7ec4\u6210\uff0c\u5b83\u4eec\u53ef\u4ee5\u88ab\u63cf\u8ff0\u4e3a\u4e00\u4e9b\u76d2\u5b50\u3002\u6bcf\u4e2a\u5e27\u90fd\u5305\u542b\u4e86\u4e00\u4e9b \u7ed1\u5b9a\uff0c\u5b83\u4eec\u5c06\u540d\u79f0\u4e0e\u5bf9\u5e94\u7684\u503c\u76f8\u5173\u8054\u3002\u5168\u5c40 \u5e27\uff08global frame\uff09\u53ea\u6709\u4e00\u4e2a\u3002\u8d4b\u503c\u548c\u5bfc\u5165\u8bed\u53e5\u4f1a\u5c06\u6761\u76ee\u6dfb\u52a0\u5230\u5f53\u524d\u73af\u5883\u7684\u7b2c\u4e00\u5e27\u3002\u76ee\u524d\uff0c\u6211\u4eec\u7684\u73af\u5883\u4ec5\u7531\u5168\u5c40\u5e27\u7ec4\u6210\u3002</p> </li> <li> <p>\u51fd\u6570\u540d\u79f0\u91cd\u590d\u4e24\u6b21\uff0c\u4e00\u6b21\u5728\u73af\u5883\u5e27\u4e2d\uff0c\u53e6\u4e00\u6b21\u662f\u4f5c\u4e3a\u51fd\u6570\u5b9a\u4e49\u7684\u4e00\u90e8\u5206\u3002\u51fd\u6570\u5b9a\u4e49\u4e2d\u51fa\u73b0\u7684\u540d\u79f0\u53eb\u505a \u5185\u5728\u540d\u79f0\uff08intrinsic name\uff09\uff0c\u5e27\u4e2d\u7684\u540d\u79f0\u53eb\u505a \u7ed1\u5b9a\u540d\u79f0\uff08bound name\uff09\u3002\u4e24\u8005\u4e4b\u95f4\u6709\u4e00\u4e2a\u533a\u522b\uff1a\u4e0d\u540c\u7684\u540d\u79f0\u53ef\u80fd\u6307\u7684\u662f\u540c\u4e00\u4e2a\u51fd\u6570\uff0c\u4f46\u8be5\u51fd\u6570\u672c\u8eab\u53ea\u6709\u4e00\u4e2a\u5185\u5728\u540d\u79f0</p> </li> <li> <p>\u8fd9\u91cc\u7684\u201c\u5e27\u201d\u53ef\u4ee5\u7406\u89e3\u4e3aC\u8bed\u8a00\u63d0\u5230\u7684\u5c40\u90e8\u53d8\u91cf\u4e0e\u5168\u5c40\u53d8\u91cf</p> </li> </ul> <p>\u51fd\u6570\u662f\u6240\u6709\u7a0b\u5e8f\uff08\u65e0\u8bba\u5927\u5c0f\uff09\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\uff0c\u5e76\u4e14\u662f\u6211\u4eec\u4f7f\u7528\u7f16\u7a0b\u8bed\u8a00\u6765\u8868\u8fbe\u8ba1\u7b97\u8fc7\u7a0b\u7684\u4e3b\u8981\u5a92\u4ecb\u3002</p> <ul> <li>\u6bcf\u4e2a\u51fd\u6570\u5e94\u8be5\u53ea\u8d1f\u8d23\u4e00\u4e2a\u4efb\u52a1\uff0c\u4e14\u8be5\u4efb\u52a1\u8981\u7528\u4e00\u4e2a\u7b80\u77ed\u7684\u540d\u79f0\u6765\u8bc6\u522b\uff0c\u5e76\u5728\u4e00\u884c\u6587\u672c\u4e2d\u8fdb\u884c\u63cf\u8ff0\u3002\u6309\u987a\u5e8f\u6267\u884c\u591a\u4e2a\u4efb\u52a1\u7684\u51fd\u6570\u5e94\u8be5\u5206\u4e3a\u591a\u4e2a\u51fd\u6570\u3002</li> <li>\u4e0d\u8981\u91cd\u590d\u81ea\u5df1<code>\uff08Don't repeat yourself\uff09</code>\u662f\u8f6f\u4ef6\u5de5\u7a0b\u7684\u6838\u5fc3\u539f\u5219\u3002\u8fd9\u4e2a\u6240\u8c13\u7684 DRY \u539f\u5219\u6307\u51fa\uff0c\u591a\u4e2a\u4ee3\u7801\u7247\u6bb5\u4e0d\u5e94\u8be5\u63cf\u8ff0\u91cd\u590d\u7684\u903b\u8f91\u3002\u76f8\u53cd\uff0c\u903b\u8f91\u5e94\u8be5\u53ea\u5b9e\u73b0\u4e00\u6b21\uff0c\u4e3a\u5176\u6307\u5b9a\u4e00\u4e2a\u540d\u79f0\u540e\u591a\u6b21\u4f7f\u7528\u3002\u5982\u679c\u4f60\u53d1\u73b0\u81ea\u5df1\u6b63\u5728\u590d\u5236\u7c98\u8d34\u4e00\u6bb5\u4ee3\u7801\uff0c\u90a3\u4e48\u4f60\u53ef\u80fd\u5df2\u7ecf\u627e\u5230\u4e86\u8fdb\u884c\u51fd\u6570\u62bd\u8c61\u7684\u673a\u4f1a\u3002</li> <li>\u5b9a\u4e49\u901a\u7528\u7684\u51fd\u6570\u3002\u6bd4\u5982\u4f5c\u4e3a <code>pow</code> \u51fd\u6570\u7684\u4e00\u4e2a\u7279\u4f8b\u7684\u5e73\u65b9\u51fd\u6570\u5c31\u4e0d\u5728 Python \u5e93\u4e2d\uff0c\u56e0\u4e3a <code>pow</code> \u51fd\u6570\u53ef\u4ee5\u5c06\u6570\u5b57\u8ba1\u7b97\u4e3a\u4efb\u610f\u6b21\u65b9\u3002</li> </ul>"},{"location":"CS61A/61a1/#13","title":"1.3 \u51fd\u6570\u6784\u9020","text":""},{"location":"CS61A/61a1/#higher-order-function","title":"Higher-Order Function","text":"<pre><code>def area_square(r):\n    return r * r\ndef area_circle(r):\n    return r * r * pi\ndef area_hexagon(r):\n    return r * r * 3 * sqrt(3)/2\n</code></pre> <ul> <li>\u6211\u4eec\u5bf9\u8fd9\u4e09\u4e2a\u51fd\u6570\u8fdb\u884c\u6574\u5408</li> </ul> <pre><code>def area(r, shape_constant):\n    assert r &gt; 0, 'A lenght must be positive'\n    return r * r * shape_constant\n\ndef area_square(r):\n    return area(r,1)\n\ndef area_circle(r):\n    return area(r,pi)\n\ndef area_hexagon(r):\n    return area(r, 3 * sqrt(3) / 2)\n</code></pre>"},{"location":"CS61A/61a1/#14-function-as-return-values","title":"1.4 Function as Return Values","text":"<pre><code>def make_adder(n):\n    def adder(k):\n        return k + n\n    return adder\n</code></pre> <ul> <li>Functions  defined within other function bodies are bound to names in a local frame</li> </ul> <pre><code>&gt;&gt;&gt; make_adder(2000)(13)\n2013\n&gt;&gt;&gt; f = make_adder(2000)\n&gt;&gt;&gt; f(13)\n2013\n</code></pre>"},{"location":"CS61A/61a1/#15-lambda","title":"1.5 Lambda \u8868\u8fbe\u5f0f","text":"<pre><code>square = lambda x: x * x\n</code></pre> <ul> <li><code>square = x * x</code> : <code>An expression: this one evaluates to a number</code></li> <li> <p><code>square = lambda x: x * x</code>: <code>Also an expression: evaluates to a function</code></p> </li> <li> <p><code>def square(x)</code>:<code>similar to lambda</code></p> </li> </ul> <ol> <li><code>both  create a function with the same domain, range, and behavior</code></li> <li><code>both bind that function to the square</code></li> <li><code>both functions have as their parent the frame in which they were defined</code></li> <li><code>only the def statement gives the function an intrinsic(\u56fa\u5b9a\u7684) name</code></li> </ol>"},{"location":"CS61A/61a1/#16-return","title":"1.6 Return\u51fd\u6570\u8fd4\u56de","text":"<pre><code>def search(f):\n    x = 0\n    while True:\n        if f(x):\n            return x\n        x += 1\n\ndef is_three(x):\n    return x == 3\n\ndef square(x):\n    return x*x\n\ndef inverse(f):\n    return lambda y:search(lambda x: f(x) == y)\n</code></pre>"},{"location":"CS61A/61a1/#17","title":"1.7 \u5206\u652f\u63a7\u5236","text":"<pre><code>def if_(c,f,t):\n    if c:\n        f\n    else:\n        t\n</code></pre> <p>\u8fd9\u6837\u662f\u884c\u4e0d\u901a\u7684\uff0c\u56e0\u4e3a\u5728\u4f20\u5165\u7684\u65f6\u5019\uff0c<code>if_</code>\u4f1a\u5bf9\u8fd9\u4e9b\u8fdb\u884c\u8bc4\u4f30\uff0c<code>f</code>\u548c<code>t</code>\u5982\u679c\u662f<code>invalid</code>\u7684\u5c31\u4f1a\u62a5\u9519\u3002</p>"},{"location":"CS61A/61a1/#18-self-reference","title":"1.8 Self-Reference","text":"<pre><code>def print_all(x)\n    print(x)\n    return print_all\n</code></pre> <pre><code>def print_sums(x):\n    print(x)\n    def next_sum(y):\n        return print_sums(x+y)\n    return next_sum\n</code></pre>"},{"location":"CS61A/61a1/#19-function-currying","title":"1.9 Function Currying","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9ad8\u9636\u51fd\u6570\u5c06\u4e00\u4e2a\u63a5\u53d7\u591a\u4e2a\u53c2\u6570\u7684\u51fd\u6570\u8f6c\u6362\u4e3a\u4e00\u4e2a\u51fd\u6570\u94fe\uff0c\u6bcf\u4e2a\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\u3002\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u51fd\u6570 <code>f(x, y)</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u53e6\u4e00\u4e2a\u51fd\u6570 <code>g</code> \u4f7f\u5f97 <code>g(x)(y)</code> \u7b49\u4ef7\u4e8e <code>f(x, y)</code>\u3002\u5728\u8fd9\u91cc\uff0c<code>g</code> \u662f\u4e00\u4e2a\u9ad8\u9636\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u5355\u4e2a\u53c2\u6570 <code>x</code> \u5e76\u8fd4\u56de\u53e6\u4e00\u4e2a\u63a5\u53d7\u5355\u4e2a\u53c2\u6570 <code>y</code> \u7684\u51fd\u6570\u3002\u8fd9\u79cd\u8f6c\u6362\u79f0\u4e3a\u67ef\u91cc\u5316\uff08Curring\uff09\u3002</p> <p>\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49 <code>pow</code> \u51fd\u6570\u7684\u67ef\u91cc\u5316\u7248\u672c\uff1a</p> <pre><code>&gt;&gt;&gt; def curried_pow(x):\n        def h(y):\n            return pow(x, y)\n        return h\n&gt;&gt;&gt; curried_pow(2)(3)\n8\n</code></pre>"},{"location":"CS61A/61a1/#110-decorator","title":"1.10 \u51fd\u6570\u88c5\u9970\u5668 Decorator","text":"<pre><code>def trace1(fn):\n    def traced(x):\n        print('Calling',fn,'on argument',x)\n        return fn(x)\n    return traced\n\n@trace1\ndef square(x):\n    return x*x\n\n@trace1\ndef sum_squares_up_to(n):\n    k = 1\n    total = 0\n    while k &lt;= n:\n        total, k = total + square(k), k+1\n    return total\n</code></pre>"},{"location":"CS61A/61a1/#111","title":"1.11 \u65ad\u8a00\u6d4b\u8bd5","text":"<p>\u65ad\u8a00\uff08Assertions\uff09\uff1a\u7a0b\u5e8f\u5458\u4f7f\u7528 assert \u8bed\u53e5\u6765\u9a8c\u8bc1\u662f\u5426\u7b26\u5408\u9884\u671f\uff0c\u4f8b\u5982\u9a8c\u8bc1\u88ab\u6d4b\u8bd5\u51fd\u6570\u7684\u8f93\u51fa\u3002assert \u8bed\u53e5\u5728\u5e03\u5c14\u4e0a\u4e0b\u6587\u4e2d\u6709\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u540e\u9762\u662f\u4e00\u4e2a\u5e26\u5f15\u53f7\u7684\u6587\u672c\u884c\uff08\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u90fd\u53ef\u4ee5\uff0c\u4f46\u8981\u4fdd\u6301\u4e00\u81f4\uff09\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u7ed3\u679c\u4e3a\u5047\u503c\uff0c\u5219\u663e\u793a\u8be5\u884c</p> <pre><code>&gt;&gt;&gt; def fib_test():\n\u00a0\u00a0\u00a0     assert fib(2) == 1, '\u7b2c\u4e8c\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5e94\u8be5\u662f 1'\n\u00a0\u00a0\u00a0     assert fib(3) == 1, '\u7b2c\u4e09\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5e94\u8be5\u662f 1'\n\u00a0\u00a0\u00a0     assert fib(50) == 7778742049, '\u5728\u7b2c\u4e94\u5341\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u53d1\u751f Error'\n</code></pre>"},{"location":"CS61A/61a2/","title":"2 \u4f7f\u7528\u6570\u636e\u7ed3\u6784\u6784\u9020\u62bd\u8c61","text":""},{"location":"CS61A/61a2/#21","title":"2.1 \u5e8f\u5217","text":"<pre><code>digits  = [1, 8, 2, 8]\n\nlen(digits) = 4\n\ndigits[3] = 8         # getitem(digits, 3)\n\n[2, 7] + digits * 2   # add([2, 7], mul(digits, 2))\n[2, 7, 1, 8, 2, 8, 1, 8, 2, 8]\n\npairs = [[10, 20], [30, 40]]\npairs[1] = [30, 40]\npairs[1][0] = 30\n</code></pre>"},{"location":"CS61A/61a2/#22-for","title":"2.2 For\u5faa\u73af","text":"<pre><code>for &lt;name&gt; in &lt;expression&gt;:\n    &lt;suite&gt;\n</code></pre>"},{"location":"CS61A/61a2/#23-sequence-unpacking-in-for-statements","title":"2.3 Sequence Unpacking in For Statements(\u5e8f\u5217\u89e3\u5305)","text":"<pre><code>pairs = [[1, 2], [2, 2], [3, 2], [4, 4]]\nsame_count = 0\n\nfor x, y in pairs:\n    if x == y:\n        same_count += 1\n</code></pre>"},{"location":"CS61A/61a2/#24-equal-and-same","title":"2.4 Equal and Same","text":"<pre><code>b = [10]\na = b\n&gt;&gt;&gt; a == b\nTrue\n&gt;&gt;&gt; b.append(20)\n&gt;&gt;&gt; a == b\nTrue\n</code></pre> <pre><code>b = [10]\na = [10]\na == b\n&gt;&gt;&gt; b.append(20)\n&gt;&gt;&gt; a == b\nFalse\n</code></pre> <pre><code>&gt;&gt;&gt; s = [3, 4]\n&gt;&gt;&gt; t = [5, 6]\n&gt;&gt;&gt; s.append(t)\n&gt;&gt;&gt; s\n[3, 4, [5, 6]]\n&gt;&gt;&gt; t = 0\n&gt;&gt;&gt; s\n[3, 4, [5, 6]]\n&gt;&gt;&gt; t\n0\n&gt;&gt;&gt; t = [5, 6]\n&gt;&gt;&gt; s.extend(t)\n&gt;&gt;&gt; s\n[3, 4, [5, 6], 5, 6]\n&gt;&gt;&gt; t = 0\n&gt;&gt;&gt; s\n[3, 4, [5, 6], 5, 6]\n</code></pre>"},{"location":"CS61A/61a3/","title":"3 \u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1","text":"<p>Abstract</p> <p>\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff08OOP\uff09\u662f\u4e00\u79cd\u7ec4\u7ec7\u7a0b\u5e8f\u7684\u65b9\u6cd5\uff0c\u5b83\u5c06\u672c\u7ae0\u4ecb\u7ecd\u7684\u8bb8\u591a\u601d\u60f3\u7ed3\u5408\u5728\u4e00\u8d77\u3002\u4e0e\u6570\u636e\u62bd\u8c61\u4e2d\u7684\u51fd\u6570\u4e00\u6837\uff0c\u7c7b\u521b\u5efa\u4e86\u5728\u4f7f\u7528\u548c\u5b9e\u73b0\u6570\u636e\u4e4b\u95f4\u7684\u62bd\u8c61\u5c4f\u969c\u3002\u4e0e\u8c03\u5ea6\u5b57\u5178\uff08dispatch dictionaries\uff09\u4e00\u6837\uff0c\u5bf9\u8c61\u54cd\u5e94\u884c\u4e3a\u8bf7\u6c42\u3002\u4e0e\u53ef\u53d8\u6570\u636e\u7ed3\u6784\u4e00\u6837\uff0c\u5bf9\u8c61\u5177\u6709\u65e0\u6cd5\u4ece\u5168\u5c40\u73af\u5883\u76f4\u63a5\u8bbf\u95ee\u7684\u672c\u5730\u72b6\u6001\u3002Python \u5bf9\u8c61\u7cfb\u7edf\u63d0\u4f9b\u4e86\u65b9\u4fbf\u7684\u8bed\u6cd5\u6765\u4fc3\u8fdb\u4f7f\u7528\u8fd9\u4e9b\u6280\u672f\u6765\u7ec4\u7ec7\u7a0b\u5e8f\u3002\u8fd9\u79cd\u8bed\u6cd5\u7684\u5927\u90e8\u5206\u5728\u5176\u4ed6\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00\u4e4b\u95f4\u5171\u4eab\u3002</p>"},{"location":"CS61A/61a3/#31-definition","title":"3.1 Definition(\u7c7b\u7684\u5b9a\u4e49)","text":"<pre><code>class Account:\n    def __init__(self, account_holder):\n        self.balance = 0\n        self.holder = account_holder\n    def deposit(self, amount):\n        self.balance = self.balance + amount\n        return self.balance\n    def withdraw(self, amount):\n        if amount &gt; self.balance:\n            return 'Insufficient funds'\n        self.balance = self.balance - amount\n        return self.balance\n</code></pre> <p>\u8fd9\u91cc\u5efa\u4e86\u4e00\u4e2a<code>Account</code>\u7c7b</p>"},{"location":"CS61A/61a3/#32-inheritance","title":"3.2 Inheritance(\u7ee7\u627f)","text":"<p>Abstract</p> <p>\u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8303\u5f0f\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u53d1\u73b0\u4e0d\u540c\u7c7b\u578b\u4e4b\u95f4\u5b58\u5728\u5173\u8054\uff0c\u5c24\u5176\u662f\u5728\u7c7b\u7684\u4e13\u4e1a\u5316\u7a0b\u5ea6\u4e0a\u3002\u5373\u4f7f\u4e24\u4e2a\u7c7b\u5177\u6709\u76f8\u4f3c\u7684\u5c5e\u6027\uff0c\u5b83\u4eec\u7684\u7279\u6b8a\u6027\u4e5f\u53ef\u80fd\u4e0d\u540c\u3002</p> <pre><code>class CheckingAccount(Account):\n        \"\"\"\u4ece\u8d26\u53f7\u53d6\u94b1\u4f1a\u6263\u51fa\u624b\u7eed\u8d39\u7684\u8d26\u53f7\"\"\"\n        withdraw_charge = 1\n        interest = 0.01\n        def withdraw(self, amount):\n            return Account.withdraw(self, amount + self.withdraw_charge)\n</code></pre> <p>Note</p> <p>Python \u652f\u6301\u5b50\u7c7b\u4ece\u591a\u4e2a\u57fa\u7c7b\u7ee7\u627f\u5c5e\u6027\u7684\u6982\u5ff5\uff0c\u8fd9\u79cd\u8bed\u8a00\u529f\u80fd\u79f0\u4e3a\u591a\u91cd\u7ee7\u627f\uff08multiple inheritance\uff09\u3002</p> <pre><code>&gt;&gt;&gt; class AsSeenOnTVAccount(CheckingAccount, SavingsAccount):\n        def __init__(self, account_holder):\n            self.holder = account_holder\n            self.balance = 1           # \u8d60\u9001\u7684 1 $!\n</code></pre> <ul> <li>\u5982\u679c\u6ca1\u6709\u975e\u6b67\u4e49\u5f15\u7528\uff0c\u5c31\u6309\u9884\u671f\u6b63\u786e\u89e3\u6790</li> <li>\u4f46\u662f\uff0c\u5f53\u5f15\u7528\u4e0d\u660e\u786e\u65f6\uff0c\u4f8b\u5982\u5bf9<code>Account</code>\u548c<code>CheckingAccount</code>\u4e2d\u5b9a\u4e49\u7684<code>withdraw</code>\u65b9\u6cd5\u7684\u5f15\u7528\u3002Python\u4f7f\u7528\u79f0\u4e3aC3\u65b9\u6cd5\u89e3\u6790\u6392\u5e8f\u7684\u9012\u5f52\u7b97\u6cd5\u89e3\u6790\u6b64\u540d\u79f0\u3002\u53ef\u4ee5\u5728\u6240\u6709\u7c7b\u4e0a\u4f7f\u7528mro\u65b9\u6cd5\u67e5\u8be2\u4efb\u4f55\u7c7b\u7684\u65b9\u6cd5\u89e3\u6790\u987a\u5e8f\u3002</li> </ul> <pre><code>&gt;&gt;&gt; [c.__name__ for c in AsSeenOnTVAccount.mro()]\n['AsSeenOnTVAccount', 'CheckingAccount', 'SavingsAccount', 'Account', 'object']\n</code></pre>"},{"location":"CS61A/61a3/#33","title":"3.3 \u5b9e\u4f8b","text":"<p>Abstract</p> <p>\u6211\u4eec\u770b\u5230\u7c7b\u548c\u5bf9\u8c61\u672c\u8eab\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u548c\u5b57\u5178\u6765\u8868\u793a\u3002\u901a\u8fc7\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5b9e\u73b0\u5bf9\u8c61\u7cfb\u7edf\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u8bf4\u660e\u4f7f\u7528\u5bf9\u8c61\u7684\u9690\u55bb\u5e76\u4e0d\u9700\u8981\u7279\u5b9a\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u5373\u4f7f\u5728\u6ca1\u6709\u5185\u7f6e\u5bf9\u8c61\u7cfb\u7edf\u7684\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u662f\u9762\u5411\u5bf9\u8c61\u7684\u3002\u4e3a\u4e86\u5b9e\u73b0\u5bf9\u8c61\uff0c\u6211\u4eec\u5c06\u653e\u5f03\u70b9\u8868\u793a\u6cd5\uff08\u5b83\u9700\u8981\u5185\u7f6e\u8bed\u8a00\u652f\u6301\uff09\uff0c\u800c\u662f\u521b\u5efa\u884c\u4e3a\u65b9\u5f0f\u4e0e\u5185\u7f6e\u5bf9\u8c61\u7cfb\u7edf\u7684\u5143\u7d20\u975e\u5e38\u76f8\u4f3c\u7684\u8c03\u5ea6\u5b57\u5178\u3002\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u5982\u4f55\u901a\u8fc7\u8c03\u5ea6\u5b57\u5178\u5b9e\u73b0\u6d88\u606f\u4f20\u9012\u7684\u884c\u4e3a\u3002\u4e3a\u4e86\u5b8c\u5168\u5b9e\u73b0\u5bf9\u8c61\u7cfb\u7edf\uff0c\u6211\u4eec\u5728\u5b9e\u4f8b\u3001\u7c7b\u548c\u57fa\u7c7b\u4e4b\u95f4\u53d1\u9001\u6d88\u606f\uff0c\u5b83\u4eec\u90fd\u662f\u5305\u542b\u5c5e\u6027\u7684\u5b57\u5178\u3002</p> <p>\u5728\u5f00\u59cb\u6211\u4eec\u7684\u5b9e\u73b0\u4e4b\u524d\uff0c\u5047\u5b9a\u6211\u4eec\u6709\u4e00\u4e2a\u7c7b\u7684\u5b9e\u73b0\uff0c\u5b83\u53ef\u4ee5\u67e5\u51fa\u4efb\u4f55\u4e0d\u5c5e\u4e8e\u5b9e\u4f8b\u7684\u540d\u79f0\u3002\u6211\u4eec\u5c06\u4e00\u4e2a\u7c7b\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 make_instance \u7684\u5f62\u53c2 cls</p> <pre><code>def make_instance(cls):\n    \"\"\"Return a new object instance, which is a dispatch dictionary.\"\"\"\n    def get_value(name):\n        if name in attributes:\n            return attributes[name]\n        else:\n            value = cls['get'](name)\n            return bind_method(value, instance)\n    def set_value(name, value):\n        attributes[name] = value\n    attributes = {}\n    instance = {'get': get_value, 'set': set_value}\n    return instance\n</code></pre> <p><code>instance</code>\u662f\u4e00\u4e2a\u80fd\u591f\u54cd\u5e94<code>get</code>\u548c<code>set</code>\u6d88\u606f\u7684\u8c03\u5ea6\u5b57\u5178\u3002<code>set</code>\u6d88\u606f\u548c<code>Python</code>\u5bf9\u8c61\u7cfb\u7edf\u4e2d\u7684\u5c5e\u6027\u8d4b\u503c\u64cd\u4f5c\u76f8\u5bf9\u5e94\uff1a\u6240\u6709\u5df2\u7ecf\u8d4b\u503c\u7684\u5c5e\u6027\u76f4\u63a5\u5b58\u50a8\u5728\u5bf9\u8c61\u7684\u672c\u5730\u5c5e\u6027\u5b57\u5178\u4e2d\u3002\u5728<code>get</code>\u6d88\u606f\u4e2d\uff0c\u5982\u679c<code>name</code>\u6ca1\u6709\u51fa\u73b0\u5728\u672c\u5730<code>attributes</code>\u5b57\u5178\u4e2d\uff0c\u5219\u4f1a\u5728\u7c7b\u4e2d\u67e5\u627e\u3002\u5982\u679c\u4ece\u7c7b\u4e2d\u67e5\u627e\u8fd4\u56de\u7684\u503c\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5219\u8fd9\u4e2a\u51fd\u6570\u5fc5\u987b\u88ab\u7ed1\u5b9a\u5230\u5b9e\u4f8b\u3002</p> <pre><code>def bind_method(value, instance):\n    \"\"\"Return a bound method if value is callable, or value otherwise.\"\"\"\n    if callable(value):\n        def method(*args):\n            return value(instance, *args)\n        return method\n    else:\n        return value\n</code></pre> <p>\u6211\u4eec\u57fa\u4e8e\u5b57\u5178\u6784\u5efa\u7684\u5bf9\u8c61\u7cfb\u7edf\u5728\u5b9e\u73b0\u4e0a\u4e0e<code>Python</code>\u4e2d\u7684\u5185\u7f6e\u5bf9\u8c61\u7cfb\u7edf\u975e\u5e38\u76f8\u4f3c\u3002\u5728 Python \u4e2d\uff0c\u4efb\u4f55\u7528\u6237\u5b9a\u4e49\u7684\u7c7b\u7684\u5b9e\u4f8b\u90fd\u6709\u4e00\u4e2a\u7279\u6b8a\u5c5e\u6027<code>__dict__</code>\uff0c\u5b83\u5c06\u8be5\u5bf9\u8c61\u7684\u672c\u5730\u5b9e\u4f8b\u5c5e\u6027\u5b58\u50a8\u5728\u4e00\u4e2a\u5b57\u5178\u4e2d\uff0c\u5c31\u50cf\u6211\u4eec\u7684<code>attribute</code>\u5b57\u5178\u4e00\u6837\u3002\u4f46<code>Python</code>\u4e0e\u6211\u4eec\u7684\u7cfb\u7edf\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u533a\u5206\u4e86\u4e00\u4e9b\u7279\u6b8a\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u4e0e\u5185\u7f6e\u51fd\u6570\u4ea4\u4e92\uff0c\u4ee5\u786e\u4fdd\u8fd9\u4e9b\u51fd\u6570\u5bf9\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u53c2\u6570\u90fd\u80fd\u6b63\u786e\u8fd0\u884c\u3002</p>"},{"location":"CS61A/61a3/#34","title":"3.4 \u6cdb\u578b\u7f16\u7a0b","text":"<p>Abstract</p> <p>\u5bf9\u8c61\u62bd\u8c61\u7684\u4e00\u4e2a\u6838\u5fc3\u6982\u5ff5\u5c31\u662f\u6cdb\u578b\u51fd\u6570\uff0c\u8fd9\u79cd\u51fd\u6570\u80fd\u591f\u63a5\u53d7\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u3002\u6211\u4eec\u5c06\u601d\u8003\u4e09\u79cd\u4e0d\u540c\u7684\u7528\u4e8e\u5b9e\u73b0\u6cdb\u578b\u51fd\u6570\u7684\u6280\u672f\uff1a\u5171\u4eab\u63a5\u53e3\uff0c\u7c7b\u578b\u6d3e\u53d1\u548c\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u3002\u5728\u5efa\u7acb\u8fd9\u4e9b\u6982\u5ff5\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e5f\u4f1a\u53d1\u73b0\u4e00\u4e9b\u7279\u6027\uff0c\u8fd9\u4e9b\u7279\u6027\u652f\u6301<code>Python</code>\u5bf9\u8c61\u7cfb\u7edf\u521b\u6cdb\u578b\u51fd\u6570</p> <p>\u5bf9\u6bd4\u51fd\u6570\u91cd\u8f7d(\u540c\u4e00\u4f5c\u7528\u57df\u5185\u51fd\u6570\u540d\u76f8\u540c\uff0c\u53c2\u6570\u5217\u8868\u4e0d\u540c\u7684\u51fd\u6570)\uff0c\u51fd\u6570\u6a21\u677f\u53ea\u9700\u8981\u4e00\u4e2a\u51fd\u6570\u5c31\u5b9e\u73b0\u4e86\u51fd\u6570\u91cd\u8f7d\u7684\u90e8\u5206\u529f\u80fd(\u53c2\u6570\u4e2a\u6570\u76f8\u540c\u7c7b\u578b\u4e0d\u540c\uff0c\u51fd\u6570\u91cd\u8f7d\u9700\u8981\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u53c2\u6570\u5217\u8868\u4e0d\u540c\u7684\u51fd\u6570)</p> <p>\u51fd\u6570\u6a21\u677f\u5177\u4f53\u5316\uff0c\u51fd\u6570\u6a21\u677f\u5177\u4f53\u5316\u5c31\u662f\u5c06\u67d0\u4e00(\u67d0\u51e0)\u4e2a\u8981\u5904\u7406\u7684\u7c7b\u578b\u5355\u72ec\u5904\u7406\uff0c\u9700\u8981\u5355\u72ec\u5199\u4e00\u4e2a\u5b9e\u73b0\uff0c\u5f62\u5f0f\u662f<code>template&lt;&gt; void fun(type&amp; t)</code>;\uff0c\u51fd\u6570\u6a21\u677f\u7684\u5177\u4f53\u5316\u548c\u666e\u901a\u51fd\u6570\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\uff0c\u8c03\u7528\u987a\u5e8f\u662f<code>\u666e\u901a\u51fd\u6570 &gt; \u51fd\u6570\u6a21\u677f\u5177\u4f53\u5316 &gt; \u6a21\u677f\u51fd\u6570</code></p> <p>\u4ee5CS61A\u4e2d\u7684Number\u7c7b\u4e3a\u4f8b\u7406\u89e3</p>"},{"location":"CS61A/Lab/","title":"Lab \u8bb0\u5f55","text":"<p>\u8fd9\u91cc\u653e\u4e00\u4e2a\u4e2d\u6587\u7ffb\u8bd1\u7248\u9898\u76ee\u7684blog</p>"},{"location":"CS61A/Lab/#lab-0","title":"Lab 0","text":"<ul> <li>\u4ee3\u7801\u586b\u5145</li> </ul> <pre><code>def twenty_twenty():\n    \"\"\"Come up with the most creative expression that evaluates to 2020,\n    using only numbers and the +, *, and - operators.\n\n    &gt;&gt;&gt; twenty_twenty()\n    2020\n    \"\"\"\n    return 2020\n</code></pre> <ul> <li>\u8fd0\u884c\u8fc7\u7a0b</li> </ul> <pre><code>root@localhost:/mnt/d/86134/Desktop/CS61A/lab00# python3\nPython 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; from lab00 import *\n&gt;&gt;&gt; twenty_twenty()\n2020\n&gt;&gt;&gt;\n</code></pre> <ul> <li>\u524d\u9762\u51e0\u4e2a\u8fd0\u7b97\u7684<code>lab</code>\u90fd\u662f\u57fa\u7840\u7684\u914d\u7f6e\u73af\u5883\uff0c\u8fd9\u91cc\u5c31\u4e0d\u4e00\u4e00\u7f57\u5217\u4e86</li> </ul>"},{"location":"CS61A/Lab/#project-1-hog","title":"Project 1:  Hog","text":"<pre><code>    # BEGIN PROBLEM 1\n    IsOne = 0\n    sum = 0\n    for i in range(num_rolls):\n        now = dice()\n        if now == 1:\n            IsOne = 1\n        sum += now\n    return sum if IsOne != 1 else 1\n    # END PROBLEM 1\n</code></pre> <p>\u82e5\u6b64\u8f6e\u672c\u4eba\u4e0d\u51fa\u724c\uff0c\u5219\u53d6\u5bf9\u624b\u7684\u5f97\u5206\u5bf9\u5e94\u7684<code>digit</code>+<code>3</code>\u4f5c\u4e3a\u5f97\u5206</p> <pre><code>    # BEGIN PROBLEM 2\n    pi = pi // pow(10, 100 - score)\n    # END PROBLEM 2\n    return pi % 10 + 3\n</code></pre> <p>\u8fd9\u91cc\u5229\u7528<code>if - else</code>\u6765\u5224\u65ad\u5206\u652f</p> <pre><code>    # BEGIN PROBLEM 3\n    if num_rolls == 0:\n        return free_bacon(opponent_score)\n    else:\n        return roll_dice(num_rolls, dice)\n    # END PROBLEM 3\n</code></pre> <p>\u6c42\u6700\u5927\u516c\u56e0\u6570\u5e76\u4f9d\u636e\u9898\u610f\u5224\u65ad</p> <pre><code>    # BEGIN PROBLEM 4a\n    a, b = player_score, opponent_score\n    while b &gt; 0:\n        a, b = b, a % b\n    return player_score &gt; 0 and opponent_score &gt; 0 and a &gt;= 10\n    # END PROBLEM 4a\n</code></pre> <ul> <li><code>Python</code>\u53ef\u4ee5\u5b9e\u73b0\u51fd\u6570\u7684\u5d4c\u5957\u5b9a\u4e49</li> </ul> <pre><code>    def say(score0, score1, last_score = last_score, running_high = running_high):\n        new = last_score - running_high\n        if who == 0:\n            if score0 - last_score &gt; running_high:\n                running_high = score0 - last_score\n                print(running_high, 'point(s)! The most yet for Player 0')\n            last_score_tmp = score0\n        else:\n            if score1 - last_score &gt; running_high:\n                running_high_tmp = score1 - last_score\n                print(running_high, 'point(s)! The most yet for Player 1')\n            last_score = score1\n        return announce_highest(who, last_score, running_high)\n    return say\n</code></pre> <ul> <li><code>*args</code>\u8868\u793a\u4f20\u5165\u7684\u8fd9\u4e2a\u51fd\u6570\u7684\u6240\u6709\u53c2\u6570\uff0c\u540e\u9762\u4f7f\u7528\u8fd9\u4e2a<code>*arg</code>\u53ef\u4ee5\u7528\u8fd9\u4e9b\u53c2\u6570\u8c03\u7528\u51fd\u6570</li> </ul> <pre><code>&gt;&gt;&gt; def printed(f):\n...     def print_and_return(*args):\n...         result = f(*args)\n...         print('Result:', result)\n...         return result\n...     return print_and_return\n&gt;&gt;&gt; printed_pow = printed(pow)\n&gt;&gt;&gt; printed_pow(2, 8)\nResult: 256\n256\n&gt;&gt;&gt; printed_abs = printed(abs)\n&gt;&gt;&gt; printed_abs(-10)\nResult: 10\n10\n</code></pre>"},{"location":"DB/","title":"\u6570\u636e\u5e93\u7cfb\u7edf","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u6570\u636e\u5e93\u7cfb\u7edf\u201d \u8bfe\u7a0b\u53ca\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <ul> <li>Prof:\u5b59\u5efa\u4f36</li> <li>TA:\u8042\u4fca\u54f2/\u77f3\u5b87\u65b0</li> </ul> <p>Success</p> <ul> <li> chapter 1 Introduction</li> <li> chapter 2 Relational Model</li> </ul>"},{"location":"DB/DB1/","title":"Chapter 1 Introduction","text":"Abstract <ul> <li>Database Systems</li> <li>Database Applications</li> <li>Purpose of Database Systems</li> <li>View of Data</li> <li>Data Models</li> <li>Database Languages</li> <li>Database Design</li> <li>Database Engine</li> <li>Database Users and Administrators</li> <li>History of Database Systems</li> </ul>"},{"location":"DB/DB1/#database-systems","title":"Database Systems","text":"DBMS <ul> <li>Database is a collection of interrelated data about a enterprise, which is managed by a DBMS(Database Management System).</li> <li>The primary goal of a DBMS is to provide a way to store and retrieve database information that is both convenient and efficient. </li> <li>Management of data involves both de\ufb01ning structures for storage of information and providing mechanisms for the manipulation of information. </li> <li>The database system must ensure the safety of the information stored, despite system crashes or attempts at unauthorized access. </li> <li>If data are to be shared among several users, the system must provide concurrency control mechanisms to avoid possible anomalous results. </li> </ul> <p>Difference Between File processor and DBMS</p> <ul> <li>A file-processing system can only coordinate physical access of data, while a DBMS can coordinate both phisical and logical access.</li> <li>A file-processing system only allow accessing data through the way determined in advance, while a DBMS allow doing this flexibly.</li> <li>A file-processing system allows multiple programs access diffrent data at the same time, or 2 programs access the same file at the same time if they both have read-only access to it. On the contrary, a DBMS allows multiple users accessing the same data at the same time.</li> <li>In a file-processing system, a file written by one program may be unreadable for another program. But in a DBMS, data duplications are reduced by make the data physically available  to all the programs possessing access to it.</li> </ul>"},{"location":"DB/DB1/#purpose-of-database-systems","title":"Purpose of Database Systems","text":"<p>In the early days, database applications were built directly on top of file systems\uff0cwhich leads to:</p> <ul> <li> <p>Data redundancy\uff08\u6570\u636e\u5197\u4f59\uff09and inconsistency\uff08\u4e0d\u4e00\u81f4\uff09</p> <ul> <li>Multiple file formats, duplication of information in different files</li> </ul> </li> <li> <p>Data isolation\uff08\u6570\u636e\u5b64\u7acb\uff0c\u6570\u636e\u5b64\u5c9b\uff09 \u2014 multiple files and formats</p> </li> <li> <p>Difficulty in accessing data (\u5b58\u53d6\u6570\u636e\u56f0\u96be\uff09</p> <ul> <li>Need to write a new program to carry out each new task</li> </ul> </li> <li> <p>Integrity Problem(\u5b8c\u6574\u6027\u95ee\u9898\uff09</p> </li> </ul> <p>Info</p> <ul> <li>Integrity constraints become \u201cburied\u201d in program code rather than being stated explicitly(\u663e\u5f0f\u7684),\u6570\u636e\u4e0e\u7ea6\u675f\u6761\u4ef6\u5b58\u50a8\u5728\u6b64\u7a0b\u5e8f\u4e2d\uff0c\u4e0d\u662f\u663e\u5f0f\u7684</li> <li>Example:  \u201caccount balance &gt;=1\u201d</li> <li>Hard to add new constraints or change existing ones</li> </ul> <ul> <li>Atomicity problems(\u539f\u5b50\u6027\u95ee\u9898)</li> </ul> <p>Example</p> <ul> <li>Transfer of funds from one to another(\u8f6c\u8d26\u95ee\u9898)</li> <li>Failures may leave database in an inconsistent state with partial updates carried out</li> </ul> <ul> <li>Concurrent access anomalies(\u5e76\u53d1\u8bbf\u95ee\u5f02\u5e38)</li> </ul> <p>Example</p> <ul> <li>Concurrent access needed for performance</li> <li>Uncontrolled concurrent accesses can lead to inconsistencies</li> <li>Example: Two people reading a balance (say 100) and updating it by saving money (say 50 each) at the same time</li> </ul> <ul> <li>Security Problems(\u5b89\u5168\u6027\u95ee\u9898)</li> </ul> <p>Example</p> <ul> <li>\u94f6\u884c\u5ba1\u8ba1(Audit)</li> <li>\u6743\u9650(Privilege)</li> </ul>"},{"location":"DB/DB1/#characteristics-of-databases","title":"Characteristics of DataBases","text":"Abstract <ul> <li>data persistence(\u6570\u636e\u6301\u4e45\u6027)</li> <li>convenience in accessing data(\u6570\u636e\u8bbf\u95ee\u4fbf\u5229\u6027)</li> <li>data integrity \uff08\u6570\u636e\u5b8c\u6574\u6027\uff09</li> <li>concurrency control for multiple users(\u591a\u7528\u6237\u5e76\u53d1\u63a7\u5236)</li> <li>failure recovery\uff08\u6545\u969c\u6062\u590d\uff09 </li> <li>security  control\uff08\u5b89\u5168\u63a7\u5236\uff09</li> </ul>"},{"location":"DB/DB1/#data-models","title":"Data Models","text":"<ul> <li> <p>A collection of tools for describing </p> <ul> <li>Data (\u6570\u636e)</li> <li>Data relationships(\u8054\u7cfb)</li> <li>Data semantics(\u8bed\u4e49)</li> <li>Data constraints(\u7ea6\u675f)</li> </ul> </li> <li> <p>Relational Model(\u5173\u7cfb\u6a21\u578b)</p> </li> <li>Object-based data models <ul> <li>Object-oriented  (\u9762\u5411\u5bf9\u8c61\u6570\u636e\u6a21\u578b)</li> <li>Object-relational(\u5bf9\u8c61-\u5173\u7cfb\u6a21\u578b\u6a21\u578b)</li> </ul> </li> <li>Semistructured data model  (XML)(\u534a\u7ed3\u6784\u5316\u6570\u636e\u6a21\u578b)</li> <li>Other older models:<ul> <li>Network model  (\u7f51\u72b6\u6a21\u578b)</li> <li>Hierarchical model(\u5c42\u6b21\u6a21\u578b)</li> </ul> </li> <li>Entity-Relationship Model(\u5b9e\u4f53\u8054\u7cfb\u6a21\u578b)</li> </ul> <p></p> <p>\u8fd9\u91ccID\u53ef\u4ee5\u786e\u5b9a\u4e00\u884c\uff0c\u79f0\u4e4b\u4e3akey</p>"},{"location":"DB/DB1/#view-of-data","title":"View of data","text":"<p>View of data</p> <ul> <li>\u7269\u7406\u6a21\u5f0f:\u63cf\u8ff0\u6570\u636e\u5982\u4f55\u5b58\u50a8</li> <li>\u903b\u8f91\u6a21\u5f0f:\u63cf\u8ff0\u4e86\u5b58\u50a8\u7684\u6570\u636e\u4ee5\u53ca\u4e4b\u95f4\u5173\u7cfb</li> <li>\u89c6\u56fe\u6a21\u5f0f:\u5e94\u7528\u7a0b\u5e8f\u51fa\u4e8e\u5b89\u5168\u7b49\u76ee\u7684\u9690\u85cf\u4e86\u5927\u91cf\u7ec6\u8282\uff0c\u4e14\u662f\u591a\u6837\u7684</li> </ul> <p>\u76ee\u7684</p> <ul> <li>Hide the complexities(\u9690\u85cf\u590d\u6742\u6027)</li> <li>Enhance the adaptation to changes(\u589e\u5f3a\u9002\u5e94\u6027)</li> </ul>"},{"location":"DB/DB1/#schema-and-instance","title":"Schema and Instance","text":"<ul> <li>Similar to types and variables in programming languages</li> <li>Logical Schema\uff08\u903b\u8f91\u6a21\u5f0f\uff09\u2013 the logical structure of the database <ul> <li>Example: The database consists of information about a set of customers and accounts and the relationship between them</li> <li>Analogous to type information of a variable in a program</li> </ul> </li> <li>Physical schema \uff08\u7269\u7406\u6a21\u5f0f\uff09 \u2013 the overall physical  structure of the database </li> <li>Instance\uff08\u5b9e\u4f8b\uff09 \u2013 the actual content of the database at a particular point in time Analogous to the value of a variable</li> </ul>"},{"location":"DB/DB1/#data-independence","title":"Data Independence","text":"<ul> <li> <p>Physical Data Independence\uff08\u7269\u7406\u6570\u636e\u72ec\u7acb\u6027\uff09\u2013 the ability to modify the physical schema without changing the logical schema</p> <ul> <li>Applications depend on the logical schema</li> <li>In general, the interfaces between the various levels and components should be well defined so that changes in some parts do not seriously influence others.</li> </ul> </li> <li> <p>Logical Data Independence(\u903b\u8f91\u6570\u636e\u72ec\u7acb\u6027) \u2013 the ability to modify the logical schema without changing the user view schema</p> </li> </ul>"},{"location":"DB/DB1/#database-languages","title":"Database Languages","text":"Abstract <ul> <li>Data Definition Language (DDL) </li> <li>Data Manipulation Language (DML) </li> <li>SQL Query Language</li> <li>Application Program Interface \uff08API\uff09</li> </ul>"},{"location":"DB/DB1/#data-definition-language-ddl","title":"Data Definition Language (DDL)\uff08\u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff09","text":"<p>Specification notation for defining the database schema Example:    </p> <pre><code>create table instructor (\n    ID         char(5),                           \n    name       varchar(20),\n    dept_name  varchar(20),\n    salary     numeric(8,2)\n);\n</code></pre> <ul> <li>DDL compiler generates a set of table templates stored in a data dictionary\uff08\u6570\u636e\u5b57\u5178\uff09</li> <li>Data dictionary contains metadata (\u5143\u6570\u636e\uff0c i.e., data about data)<ul> <li>Database schema </li> <li>Integrity constraints\uff08\u5b8c\u6574\u6027\u7ea6\u675f\uff09<ul> <li>Primary key (ID uniquely identifies instructors)\uff08\u4e3b\u5065\uff09</li> <li>Referential integrity (references constraint in SQL)\uff08\u53c2\u7167\u5b8c\u6574\u6027\uff09<ul> <li>e.g. dept_name value in any instructor tuple must appear in department relation</li> </ul> </li> </ul> </li> <li>Authorization\uff08\u6743\u9650\uff09</li> </ul> </li> <li>\u5e38\u7528\u7684\u8bed\u53e5\u5173\u952e\u5b57\u6709 CREATE\u3001DROP\u3001ALTER \u7b49</li> </ul> <p>Example</p> <pre><code>CREATE TABLE \u8868\u540d(\n\u5217\u540d1 \u6570\u636e\u7c7b\u578b,\n\u5217\u540d2 \u6570\u636e\u7c7b\u578b,\n\u5217\u540d3 \u6570\u636e\u7c7b\u578b,\n...\n)\n\nALTER TABLE \u8868\u540d;\neg\uff1aALTER TABLE \u8868\u540d ADD \u5217\u540d \u6570\u636e\u7c7b\u578b;\uff08\u6dfb\u52a0\u4e00\u4e2a\u5217\uff09\n    ALTER TABLE \u8868\u540d CHANGE \u5217\u540d \u65b0\u5217\u540d \u65b0\u6570\u636e\u7c7b\u578b;\uff08\u4fee\u6539\u5217\u540d\uff09\n    ALTER TABLE \u8868\u540d DROP \u5217\u540d;\n\nDROP TABLE \u8868\u540d;\nDROP DATABASE \u6570\u636e\u5e93\u540d;\n</code></pre>"},{"location":"DB/DB1/#data-manipulation-language-dml","title":"Data Manipulation Language (DML)\uff08\u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff09","text":"<ul> <li>Language for accessing and manipulating the data organized by the appropriate data model</li> <li>DML also known as query language</li> <li>Two classes of languages <ul> <li>Procedural\uff08\u8fc7\u7a0b\u5f0f\uff09 \u2013 user specifies what data is required and how to get those data </li> <li>Declarative (nonprocedural\uff0c \u9648\u8ff0\u5f0f\uff0c\u975e\u8fc7\u7a0b\u5f0f) \u2013 user specifies what data is required without specifying how to get those data</li> </ul> </li> <li>SQL is the most widely used query language</li> </ul> <p>Example</p> <pre><code>INSERT INTO \u8868\u540d (\u5b57\u6bb51,\u5b57\u6bb52,...) values (\u67d0\u503c,\u67d0\u503c,...),(\u67d0\u503c,\u67d0\u503c,...);\n\nUPDATE \u8868\u540d SET \u5217\u540d=\u65b0\u503c WHERE \u9650\u5b9a\u6761\u4ef6;\n\nDELETE FROM \u8868\u540d WHERE \u9650\u5b9a\u6761\u4ef6;\n</code></pre>"},{"location":"DB/DB1/#sql-query-language","title":"SQL Query Language","text":"<p>SQL: widely used non-procedural language</p> Example <p></p>"},{"location":"DB/DB1/#database-design","title":"DataBase Design","text":""},{"location":"DB/DB1/#database-engine","title":"DataBase Engine","text":"Abstract <ul> <li>The storage manager</li> <li>The query processor  </li> <li>The transaction management component. </li> </ul>"},{"location":"DB/DB1/#storage-manager","title":"Storage Manager","text":"<ul> <li>A program module that provides the interface between the low-level data stored in the database and the application programs and queries submitted to the system.</li> <li>The storage manager is responsible to the following tasks: <ul> <li>Interaction with the OS file manager </li> <li>Efficient storing, retrieving and updating of data</li> </ul> </li> <li>The storage manager components include:<ul> <li>File manager</li> <li>Buffer manager</li> <li>Authorization and integrity manager</li> <li>Transaction manager</li> </ul> </li> <li>Covered in Part five - Chapters 12 , 13, 14 </li> <li>The storage manager implements several data structures as part of the physical system implementation:<ul> <li>Data files -- store the database itself</li> <li>Data dictionary --  stores metadata about the structure of the database, in particular the schema of the database.</li> <li>Indices --  can provide fast access to data items.  A database index provides pointers to those data items that hold a particular value.  </li> <li>Statistical data</li> </ul> </li> </ul>"},{"location":"DB/DB1/#query-processor","title":"Query Processor","text":"<ul> <li>The query processor components include:<ul> <li>DDL interpreter --  interprets DDL statements and records the definitions in the data dictionary.</li> <li>DML compiler -- translates DML statements in a query language into an evaluation plan consisting of low-level instructions that the query evaluation engine understands.</li> <li>The DML compiler performs query optimization; that is, it picks the lowest cost evaluation plan from among the various alternatives.</li> <li>Query evaluation engine -- executes low-level instructions generated by the DML compiler.</li> </ul> </li> </ul>"},{"location":"DB/DB1/#transaction-management","title":"Transaction Management(\u4e8b\u52a1\u7ba1\u7406)","text":"<ul> <li>A transaction \uff08\u4e8b\u52a1\uff09is a collection of operations that performs a single logical function in a database application.</li> <li>Recover Manager (\u6062\u590d\u7ba1\u7406\u5668)ensures that the database remains in a consistent (correct) state despite system failures (e.g., power failures and operating system crashes) and transaction failures.</li> <li>Concurrency-control manager\uff08\u5e76\u53d1\u63a7\u5236\u7ba1\u7406\u5668\uff09 controls the interaction among the concurrent transactions, to ensure the consistency of the database.</li> </ul>"},{"location":"DB/DB1/#database-users","title":"Database Users","text":""},{"location":"DB/DB1/#turing-award","title":"Turing Award","text":"<ul> <li>Charles W. Bachman(1924-2017)</li> <li>Edgar F. Codd (1923-2003)</li> <li>Jim Gray(1944-2007)</li> <li>Michael Stonebraker (1943~ )</li> </ul>"},{"location":"DB/DB2/","title":"Chapter 2 Relational Model","text":"<p>Abstract</p> <ul> <li>Structure of Relational Databases</li> <li>Database Schema</li> <li>Keys</li> <li>Schema Diagrams</li> <li>Relational Query Languages</li> <li>The Relational Algebra</li> </ul>"},{"location":"DB/DB2/#basic-structure","title":"Basic Structure","text":"<p>Formally, given sets \\(D_1, D_2, \u2026 D_n\\) a relation \\(r\\) is a subset of  \\(D_1 \\times  D_2  \\times \u2026 D_n\\).Thus, a relation is a set of n-tuples \\((a_1, a_2, \u2026, a_n)\\) where each \\(a_i \\in D_i\\)</p> <p>Abstract</p> <ul> <li>relation(\u5173\u7cfb) : \u8868</li> <li>tuple(\u5143\u7ec4) \uff1a\u884c</li> <li>Attribute(\u5c5e\u6027) : \u5217 </li> </ul>"},{"location":"DB/DB2/#relation-schema-and-instance","title":"Relation Schema and Instance","text":"<p>A1, A2, \u2026, An are attributes R = (A1, A2, \u2026, An ) is a relation schema</p> <p>Example</p> <p>instructor  = (ID,  name, dept_name, salary)</p> <p>A relation instance r defined over schema \\(R\\) is denoted by \\(r(R)\\). The current values a relation are specified by a table An element \\(t\\) of relation \\(r\\) is called a tuple and is represented by a row in a table</p>"},{"location":"DB/DB2/#attributes","title":"Attributes","text":"<ul> <li>The set of allowed values for each attribute is called the domain\uff08\u57df\uff09 of the attribute</li> <li>Attribute values are (normally) required to be atomic\uff08\u539f\u5b50\u7684\uff09; that is, indivisible</li> <li>The special value null\uff08\u7a7a\u503c\uff09 is a member of every domain</li> <li>The null value causes complications in the definition of many operations</li> </ul>"},{"location":"DB/DB2/#key","title":"Key(\u7801\\\u952e)","text":"<ul> <li>Let \\(K \\subseteq R\\)</li> <li>K is a superkey(\u8d85\u5065) of R if values for K are sufficient to identify a unique tuple of each possible relation \\(r(R)\\)</li> </ul> <p>Example</p> <p><code>{ID}</code> and <code>{ID,name}</code> are both superkeys of instructor.</p> <p>S- uperkey K is a candidate key(\u5019\u9009\u5065) if K is minimal </p> <p>Example</p> <p><code>{ID}</code> is a candidate key for Instructor</p> <ul> <li>One of the candidate keys is selected to be the primary key\uff08\u4e3b\u952e\uff09.</li> </ul> <p>Foreign key\uff08\u5916\u952e\uff09 constraint  from attribute(s) A of relation \\(r_1\\) to the primary  key  B  of  relation r2 states that on any database instance, the value of A for each tuple in \\(r_1\\) must also be the value of B for some tuple in \\(r_2\\). </p> <p>Foreign key Example</p> <ul> <li>foreign key \\((A_{j1},A_{j2}, \\ldots A_{jm})\\) references \\(s\\) <pre><code>foreign key(dept_name)references department(dept_name)\n</code></pre></li> </ul> Summary <ul> <li>superkey(\u8d85\u5065) \uff1a\u53ef\u4ee5\u786e\u5b9a\u4e00\u4e2a\u5143\u7ec4\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u5c5e\u6027\u7684\u96c6\u5408(\u53ef\u80fd\u5305\u542b\u65e0\u5173\u7d27\u8981\u7684)</li> <li>candidate key(\u5019\u9009\u5065) \uff1a\u6700\u5c0f\u7684\u8d85\u7801\uff0c\u4efb\u610f\u771f\u5b50\u96c6\u90fd\u4e0d\u662f\u8d85\u7801</li> <li>primary key(\u4e3b\u7801)\uff1a\u533a\u5206\u5143\u7ec4\u7684\u4e3b\u8981\u65b9\u5f0f\u7684\u5019\u9009\u7801</li> <li>Foreign key\uff08\u5916\u7801\uff09\uff1a\u8868\u660e\u5f15\u7528\u4e0e\u88ab\u5f15\u7528\u5173\u7cfb</li> </ul>"},{"location":"DB/DB2/#schema-diagram-for-university-database","title":"Schema Diagram for University Database","text":"<ul> <li>\u5b9e\u4f53\u5b8c\u6574\u6027\uff08Entity Integrity\uff09</li> <li>\u53c2\u7167\u5b8c\u6574\u6027\uff08Referential Integrity\uff09</li> <li>\u7528\u6237\u5b9a\u4e49\u7684\u5b8c\u6574\u6027\uff08User-defined Integrity\uff09</li> </ul>"},{"location":"DB/DB2/#relational-query-languages","title":"Relational Query Languages(\u5173\u7cfb\u67e5\u8be2\u8bed\u8a00)","text":"<ul> <li>Procedural vs.non-procedural, or declarative</li> <li>\u201cPure\u201d languages:</li> <li>Relational algebra(\u5173\u7cfb\u4ee3\u6570)(\u5bf9\u5173\u7cfb\u8fdb\u884c\u64cd\u4f5c\uff0c\u7ed3\u679c\u4ecd\u662f\u5173\u7cfb)</li> <li>Tuple relational calculus\uff08\u5143\u7ec4\u5173\u7cfb\u6f14\u7b97\uff09</li> <li>Domain relational calculus\uff08\u57df\u5173\u7cfb\u6f14\u7b97\uff09</li> <li>The above 3 pure languages are equivalent in computing power</li> <li>We will concentrate on relational algebra</li> <li>Not Turing-machine equivalent</li> <li>Consists of 6 basic operations</li> </ul> <p>Relational algebra(\u5173\u7cfb\u4ee3\u6570)</p> <ul> <li>select(\u9009\u62e9): \\(\\sigma\\)</li> <li>project(\u6295\u5f71): \\(\\Pi\\)</li> <li>union(\u5e76\u96c6): \\(\\cup\\)</li> <li>set difference(\u96c6\u5dee): \\(-\\)</li> <li>Cartesian product(\u7b1b\u5361\u5c14\u79ef): \\(x\\)</li> <li>rename(\u66f4\u540d): \\(\\rho\\)</li> </ul> <p>Question</p> <p>\u5b59\u8001\u5e08\u4e0a\u8bfe\u63d0\u5230\u4e86\u601d\u8003\u4e3a\u4ec0\u4e48\u6ca1\u6709\u4ea4\u96c6</p> Answer <p>\u4ea4\u96c6\u53ef\u4ee5\u901a\u8fc7\u5e76\u96c6\u548c\u96c6\u5dee\u6765\u5b9e\u73b0</p>"},{"location":"DB/DB2/#select","title":"Select","text":"<ul> <li>\\(\\sigma_p(r)=\\{t|t\\in r\\ and\\ p(t)\\}\\)  , where \\(p\\) is called selection predicate.  </li> </ul> Select Example"},{"location":"DB/DB2/#project","title":"Project","text":"<ul> <li>The project operation is a unary operation that returns its argument relation, with certain attributes left out.(\u53ef\u4ee5\u8fc7\u6ee4\u7279\u5b9a\u7684\u5c5e\u6027)    </li> <li>\\(\\prod_{A_1,A_2,\\ldots, A_k}(r)\\) where \\(A_i\\) are attribute names and \\(r\\) is a relation name.   </li> <li>The result is defined as the relation of k columns obtained by erasing the columns that are not listed. \u4f1a\u5bf9\u7ed3\u679c\u8fdb\u884c\u53bb\u91cd\u3002  </li> </ul> Projection Example"},{"location":"DB/DB2/#union","title":"Union","text":"<ul> <li>The union operation allows us to combine two relations.  \\(r\\cup s = \\{t| t\\in r \\ or \\ t\\in s\\}\\) </li> <li>\\(r\\) and \\(s\\) must have the same arity (\u5143\u6570) (same number f attributes)  </li> <li>The attribute domains must be compatible\uff08\u76f8\u5bb9\uff09</li> <li>\u5f53\u5c5e\u6027\u6709\u5173\u8054\u7c7b\u578b\u65f6\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8f93\u5165 \\(i\\), \u4e24\u4e2a\u8f93\u5165\u5173\u7cfb\u7684\u7b2c \\(i\\) \u4e2a\u5c5e\u6027\u7684\u7c7b\u578b\u5fc5\u987b\u76f8\u540c\u3002  </li> </ul> Projection Example"},{"location":"DB/DB2/#set-difference","title":"Set Difference","text":"<ul> <li> <p>The set-difference operation allows us to find tuples that are in one relation but are not in another. (r\u91cc\u9762\u6709\u800cs\u91cc\u9762\u6ca1\u6709)\\(r-s=\\{t|t\\in r\\ and\\ t\\notin s\\}\\) </p> </li> <li> <p>Set differences must be taken between compatible relations.</p> </li> </ul> Projection Example <p></p>"},{"location":"DB/DB2/#cartesian-product","title":"Cartesian-Product","text":"<ul> <li>The Cartesian-product operation (denoted by \\(\\times\\))  allows us to combine information from any two relations. (\u4e24\u4e2a\u8868\u91cc\u7684\u5143\u7ec4\u5404\u81ea\u76f8\u4e58) \\(r\\times s  =\\{t\\ q|t\\in r\\ and\\ q\\in s\\}\\) </li> </ul> Projection Example <p>\u4e0e\u81ea\u8eab\u505a\u7b1b\u5361\u5c14\u79ef\u7684\u65f6\u5019</p> <p>\u5f53\u4f5c\u4e24\u4e2a\u4e0d\u540c\u7684\u8868\u5904\u7406</p>"},{"location":"DB/DB2/#rename","title":"Rename","text":"<p>Allows us to refer to a relation by more than one name.  \\(\\rho_X(E)\\)</p> Composition of Operations 1 <p>Find the names of all instructors in the Physics department, along with the course_id of all courses they have taught.  </p> <p></p> <p>\u8fd9\u4e24\u6761\u8bed\u53e5\u542b\u4e49\u4e00\u6837\uff0c\u4f46\u7b2c\u4e8c\u6761\u6211\u4eec\u5148\u8fdb\u884c\u4e86\u4e00\u6b21 select, \u6761\u76ee\u5c11\u4e86\u66f4\u9ad8\u6548.</p> <p>Tip</p> <p>\u4e00\u822cDBMS\u90fd\u80fd\u591f\u81ea\u5df1\u8fdb\u884c\u4f18\u5316</p> Composition of Operations 2 <p>Find the largest salary in the university.  </p> <ul> <li>find instructor salaries that are less than some other instructor salary (i.e. not maximum) using a copy of instructor under a new name \\(d\\).  \\(\\prod_{instructor.salary}(\\sigma_{instructor.salary&lt;d.salary}(instructor \\times \\rho_d(instructor)))\\) </li> <li>find the largest salary \\(\\prod_{instructor}-\\prod_{instructor.salary}(\\sigma_{instructor.salary}&lt;d.salary(instructor\\times \\rho_d(instructor)))\\) </li> </ul> <p>\u6211\u4eec\u7b2c\u4e00\u6b65\u5c06\u4e24\u4e2a\u5173\u7cfb\u62fc\u8d77\u6765\u4e4b\u540e\uff0c\u9650\u5b9a instructor \u7684\u5de5\u8d44\u5c0f\u4e8e d, \u968f\u540e\u6295\u5f71\u6211\u4eec\u5c31\u53ef\u4ee5\u83b7\u5f97\u6240\u6709\u4e0d\u662f\u6700\u5927\u503c\u7684\u85aa\u6c34\u3002\uff08\u56e0\u4e3a\u4efb\u4f55\u4e0d\u662f\u6700\u5927\u503c\u7684\u85aa\u6c34\u90fd\u4f1a\u5728\u7b1b\u5361\u5c14\u79ef select \u540e\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u5143\u7ec4\uff0c\u8fd9\u6837\u6295\u5f71\u4e4b\u540e\u4ecd\u4f1a\u5b58\u5728\u3002\u4f46\u6700\u5927\u503c\u5c31\u4e0d\u4f1a\u6709\u5143\u7ec4\u5b58\u5728\uff09\uff0c\u6700\u540e\u7528\u5168\u96c6\u51cf\u6389\u5373\u53ef\u3002</p>"},{"location":"DB/DB2/#additional-operations","title":"Additional Operations","text":"<p>Warning</p> <p>\u989d\u5916\u64cd\u4f5c\u7b26\u5e76\u4e0d\u80fd\u589e\u5f3a\u67e5\u8be2\u80fd\u529b,\u53ea\u80fd\u7b80\u5316\u8868\u8fbe</p> <p>Abstract</p> <ul> <li>Set intersection(\u4ea4\u96c6): \\(r \\cap s\\) </li> <li>Natural join(\u81ea\u7136\u8fde\u63a5):  \\(r \\Join s\\)</li> <li>Semijoin(\u534a\u8fde\u63a5): $\\ltimes_\\theta $</li> <li>Assignment(\u8d4b\u503c): $ \\leftarrow $</li> <li>Outer join(\u5916\u8fde\u63a5): \\(r \\ltimes s,r \\rtimes s, r \u27d7 s\\)</li> <li>Division Operator(\u5206\u90e8\u7f16\u53f7): $r \\div s $</li> </ul>"},{"location":"DB/DB2/#natural-join-operation","title":"Natural-Join Operation","text":"<p>Let r and s be relations on schemas R and S respectively.  Then,  \\(r\\bowtie s\\) is a relation on schema \\(R \\cup S\\) obtained as follows:</p> <ul> <li>Consider each pair of tuples \\(t_r\\) from \\(r\\) and \\(t_s\\) from \\(s\\).  </li> <li> <p>If \\(t_r\\) and \\(t_s\\) have the same value on each of the attributes in \\(R \\cap S\\), add a tuple $t $ to the result, where</p> <ul> <li>\\(t\\) has the same value as \\(t_r\\) on \\(r\\)</li> <li>\\(t\\) has the same value as \\(t_s\\) on \\(s\\)</li> </ul> </li> <li> <p>\u5373\u5171\u540c\u5c5e\u6027\u8981\u6709\u76f8\u540c\u7684\u503c\uff0c\u624d\u80fd\u5728\u62fc\u63a5\u540e\u7684\u7ed3\u679c\u4e2d\u4fdd\u7559\u3002  </p> </li> <li>\u5bf9\u4e58\u6cd5\u7684\u6269\u5c55\uff0c\u76f8\u5f53\u4e8e\u5148 \\(\\times\\) \u518d select, \u6700\u540e project.  </li> <li>\u5148\u7b1b\u5361\u5c14\u79ef\uff0c\u5b8c\u4e86\u8fdb\u884c\u9009\u62e9\uff0c\u6700\u540e\u6295\u5f71</li> </ul> Natural Join Example <p></p>"},{"location":"DB/DB2/#theta-join","title":"Theta Join(\u8fde\u63a5)","text":"<ul> <li>\\(r\\bowtie_\\theta s=\\sigma_\\theta (r\\times s)\\)\u53ef\u4ee5\u7406\u89e3\u4e3a\u6761\u4ef6\u8fde\u63a5\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u81ea\u7136\u8fde\u63a5\u662f\u7528\u9690\u5f0f\u8c13\u8bcd\u53d6\u4ee3\u4e86\\(\\theta\\)\u7684\u8fde\u63a5</li> </ul>"},{"location":"DB/DB2/#outer-join","title":"Outer Join","text":"<p>\u7279\u70b9\uff1a\u4fdd\u7559\u672a\u5339\u914d\u5143\u7ec4</p> <p>Computes the join and then adds tuples form one relation that does not match tuples in the other relation to the result of the join.   </p> <p>Uses null values:  </p> <ul> <li>null signifies that the value is unknown or does not exist </li> <li>All comparisons involving null are (roughly speaking) false by definition</li> </ul> <p>Outer join can be expressed using basic operations.  </p> <ul> <li>\\(r\\rtimes s=(r\\bowtie s)\\cup (r-\\cap_R(r\\bowtie s)\\times \\{null,\\ldots,null\\})\\)</li> <li>\\(r\\ltimes s=(r\\bowtie s)\\cup \\{null,\\ldots,null\\}\\times (s-\\cap_R(r\\bowtie s))\\)</li> <li> <p>\\(r\\)\u27d7\\(s\\) \\(=(r\\bowtie s)\\cup (r-\\cap_R(r\\bowtie  s))\\times \\{(null, \\ldots)\\}\\cup\\{(null,\\ldots,null)\\}\\times (s-\\cap_s(r\\bowtie s))\\)</p> </li> <li> <p>Left outer join(\u5de6\u5916\u8fde\u63a5)\uff1a\u53ea\u4fdd\u7559\u51fa\u73b0\u5728\u5de6\u5916\u8fde\u63a5\u7b26\u4e4b\u524d\u7684\u5173\u7cfb\u4e2d\u7684\u5143\u7ec4</p> </li> <li>Right outer join(\u53f3\u5916\u8fde\u63a5)\uff1a\u53ea\u4fdd\u7559\u51fa\u73b0\u5728\u53f3\u5916\u8fde\u63a5\u7b26\u4e4b\u540e\u7684\u5173\u7cfb\u4e2d\u7684\u5143\u7ec4</li> <li>Full outer join(\u5168\u5916\u8fde\u63a5)\uff1a\u4fdd\u7559\u4e24\u4e2a\u5173\u7cfb\u4e2d\u7684\u5143\u7ec4</li> </ul> Outer Join Example <p> </p>"},{"location":"DB/DB2/#semijoin","title":"Semijoin(\u534a\u8fde\u63a5)","text":"<p>\\(r\\ltimes_\\theta s\\) \u4fdd\u7559 \\(r\\) \u4e2d\u80fd\u4e0e \\(s\\) \u76f8\u8fde\u7684\u5143\u7ec4(\u5728\u7ed9\u5b9a\u6761\u4ef6\u4e0b)\u7684\u96c6\u5408(\u6700\u5927\u5b50\u96c6),\u76f8\u5f53\u4e8e\u7b5b\u9009\u3002</p> <p>\\(r\\ltimes_\\theta s = \\sigma()\\) </p> Semijoin Example <p></p>"},{"location":"DB/DB2/#assignment","title":"Assignment(\u8d4b\u503c)","text":"<p>\u5c06\u4e00\u4e2a\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f\u7528\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u6765\u66ff\u4ee3</p>"},{"location":"DB/DB2/#division","title":"Division","text":"<ul> <li>\u67e5\u8be2\u5305\u542b\u53e6\u5916\u4e00\u4e2a\u8868\u4e2d\u6240\u6709\u4fe1\u606f\u7684\u5143\u7ec4\u96c6\u5408\u7684\u5171\u540c\u5143\u7d20</li> <li> <p>Given relations \\(r(R)\\) and \\(s(S)\\), such that \\(S \\subset R\\), \\(r\\div s\\) is the largest relation \\(t(R-S)\\) such that \\(t\\times s \\subsetneqq  r\\) </p> </li> <li> <p>We can write \\(r\\div s\\) as  </p> </li> </ul> \\[ \\begin{align*}     temp1 &amp; \\leftarrow \\Pi_{R-S}(r)\\\\     temp2 &amp; \\leftarrow \\Pi_{R-S}((temp1 \\times s)- \\Pi_{R-S,S}(r))\\\\     result &amp; = temp1 - temp2 \\end{align*} \\] Division Example <p> </p>"},{"location":"DB/DB2/#extended-relational-algebra-operations","title":"Extended Relational-Algebra-Operations","text":"<p>Abstract</p> <ul> <li>Generalized Projection</li> <li>Aggregate Functions</li> </ul>"},{"location":"DB/DB2/#generalized-projection","title":"Generalized Projection","text":"<ul> <li>\u4e00\u822c\u5316\u6295\u5f71generalized projection\u662f\u6295\u5f71projection\u7684\u6269\u5c55\uff0c\u662f\u5e26\u4e0a\u4e86\u7b97\u672f\u8fd0\u7b97\u7684</li> <li>\\(E\\) is any relational-algebra expression</li> <li>Each of $F_1, F_2, \u2026, F_n $are arithmetic expressions involving constants and attributes in the schema of \\(E\\).</li> <li>Given relation instructor(ID, name, dept_name, salary) where salary is annual salary, get the same information but with monthly salary </li> </ul> \\[\\Pi_{F_1,F_2 \\ldots F_n}(E)\\] Generalized Projection Example"},{"location":"DB/DB2/#aggregate-functions-and-operations","title":"Aggregate Functions and Operations","text":"<ul> <li> <p>Aggregation function\uff08\u805a\u5408\u51fd\u6570\uff09takes a collection of values and returns a single value as a result.  </p> <ul> <li>avg: average value</li> <li>min: minimum value</li> <li>max: maximum value</li> <li>sum: sum of values</li> <li>count: number of values</li> </ul> </li> <li> <p>Aggregate operation in relational algebra \\(G_1,G_2,\\ldots,G_n \\mathcal{G}_{F_1(A_1),\\ldots F_n(A_n)}(E)\\) </p> </li> </ul> <p>Aggregate Operation Example</p> <p> </p> <p>\u5206\u7ec4\u7ed3\u679c\u6ca1\u6709\u540d\u5b57\uff0c\u53ef\u4ee5\u7528 rename \u6216\u8005 as \u8fdb\u884c\u6539\u540d\u3002 e.g. <code>dept_name G avg(salary) as avg_sal (instructor)</code></p>"},{"location":"DB/DB2/#multiset-relational-algebra","title":"Multiset Relational Algebra","text":"<ul> <li>\u5173\u7cfb\u4ee3\u6570\u4e2d\uff0c\u6211\u4eec\u8981\u6c42\u5173\u7cfb\u8981\u662f\u4e00\u4e2a\u4e25\u683c\u7684\u96c6\u5408\u3002  </li> <li>\u4f46\u5b9e\u9645\u6570\u636e\u5e93\u4e2d\u5e76\u4e0d\u662f\uff0c\u800c\u662f\u4e00\u4e2a\u591a\u91cd\u96c6\uff0c\u5141\u8bb8\u6709\u91cd\u590d\u5143\u7d20\u5b58\u5728\u3002  </li> <li>\u56e0\u4e3a\u4e00\u4e9b\u64cd\u4f5c\u7684\u4e2d\u95f4\u7ed3\u679c\u4f1a\u5e26\u6765\u91cd\u590d\u5143\u7d20\uff0c\u8981\u4fdd\u6301\u96c6\u5408\u7279\u6027\u5f00\u9500\u5f88\u5927\uff0c\u56e0\u6b64\u5b9e\u9645\u64cd\u4f5c\u4e2d\u4e0d\u4f1a\u53bb\u91cd \u3002 </li> </ul>"},{"location":"DB/DB2/#sql-and-relational-algebra","title":"SQL and Relational Algebra","text":"<ul> <li><code>select A1, A2, ... An from r1, r2, ... rm where P</code> is equivalent to \\(\\Pi_{A_1,\\ldots, A_n}(\\sigma_P(r_1\\times r_2\\ldots r_m))\\) </li> <li><code>select A1, A2, sum(A3) from r1, r2, ... rm where P group by A1, A2</code> is equivalent to \\(A_1, A_2 \\mathcal{G} sum(A_3)(\\sigma_P(r_1\\times r_2\\times\\ldots r_m))\\) \u8fd9\u91cc\u6309 \\(A_1,A_2\\) \u5206\u7ec4\uff0c\u90a3\u4e48\u7ed3\u679c\u7684\u8868\u4e2d\u4f1a\u6709 \\(A_1,A_2,sum(A_3)\\) \u4e09\u5217\uff08\u5206\u7ec4\u4f9d\u636e+\u5206\u7ec4\u540e\u7684\u805a\u5408\u7ed3\u679c\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u7684\u5c31\u662f\u8fd9\u4e09\u5217\uff0c\u6240\u4ee5\u5206\u7ec4\u5373\u53ef\u3002\u4f46\u662f\u5047\u8bbe\u6211\u4eec\u53ea\u9700\u8981 \\(A_1, sumA3\\) \u90a3\u4e48\u6700\u540e\u8fd8\u9700\u8981\u6295\u5f71\u3002</li> </ul>"},{"location":"DB/DB3/","title":"Chapter 3 SQL Introducction","text":"<p>Abstract</p> <ul> <li>Overview of the SQL Query Language</li> <li>Data Definition</li> <li>Basic Query Structure</li> <li>Additional Basic Operations</li> <li>Set Operations</li> <li>Null Values</li> <li>Aggregate Functions</li> <li>Nested Subqueries</li> <li>Modification of the Database </li> </ul> <p>SQL\u4e0e\u5173\u7cfb\u4ee3\u6570\u7684\u5173\u7cfb</p> <ul> <li>SQL\u4e0e\u5173\u7cfb\u4ee3\u6570\u5e76\u4e0d\u662f\u4e00\u4e00\u5bf9\u5e94\u7684</li> <li>\u4f46SQL\u8bed\u53e5\u90fd\u53ef\u4ee5\u5199\u6210\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f</li> </ul> <p>Quote</p> <p>\u672c\u6b21\u8bfe\u5b59\u8001\u5e08\u8bed\u901f\u611f\u4eba\uff0c\u90e8\u5206\u7b14\u8bb0\u540e\u671f\u5bf9\u7167HobbitQia\u7684\u7b14\u8bb0\u672c\u8fdb\u884c\u8865\u5168\u3002</p>"},{"location":"DB/DB3/#history","title":"History","text":"<ul> <li>IBM Sequel language developed as part of System R project at the IBM San Jose Research Laboratory (Sequel: A structured English query language, 1974)</li> <li>Renamed SQL(Structured Query Language )</li> <li>ANSI and ISO standard SQL:<ul> <li>SQL-86, SQL-89, SQL-92 </li> <li>SQL:1999, SQL:2003, SQL:2006, SQL:2008, SQL:2011, SQL:2016\uff0cSQL:2019 </li> </ul> </li> <li>The benefits of the standards:<ul> <li>Points out which language extensions are important and useful.</li> <li>Guides the development of SQL implementations in databases. </li> <li>Provides the common syntax and semantics that most databases will implement.</li> </ul> </li> <li>Commercial systems offer most, if not all, SQL-92 features, plus varying feature sets from later standards and special proprietary features.  </li> </ul>"},{"location":"DB/DB3/#data-definition-language","title":"Data Definition Language","text":"<p>The SQL data-definition language (DDL) allows the specification of information about relations, including:</p> <p>The schema for each relation.</p> <ul> <li>The domain of values associated with each attribute.</li> <li>Integrity constraints</li> <li>And as we will see later, also other information such as <ul> <li>The set of indices to be maintained for each relations.</li> <li>Security and authorization information for each relation.</li> <li>The physical storage structure of each relation on disk.</li> </ul> </li> </ul>"},{"location":"DB/DB3/#domain-types-in-sql","title":"Domain Types in SQL","text":"<ul> <li><code>char(n).</code> Fixed length character string, with user-specified length n.  \u5b9a\u957f\u5b57\u7b26\u4e32. C \u8bed\u8a00\u91cc\u5b57\u7b26\u4e32\u7ed3\u5c3e\u6709 <code>\\0</code>, \u4f46\u6570\u636e\u5e93\u91cc\u6ca1\u6709\uff0c\u957f\u5ea6\u7531\u5b9a\u4e49\u800c\u5f97\u3002  </li> <li><code>varchar(n).</code> Variable length character strings, with user-specified maximum length n. \u4e0d\u5b9a\u957f\u5b57\u7b26\u4e32\u3002\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6bd4\u8f83\u53ef\u80fd\u6709\u95ee\u9898\uff08\u6bd4\u5982\u5b9a\u957f\u548c\u4e0d\u5b9a\u957f\u7684\u5b57\u7b26\u4e32\uff09</li> <li><code>int.</code> Integer (a finite subset of the integers that is machine-dependent).</li> <li><code>smallint.</code> Small integer (a machine-dependent subset of the integer domain type).</li> <li><code>numeric(p,d).</code> Fixed point number, with user-specified precision of p digits, with d digits to the right of decimal point.    p \u8868\u793a\u6709\u6548\u6570\u5b57\u4f4d\u6570, d \u8868\u793a\u5c0f\u6570\u70b9\u540e\u591a\u5c11\u4f4d\u3002 e.g. <code>number(3,1)</code> allows 44.5 to be store exactly,  but neither 444.5 or 0.32</li> <li>real, double precision.  Floating point and double-precision floating point numbers, with machine-dependent precision.</li> <li><code>float(n).</code> Floating point number, with user-specified precision of at least n digits.</li> </ul> <p>difference between char and varchar</p> <ul> <li>\u5bf9\u4e8echar(10),\u8f93\u5165avi,\u4f1a\u81ea\u52a8\u5728\u540e\u9762\u8865\u4e0a\u7a7a\u683c</li> <li>\u5bf9\u4e8evarchar(10),\u8f93\u5165avi\uff0c\u4e0d\u4f1a\u8ffd\u52a0\u7a7a\u683c</li> </ul>"},{"location":"DB/DB3/#built-in-data-types-in-sql","title":"Built-in Data Types in SQL","text":"<ul> <li>date Dates, containing a (4 digit) year, month and date<ul> <li>Example: date \u20182005-7-27\u2019</li> </ul> </li> <li>time* Time of day, in hours, minutes and seconds.<ul> <li>Example: time \u201809:00:30\u2019     time \u201809:00:30.75\u2019</li> </ul> </li> <li>timestamp: date plus time of day<ul> <li>Example: timestamp \u20182005-7-27 09:00:30.75\u2019</li> </ul> </li> <li>interval period of time<ul> <li>Example:  interval \u20181\u2019 day</li> <li>Subtracting a date/time/timestamp value from another gives an interval value</li> <li>Interval values can be added to date/time/timestamp values</li> <li>date, time functions: <ul> <li><code>current_date(), current_time()</code></li> <li><code>year(x), month(x), day(x), hour(x), minute(x), second(x)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"DB/DB3/#create-table-construct","title":"Create Table Construct","text":"<p>An SQL relation is defined using the create table command:</p> <pre><code>create table r (A1 D1, A2 D2, ..., An Dn,\n(integrity-constraint1),\n...,\n(integrity-constraintk))\n</code></pre> <ul> <li>\\(r\\) is the name of the relation</li> <li>each \\(A_i\\) is an attribute name in the schema of relation \\(r\\)</li> <li>\\(D_i\\) is the data type of values in the domain of attribute \\(Ai\\)</li> </ul> <p>Example</p> <pre><code>create table instructor (\nID        char(5),\nname    varchar(20) not null,\ndept_name varchar(20),\nsalary     numeric(8,2))\n</code></pre> <p>Integrity Constraints in Create Table</p> <ul> <li><code>not null</code></li> <li>primary key \\((A_1,\\ldots,A_n)\\) \u4e0d\u80fd\u4e3a\u7a7a; \u8868\u5185\u4e0d\u80fd\u6709\u76f8\u540c\u7684 keys. \u5426\u5219\u8fd9\u6837\u7684\u6570\u636e\u662f\u63d2\u5165\u4e0d\u8fdb\u53bb\u7684\u3002</li> <li>foreign key \\((A_m,\\ldots,A_n)\\) references r \u9690\u542b\uff1a\u5f15\u7528\u5bf9\u5e94\u8868\u7684\u4e3b\u952e\u3002</li> </ul> <p>\u5982\u679c\u4e0d\u7b26\u5408\u5b8c\u6574\u6027\u7ea6\u675f\u6761\u4ef6\uff0c\u63d2\u5165\u53ef\u80fd\u4f1a\u5931\u8d25\u3002</p> Example <pre><code>create table instructor (\n    ID             char(5),\n    name           varchar(20) not null,\n    dept_name      varchar(20),\n    salary         numeric(8,2),\n    primary key (ID),\n    foreign key (dept_name) references department)\n</code></pre> <p>\u53ef\u4ee5\u7ed9\u4e00\u4e2a\u7f3a\u7701\u503ce.g. <code>default 0</code></p> Example <p><pre><code>create table takes (\n        ID                  varchar(5),\n        course_id       varchar(8),\n        sec_id            varchar(8),\n        semester        varchar(6),\n        year                numeric(4,0),\n        grade              varchar(2),\n        primary key (ID, course_id, sec_id, semester, year),\n        foreign key (ID) references  student,\n        foreign key (course_id, sec_id, semester, year) references section );\n</code></pre> - <code>sec_id</code> can be dropped from primary key above, to ensure a student cannot be registered for two sections of the same course in the same semester</p> <p>\u5982\u679c\u5f15\u7528\u7684\u8868\u4e2d\u6709\u6761\u76ee\u88ab\u5220\u9664\uff0c\u53ef\u80fd\u4f1a\u7834\u574f\u5b8c\u6574\u6027\u7ea6\u675f\u6761\u4ef6\u3002\u6709\u4e0b\u9762\u7684\u65b9\u6cd5\uff1a  </p> <ul> <li>restrict: \u5982\u679c\u6709\u6761\u76ee\u662f\u88ab\u5f15\u7528\u7684\uff0c\u90a3\u4e48\u4e0d\u5141\u8bb8\u5220\u9664\u3002</li> <li>cascade: \u5f15\u7528\u7684\u6761\u76ee\u88ab\u5220\u4e86\u4e4b\u540e\uff0c\u5f15\u7528\u8005\u4e5f\u4e00\u5e76\u5220\u9664</li> <li>set null: \u5f15\u7528\u8005\u7684\u6307\u9488\u8bbe\u4e3a <code>null</code>. </li> <li>set default : \u5f15\u7528\u8005\u7684\u5bf9\u5e94<code>Attribute</code>\u503c\u8bbe\u7f6e\u4e3a\u7f3a\u7701\u503c </li> </ul> <p>\u5982\u679c\u5f15\u7528\u7684\u8868\u4e2d\u6709\u66f4\u65b0\uff0c\u4e5f\u6709\u7c7b\u4f3c\u4e0a\u9762\u7684\u56db\u79cd\u65b9\u6cd5.</p> <p>Example</p> <p><pre><code>create table course (\n    course_id        varchar(8) primary key,\n    title            varchar(50),\n    dept_name        varchar(20),\n    credits          numeric(2,0),\n    foreign key (dept_name) references department (dept_name));\n</code></pre> - \u53ef\u4ee5\u76f4\u63a5\u5c06primary key\u5199\u5728\u540e\u9762</p> <p>\u5728 <code>create table</code> \u4e2d\u5b9a\u4e49 * <code>on delete cascade  |set null |restrict |set default</code> * <code>on update cascade  |set null |restrict |set default</code></p> <p>insert into instructor values (\u201810211\u2019, \u2019Smith\u2019, \u2019Biology\u2019, 66000); insert into instructor values (\u201810211\u2019, null, \u2019Biology\u2019, 66000);</p>"},{"location":"DB/DB3/#drop-and-alter-table-constructs","title":"Drop and Alter Table Constructs","text":"<ul> <li>drop table student<ul> <li>Deletes the table and its contents</li> </ul> </li> <li>delete from student<ul> <li>Deletes all contents of table, but retains table</li> </ul> </li> <li>alter table<ul> <li>alter table r add A D<ul> <li>where A is the name of the attribute to be added to relation r  and D is the domain of A.</li> <li>All tuples in the relation are assigned null as the value for the new attribute.  </li> <li>alter table student add resume varchar(256);</li> </ul> </li> <li>alter table r drop A<ul> <li>where A is the name of an attribute of relation r</li> <li>Dropping of attributes not supported by many databases</li> </ul> </li> </ul> </li> </ul> <p>Abstract</p> <ul> <li>drop\u6bd4delete\u66f4\u5f3a\uff0c\u540e\u8005\u4fdd\u7559\u5173\u7cfb\uff0c\u524d\u8005\u4e0d\u4fdd\u7559</li> <li>alter\u53ef\u4ee5\u7ed9\u5df2\u6709\u5173\u7cfb\u589e\u52a0\u6216\u51cf\u5c11\u5c5e\u6027</li> </ul>"},{"location":"DB/DB3/#sql-and-relational-algebra","title":"SQL and Relational Algebra","text":"<pre><code>select A1, A2, .. An\nfrom   r1, r2, \u2026, rm\nwhere P\n</code></pre> <p>is equivalent to the following expression in multiset relational algebra</p> <p>\\(\\Pi_{A_1, .., A_n}(\\sigma_P(r_1 \\times r_2 \\times .. \\times r_m))\\)</p> <pre><code>select A1, A2, sum(A3)\nfrom   r1, r2, \u2026, rm\nwhere P\ngroup by A1, A2\n</code></pre> <p>is equivalent to the following expression in multiset relational algebra</p> <p>\\(A_1, A_2G_{sum(A3)} ( \\sigma_P (r_1 \\times r_2 \\times .. \\times r_m)))\\)</p> <p>More generally, the non-aggregated attributes in the select clause may be a subset of the group by attributes, in which case the equivalence is as follows:</p> <pre><code>select A1, sum(A3)\nfrom   r1, r2, \u2026, rm\nwhere P\ngroup by A1, A2\n</code></pre> <p>is equivalent to the following expression in multiset relational algebra \\(\\Pi_{A1,sumA3}( A1,A2 G_{sum(A3) as sumA3}(\\sigma_P (r_1 \\times r_2  \\times .. \\times r_m)))\\)</p>"},{"location":"DB/DB3/#test-for-absence-of-duplicate-tuples","title":"Test for Absence of Duplicate Tuples","text":"<p>The unique construct tests whether a subquery has any duplicate tuples in its result. (Evaluates to \u201ctrue\u201d on an empty set) Find all courses that were offered at most once in 2009</p> <pre><code>  select T.course_id\n  from course as T\n  where unique (select R.course_id\n                          from section as R\n                          where T.course_id= R.course_id and R.year = 2009) ;\n</code></pre>"},{"location":"DB/DB3/#basic-query-structure","title":"Basic Query Structure","text":"<p>Abstract</p> <ul> <li>select\u7528\u4e8e\u5217\u51fa\u67e5\u8be2\u7ed3\u679c\u4e2d\u6240\u9700\u8981\u7684\u5c5e\u6027</li> <li>from\u7528\u4e8e\u5217\u51fa\u5728\u67e5\u8be2\u6c42\u503c\u4e2d\u5e94\u8be5\u8bbf\u95ee\u7684\u5173\u7cfb\u5217\u8868<ul> <li>from\u540e\u9762\u4e00\u4e2a\u8868\u662f\u5355\u5173\u7cfb\u67e5\u8be2\uff0c\u591a\u4e2a\u8868\u662f\u591a\u5173\u7cfb\u67e5\u8be2</li> </ul> </li> <li>where\u662f\u4f5c\u7528\u5728from\u5b50\u53e5\u4e2d\u5173\u7cfb\u7684\u5c5e\u6027\u4e0a\u7684\u8c13\u8bcd</li> </ul>"},{"location":"DB/DB3/#the-select-clause","title":"The <code>select</code> Clause","text":"<ul> <li>The <code>select</code> clause list the attributes desired in the result of a query.  </li> <li>corresponds to the projection operation of the relational algebra</li> <li>SQL names are case insensitive  \u5927\u5c0f\u5199\u4e0d\u654f\u611f\u3002\uff08\u5c5e\u6027\u540d\u5b57\u3001\u8868\u7684\u540d\u5b57\u7b49\uff09</li> </ul> <p>Example</p> <p>Name \\(\u2261\\) NAME \\(\u2261\\) name</p> <ul> <li>To force the elimination of duplicates, insert the keyword <code>distinct</code> after select. e.g. <code>select distinct dept_name from instructor</code> \u53ef\u4ee5\u52a0 all \u663e\u5f0f\u6307\u660e\u4e0d\u53bb\u91cd</li> <li>An asterisk in the select clause denotes \u201call attributes\u201d e.g. <code>select * from instructor</code></li> <li>The select clause can contain arithmetic expressions involving the operation, +, \u2013, \\(\\div\\), and /, and operating on constants or attributes of tuples. \u53ef\u4ee5\u6709\u52a0\u51cf\u4e58\u9664\u8fd0\u7b97 e.g. <code>select ID, name, salary/12 from instructor</code></li> </ul> <p>find the names of all instructors</p> <ul> <li>select name</li> <li>from instructor</li> </ul>"},{"location":"DB/DB3/#the-where-clause","title":"The <code>where</code> Clause","text":"<ul> <li>The <code>where</code> clause specifies conditions that the result must satisfy.</li> <li>Corresponds to the selection predicate of the relational algebra.  </li> <li> <p>where\u5141\u8bb8\u6211\u4eec\u9009\u51fa\u90a3\u4e9b\u5728from\u91cc\u6ee1\u8db3\u7279\u5b9a\u5173\u7cfb\u7684\u5143\u7ec4</p> </li> <li> <p>SQL includes a <code>between</code> comparison operator e.g. <code>select name from instructor where salary between 90000 and 100000</code></p> </li> <li>Tuple comparison \u5143\u7ec4\u76f8\u7b49\u7b49\u4ef7\u4e8e\u5404\u4e2a\u5143\u7d20\u90fd\u76f8\u7b49\u3002 e.g. <code>select name, course_id from instructor, teaches where (instructor.ID, dept_name) = (teaches.ID, \u2019Biology\u2019);</code> </li> </ul> To find all instructors in Comp. Sci. dept with salary &gt; 80000 <pre><code>select name \nfrom instructor \nwhere dept_name = \u2018Comp. Sci.'  and salary &gt; 80000\n</code></pre> <ul> <li>Comparison results can be combined using the logical connectives and, or, and not.(\u903b\u8f91\u8fde\u8bcd) </li> <li>Comparisons can be applied to results of arithmetic expressions.(\u7b97\u672f\u8868\u8fbe\u5f0f\uff0c\u6bd4\u8f83\u8fd0\u7b97\u7b26)</li> </ul>"},{"location":"DB/DB3/#the-from-clause","title":"The <code>from</code> clause","text":"<p>The <code>from</code> clause lists the relations involved in the query. Corresponds to the Cartesian product operation of the relational algebra.  </p>"},{"location":"DB/DB3/#natural-join","title":"Natural Join","text":"<p>e.g. <code>select * from instructor natural join teaches;</code></p> <p>e.g. <code>select name, course_id from instructor, teaches where instructor.ID = teaches.ID;</code> <code>select name, course_id from instructor natural join teaches;</code>  \u4e0a\u9762\u4e24\u6761\u8bed\u53e5\u662f\u7b49\u4ef7\u7684\u3002</p> <p>Unrelated attributes with same name which get equated incorrectly! </p> <p>Example</p> <p><code>course(course_id,title, dept_name,credits\uff09</code>, <code>teaches(ID, course_id,sec_id,semester, year)</code>, <code>instructor(ID, name, dept_name,salary\uff09</code> \u8fd9\u91cc\u7684 department \u542b\u4e49\u5404\u6709\u4e0d\u540c\uff0c\u4e0d\u80fd\u76f4\u63a5\u81ea\u7136\u8fde\u63a5\u3002 \u53ef\u4ee5\u5199\u6210 <code>select name, title from (instructor natural join teaches\uff09join course using(course_id);</code> \u5373\u89c4\u5b9a\u8fde\u63a5\u7684\u5c5e\u6027\uff0c\u5bf9\u5e94\u4e8e \\(\\sigma_\\theta\\) </p> <p>Find students who takes courses across his/her department. \u53ef\u5199\u4f5c </p> <pre><code>select distinct student.id\n    from (student natural join takes) \n           join course using (course_id\uff09 \n    where student.dept_name &lt;&gt; course.dept_name\n</code></pre>"},{"location":"DB/DB3/#the-rename-operation","title":"The Rename Operation","text":"<p>The SQL allows renaming relations and attributes using the <code>as</code> clause. <code>old-name as new-name</code></p> <p>e.g. <code>select distinct T. name from instructor as T, instructor as S where T.salary &gt; S.salary and S.dept_name = \u2018Comp. Sci.\u2019</code></p> <ul> <li> <p>S,T\u4e00\u822c\u88ab\u79f0\u4e3a\u8868\u522b\u540d/\u76f8\u5173\u540d\u79f0/\u76f8\u5173\u53d8\u91cf/\u5143\u7ec4\u53d8\u91cf</p> </li> <li> <p>Keyword <code>as</code> is optional and may be omitted.  </p> </li> </ul>"},{"location":"DB/DB3/#string-operations","title":"String Operations","text":"<p>SQL includes a string-matching operator for comparisons on character strings.  The operator <code>like</code> uses patterns that are described using two special characters. </p> <p>\u6ce8\u610f\u5355\u5f15\u53f7\u8868\u793a\u5b57\u7b26\u4e32\u3002</p> <ul> <li>percent (%).  The % character matches any substring. e.g. <code>select name from instructor where name like '%dar%';</code> \u627e\u540d\u5b57\u91cc\u9762\u542b\u6709 <code>dar</code> \u7684\u5b57\u7b26\u4e32\u3002 </li> <li>underscore (_).  The _ character matches any character.  </li> </ul> <p>Match the string</p> <p>\u5339\u914d\u5b57\u7b26\u4e32 <code>'100 %'</code> \u4f46\u662f <code>%</code> \u7b26\u53f7\u88ab\u6211\u4eec\u4f5c\u4e3a\u4e86\u901a\u914d\u7b26\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u7528\u5230\u8f6c\u4e49\u7b26 <code>\\</code>. <code>\\%</code> \u5373\u5c06 <code>%</code> \u4f5c\u4e3a\u6b63\u5e38\u5b57\u7b26\u5339\u914d\u3002 <code>\\</code> \u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u57fa\u672c\u7b26\u53f7\uff0c\u6211\u4eec\u9700\u8981\u5728\u540e\u9762\u5199\u51fa <code>escape</code> \u8868\u793a\u5176\u5728\u8fd9\u91cc\u4f5c\u4e3a\u8f6c\u4e49\u7b26\u3002\u7c7b\u4f3c\u5730\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u8f6c\u4e49\u7b26\u5b9a\u4e49\u4e3a <code>#</code>.  <pre><code>like \u2018100 \\%'  escape  '\\' \nlike \u2018100 \\%'  \nlike \u2018100  #%'  escape  \u2018#' \n</code></pre></p> <p>SQL supports a variety of string operations such as</p> <ul> <li>concatenation (using <code>||</code>)</li> <li>converting from upper to lower case (and vice versa)</li> <li>finding string length, extracting substrings, etc.  </li> </ul>"},{"location":"DB/DB3/#ordering-the-display-of-tuples","title":"Ordering the Display of Tuples","text":"<ul> <li> <p>\u5173\u7cfb\u662f\u65e0\u5e8f\u7684\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u89c4\u5b9a\u663e\u793a\u51fa\u6765\u7684\u987a\u5e8f\u3002</p> </li> <li> <p>We may specify desc for descending order or asc for ascending order, for each attribute; ascending order is the default. e.g. <code>order by name desc</code> \u53ef\u4ee5\u6392\u5e8f\u7684\u7c7b\u578b\uff0c\u5982\u5b57\u7b26\u4e32\u3001\u6570\u5b57\u3002</p> </li> <li>Can sort on multiple attributes e.g. <code>order by  dept_name, name</code> \u5148\u6309\u7b2c\u4e00\u4e2a\u6392\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u5143\u7d20\u76f8\u540c\u518d\u6309\u7b2c\u4e8c\u4e2a\u6392\u3002</li> </ul> <p>List in alphabetic order the names of all instructors</p> <pre><code>select distinct name\nfrom   instructor\norder by name\n</code></pre>"},{"location":"DB/DB3/#the-limit-clause","title":"The <code>limit</code> Clause","text":"<ul> <li>The <code>limit</code> clause can be used to constrain the number of rows returned by the select statement.\uff08\u524d\u51e0\u540d\uff09</li> <li> <p>limit clause takes one or two numeric arguments, which must both be nonnegative integer constants: </p> </li> <li> <p><code>limit offset, row_count</code></p> </li> <li><code>limit row_count == limit 0, row_count</code></li> </ul> <p>e.g. <code>select  name from instructor order by salary desc limit 3\uff1b   //  limit 0,3</code></p>"},{"location":"DB/DB3/#set-operations","title":"Set Operations","text":"<ul> <li><code>union, intersect, except</code> \u662f\u4e25\u683c\u7684\u96c6\u5408\u64cd\u4f5c\uff0c\u4f1a\u5bf9\u7ed3\u679c\u53bb\u91cd.</li> <li><code>union all</code>, <code>intersect all</code> and <code>except all</code>. \u4fdd\u6301\u591a\u91cd\u96c6\u3002</li> </ul> Example"},{"location":"DB/DB3/#null-values","title":"Null Values","text":"<p>null signifies an unknown value or that a value does not exist.</p> <ul> <li>The result of any arithmetic expression involving null is null. e.g. <code>5 + null</code> returns null</li> <li>The predicate is null can be used to check for null values. e.g. Find all instructors whose salary is null.  <code>select name from instructor where salary is null</code></li> <li> <p>Comparisons with null values return the special truth value: unknown. </p> </li> <li> <p>Result of select predicate is treated as false if it evaluates to unknown</p> </li> </ul>"},{"location":"DB/DB3/#aggregate-functions","title":"Aggregate Functions","text":"Example <p>\u6ce8\u610f\u5728 <code>select</code> \u91cc\u51fa\u73b0\u7684\u5c5e\u6027\uff0c\u9664\u4e86\u7edf\u8ba1\u51fd\u6570\u4ee5\u5916\uff0c\u4e00\u5b9a\u8981\u662f\u5206\u7ec4\u5c5e\u6027\u91cc\u51fa\u73b0\u8fc7\u7684\u3002</p> <p>Tip</p> <ul> <li>\u661f\u53f7\"*\"\u53ef\u4ee5\u7528\u5728select\u5b50\u53e5\u4e2d\u8868\u793a\u201c\u6240\u6709\u7684\u5c5e\u6027\uff0c\u5982<code>select *</code>\u6216<code>select instructor.*</code></li> </ul>"},{"location":"DB/DB3/#having-clause","title":"Having Clause","text":"<p>\u5bf9\u5206\u7ec4\u540e\u7684\u7ec4\u8fdb\u884c\u7b5b\u9009\u3002  </p> <p>e.g. </p> <pre><code>select dept_name, count (*) as cnt\nfrom instructor\nwhere  salary &gt;=100000\ngroup by dept_name\nhaving  count (*) &gt; 10\norder by cnt;\n</code></pre> <p>predicates in the <code>having</code> clause are applied after the formation of groups whereas predicates in the <code>where</code> clause are applied before forming groups.  </p>"},{"location":"DB/DB3/#null-values-and-aggregates","title":"Null Values and Aggregates","text":"<p><code>select sum (salary) from instructor</code> </p> <ul> <li>Above statement ignores null amounts</li> <li>Result is null if there is no non-null amount</li> <li>All aggregate operations except <code>count(*)</code> ignore tuples with null values on the aggregated attributes</li> </ul> Arithmetric expression with Aggregate functions <p> </p> <p>\u7b2c\u4e8c\u4e2a\u8868\u793a\u91cd\u540d\u7387\u5c0f\u4e8e\u5343\u5206\u4e4b\u4e00\u7684\u7cfb\u3002</p>"},{"location":"DB/DB3/#nested-subqueries","title":"Nested Subqueries","text":"<p>A subquery is a select-from-where expression that is nested within another query.</p>"},{"location":"DB/DB3/#set-membership","title":"Set Membership","text":"<p><code>in, not in</code></p> Example <p> </p> <p>\u9664\u4e86\u5355\u4e2a\u5143\u7d20\u5916\uff0c\u5143\u7ec4\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>in, not in</code> </p> <p>Find the total number of (distinct) students who have taken course sections taught by the instructor with ID 10101</p> <pre><code>select count (distinct ID)\nfrom takes\nwhere (course_id, sec_id, semester, year) in \n        (select course_id, sec_id, semester, year\n                                 from teaches\n                                 where teaches.ID= \u201810101\u2019);\n</code></pre>"},{"location":"DB/DB3/#set-comparison","title":"Set Comparison","text":"<ul> <li><code>some</code> \u67d0\u4e9b\u6210\u5458   </li> <li><code>all</code> \u6240\u6709\u6210\u5458</li> </ul> <p>Example</p> <p>\u5de5\u8d44\u5927\u4e8e\u751f\u7269\u7cfb\u4e2d\u7684\u67d0\u4e9b\u8001\u5e08\u7684\u8001\u5e08. <pre><code>select name\nfrom instructor\nwhere salary &gt; some (select salary\n                                    from instructor\n                                    where dept_name = \u2019Biology\u2019);\n</code></pre></p>"},{"location":"DB/DB3/#scalar-subquery","title":"Scalar Subquery","text":"<p>Scalar (\u6807\u91cf) subquery is one which is used where a single value is expected.  </p> <p>Example</p> <pre><code>select name\nfrom instructor\nwhere  salary * 10 &gt; \n    (select budget from department \n    where department.dept_name = instructor.dept_name)\n</code></pre> <p>\u8fd9\u91cc <code>dept_name</code> \u662f\u8fd9\u4e2a\u8868\u7684\u4e3b\u952e\uff0c\u53ea\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u53ef\u4ee5\u4e0d\u7528 <code>some, all</code> \u7684\u3002</p> <p>Runtime error if subquery returns more than one result tuple.  </p>"},{"location":"DB/DB3/#test-for-empty-relations","title":"Test for Empty Relations","text":"<p>The exists construct returns the value true if the argument subquery is nonempty.</p> <ul> <li><code>exists r</code> \\(\\Leftrightarrow r \\neq \\emptyset\\)</li> <li><code>not exists r</code> \\(\\Leftrightarrow r = \\emptyset\\)</li> </ul> <p>Example</p> <p>09FALL \u5f00\u7684\u8bfe\uff0c\u800c\u4e14 10SPRING \u4e5f\u5f00\u4e86\u8bfe\u3002 <pre><code>select course_id\nfrom section as S\nwhere semester = \u2019Fall\u2019 and year= 2009 and                exists (select *                            \nfrom section as T                      \n    where semester = \u2019Spring\u2019 and year= 2010 and S.course_id= T.course_id);\n</code></pre></p> <p>Example</p> <p>Find all students who have taken all courses offered in the Biology department. SQL \u8bed\u53e5\u5f80\u5f80\u9700\u8981\u9006\u5411\u8003\u8651\uff0c\u5373\u627e\u5230\u8fd9\u6837\u7684\u5b66\u751f\uff0c\u4e0d\u5b58\u5728\u4ed6\u6ca1\u9009\u8fc7\u7684\u751f\u7269\u7cfb\u7684\u8bfe\u3002 <pre><code>select distinct S.ID, S.name\nfrom student as S\nwhere not exists ( (select course_id\n                        from course\n                        where dept_name = \u2019Biology\u2019)\n                except\n                    (select T.course_id\n                        from takes as T\n                        where S.ID = T.ID));\n</code></pre></p>"},{"location":"DB/DB3/#test-for-absence-of-duplicate-tuples_1","title":"Test for Absence of Duplicate Tuples","text":"<p>The <code>unique</code> construct tests whether a subquery has any duplicate tuples in its result. \u9a8c\u8bc1\u662f\u5426\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u800c\u975e\u591a\u91cd\u96c6\u3002  </p> <ul> <li>Evaluates to \u201ctrue\u201d on an empty set.  \u53ef\u4ee5\u5c06 unique \u7406\u89e3\u4e3a at most once. </li> </ul> <p>Example</p> <p> </p> <ul> <li>\u5982\u679c\u4e0d\u52a0 exist, \u53ef\u80fd\u6709\u6ca1\u5f00\u8fc7\u7684\u8bfe\u4e5f\u88ab\u7b97\u8fdb\u53bb\u3002\u6211\u4eec\u8fd9\u91cc\u6c42\u5f97\u662f\u6070\u597d\u53ea\u5f00\u8fc7\u4e00\u6b21\u7684\u3002</li> </ul> Example <p> - \u4e5f\u53ef\u4ee5\u7528 <code>group by count(*) &gt; 1</code> \u5b9e\u73b0\u3002</p>"},{"location":"DB/DB3/#with-clause","title":"With Clause","text":"<p>The <code>with</code> clause provides a way of defining a temporary view whose definition is available only to the query in which the with clause occurs. \u6784\u9020\u4e00\u4e2a\u4e34\u65f6\u8868(\u5b50\u67e5\u8be2\u627e\u6700\u503c\u4e4b\u7c7b\u7684) </p> <p>Example</p> <p>Find all departments with the maximum budget. <pre><code>with max_budget (value) as \n    (select max(budget)\n    from department)\nselect dept_name\nfrom department, max_budget\nwhere department.budget = max_budget.value;\n</code></pre></p> <p>\u4e24\u4e2a\u4e34\u65f6\u8868</p> <ul> <li>Complex Queries using With Clause <pre><code>with dept _total (dept_name, value) as //\u4e24\u4e2a\u4e34\u65f6\u8868 \n        (select dept_name, sum(salary) \n         from instructor\n         group by dept_name),\n        dept_total_avg(value) as\n        (select avg(value)\n         from dept_total)\nselect dept_name\nfrom dept_total, dept_total_avg\nwhere dept_total.value &gt;= dept_total_avg.value;\n</code></pre></li> </ul>"},{"location":"DB/DB3/#modification-of-the-database","title":"Modification of the Database(\u6570\u636e\u5e93\u7684\u4fee\u6539)","text":""},{"location":"DB/DB3/#deletion","title":"Deletion","text":"Example"},{"location":"DB/DB3/#insertion","title":"Insertion","text":"Example <p>\u7b2c\u4e8c\u79cd\u5199\u6cd5\uff0c\u53ef\u4ee5\u4e0d\u7528\u4e25\u683c\u6309\u7167\u5b9a\u4e49\u7684\u5143\u7d20\u987a\u5e8f\uff0c\u53ea\u8981\u548c\u81ea\u5df1\u5199\u7684\u5bf9\u5e94\u5373\u53ef\u3002</p> <p>\u9664\u4e86\u57fa\u672c\u5199\u6cd5\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728 <code>insert</code> \u540e\u8ddf\u67e5\u8be2\u8bed\u53e5\uff0c\u628a\u67e5\u8be2\u7ed3\u679c\u63d2\u5165\u5230\u8868\u91cc\u53bb\u3002</p> Example <p> </p>"},{"location":"DB/DB3/#updates","title":"Updates","text":"<p><code>update ... set ...</code></p> <p>The order is important. So it can be done better using the <code>case</code> statement.  </p> Example <p></p>"},{"location":"ODE/","title":"\u5e38\u5fae\u5206\u65b9\u6052","text":"<p>Abstract</p> <p>\u5e38\u5fae\u5206\u65b9\u7a0b\u8bfe\u7a0b\u7b14\u8bb0</p>"},{"location":"ODE/ode1/","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>Abstract</p> <p>\u4e00\u822c\u7684\uff0c\u5728\u4e00\u4e2a\u65b9\u7a0b\u6216\u8005\u65b9\u7a0b\u7ec4\u4e2d\uff0c\u5982\u679c\u672a\u77e5\u91cf\u662f\u4e00\u4e2a\u51fd\u6570(\u7ec4)\uff0c\u800c\u4e14\u8be5\u65b9\u7a0b\u4e2d\u542b\u6709\u6b64\u672a\u77e5\u51fd\u6570\u7684\u5bfc\u6570(\u7ec4)\uff0c\u5219\u79f0\u8fd9\u79cd\u65b9\u7a0b\u4e3a\u5fae\u5206\u65b9\u7a0b(\u7ec4)\u3002 - \u5982\u679c\u5728\u5fae\u5206\u65b9\u7a0b\u91cc\uff0c\u51fa\u73b0\u7684\u672a\u77e5\u51fd\u6570\u662f\u5355\u4e2a\u81ea\u53d8\u91cf\u7684\u51fd\u6570\uff0c\u6211\u4eec\u79f0\u8fd9\u4e00\u7c7b\u5fae\u5206\u65b9\u7a0b\u4e3a\u5e38\u5fae\u5206\u65b9\u7a0b - \u5982\u679c\u672a\u77e5\u51fd\u6570\u6709\u4e24\u4e2a\u6216\u4ee5\u4e0a\u7684\u81ea\u53d8\u91cf\uff0c\u5219\u79f0\u4e3a\u504f\u5fae\u5206\u65b9\u7a0b</p>"},{"location":"ODE/ode1/#_2","title":"\u9636","text":"<p>\u5728\u5fae\u5206\u65b9\u7a0b\u4e2d\u51fa\u73b0\u7684\u672a\u77e5\u51fd\u6570\u7684\u5bfc\u6570\u7684\u6700\u9ad8\u9636\u6570\uff0c\u79f0\u4e3a\u5fae\u5206\u65b9\u7a0b\u7684\u9636</p> <p>Example</p> <ul> <li>\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a\\(F(x,y,\\frac{dy}{dx}) = 0\\)</li> <li>\\(F(x,y,\\frac{\\mathrm{d}y}{\\mathrm{d}x},\\cdots,\\frac{\\mathrm{d}^ny}{\\mathrm{d}x^n})=0\\)\u4e3a\\(n\\)\u9636\u65b9\u7a0b</li> <li>eg. \\(\\frac{d^2y}{dx^2} = \\frac{1}{a}\\sqrt{1+(\\frac{dy}{dx})^2}\\)\u4e3a\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b</li> </ul>"},{"location":"ODE/ode1/#_3","title":"\u89e3","text":"<ul> <li>\u5982\u679c\\(y = \\varphi(x)\\)\u6ee1\u8db3\\(F(x,y,\\frac{\\mathrm{d}y}{\\mathrm{d}x},\\cdots,\\frac{\\mathrm{d}^ny}{\\mathrm{d}x^n})=0\\)\uff0c\u5219\u8be5\u51fd\u6570\u79f0\u4e3aODE\u7684\u89e3</li> <li>\u9690\u5f0f\u89e3\uff1a\u82e5\\(\\Phi(x,y) = 0\\)\u51b3\u5b9a\u7684\\(y = \\varphi(x)\\),\u5219\u79f0\\(\\Phi(x,y) = 0\\)\u4e3a\u9690\u5f0f\u89e3</li> <li>\u901a\u89e3\uff1a\u5982\\(y = \\varphi(x,c_1,c_2,\\cdots,c_n)\\)</li> <li>\u65b9\u7a0b\u7684\u89e3\u6216\u79ef\u5206\u5728\\((x, y)\\)\u5e73\u9762\u4e0a\u7684\u56fe\u5f62\u79f0\u4e3a\u8be5\u65b9\u7a0b\u7684\u79ef\u5206\u66f2\u7ebf</li> </ul>"},{"location":"ODE/ode1/#_4","title":"\u89e3\u7684\u5b58\u5728\u6027","text":"<p>\u4f8b\uff1a\\(\\frac{dy}{dx} = f(x, y)\\)</p> <ul> <li>\u521d\u503c\u6761\u4ef6\u4e3a\uff1a\\(y|_{x = x_0} = y_0\\)</li> </ul> <p>\u8bbe\\(f(x, y)\\)\u5728\u533a\u57df\\(D: |x - x_0| \\leq a, |y - y_0| \\leq b\\)\u5185\u8fde\u7eed\uff0c\u4e14\u6709\u5bf9\u4e8e\\(y\\)\u7684\u504f\u5bfc\u6570,\u5219\u5728\u533a\u95f4\\(|x - x_0| &lt; h \\quad (h = min(a,\\frac{b}{M}), M = \\max\\limits_{(x, y) \\in D}|f(x, y)|)\\)\u5185\u5b58\u5728\u552f\u4e00\u7684\\(y = \\varphi(x)\\)</p> <ul> <li>\u6ee1\u8db3\u521d\u59cb\u6761\u4ef6\u7684\u89e3\u79f0\u4e3a\u7279\u89e3</li> </ul>"},{"location":"ODE/ode1/#_5","title":"\u901a\u89e3","text":"<p>\u4e00\u822c\u7684\uff0c\u5982\u679c\u542b\u6709\u4e00\u4e2a\u4efb\u610f\u5e38\u6570\\(c\\)\u7684\u51fd\u6570\\(y = \\varphi(x, c)\\)\u6ee1\u8db3\\(\\frac{d \\varphi(x, c)}{dx} \\equiv f(x, \\varphi(x, c))\\),\u5219\u79f0\\(\\varphi(x, c)\\)\u4e3a\u901a\u89e3</p>"},{"location":"ODE/ode2/","title":"\u53d8\u91cf\u5206\u79bb","text":""},{"location":"ODE/ode2/#_2","title":"\u57fa\u672c\u5f62\u5f0f","text":"\\[\\frac{dy}{dx} = \\varphi(x)\\phi(y)\\] <p>\u7279\u70b9\u662f\uff0c\u65b9\u7a0b\u53f3\u8fb9\u662f\u4e00\u4e2a\\(x\\)\u7684\u51fd\u6570\u4e0e\\(y\\)\u7684\u51fd\u6570\u76f8\u4e58,\u8fd9\u7c7b\u5c31\u662f\u53ef\u5206\u79bb\u53d8\u91cf\u7684\u5fae\u5206\u65b9\u7a0b\u3002</p> <p>\u6211\u4eec\u53ea\u9700\u8fdb\u884c\u53d8\u6362\uff0c\u4f7f\u5f97\u4e00\u8fb9\u5bf9\\(x\\)\u79ef\u5206\uff0c\u4e00\u8fb9\u5bf9\\(y\\)\u79ef\u5206</p> \\[\\frac{dy}{\\phi(y)} = \\varphi(x)dx\\]"},{"location":"OOP/","title":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u201d \u8bfe\u7a0b\u53ca\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <ul> <li>Prof:\u8bb8\u5a01\u5a01</li> <li>TA\uff1a</li> </ul>"},{"location":"OOP/oop1/","title":"Chapter 1 Introduction","text":"<p>Abstract</p> <ul> <li>\u62bd\u8c61</li> <li>\u5c01\u88c5\u548c\u6570\u636e\u9690\u85cf</li> <li>\u591a\u6001</li> <li>\u7ee7\u627f</li> <li>\u4ee3\u7801\u7684\u53ef\u91cd\u7528\u6027</li> </ul>"},{"location":"OOP/oop1/#class","title":"Class(\u7c7b)","text":"<p>\u7c7b\u662f\u4e00\u79cd\u5c06\u62bd\u8c61\u8f6c\u5316\u4e3a\u7528\u6237\u5b9a\u4e49\u7c7b\u578b\u7684C++\u5de5\u5177\uff0c\u4ed6\u5c06\u6570\u636e\u7c7b\u578b\u548c\u64cd\u7eb5\u6570\u636e\u7684\u65b9\u6cd5\u7ec4\u5408\u6210\u4e00\u4e2a\u6574\u6d01\u7684\u5305\u3002</p> <p>\u8fd9\u91cc\u5982\u4e0b\u662f<code>CS61A</code>\u7684<code>Account</code>\u4ee5\u53ca\u5bf9\u5e94\u7684<code>C++</code>\u7248\u672c</p> <pre><code>class Account:\n    def __init__(self, account_holder):\n        self.balance = 0\n        self.holder = account_holder\n    def deposit(self, amount):\n        self.balance = self.balance + amount\n        return self.balance\n    def withdraw(self, amount):\n        if amount &gt; self.balance:\n            return 'Insufficient funds'\n        self.balance = self.balance - amount\n        return self.balance\n</code></pre> <pre><code>#include&lt;iostream&gt;\n#include&lt;string&gt;\nusing namespace std;\n\nclass Account\n{\nprivate:\n    /* data */\n    int accountNumber;\n    string accountHolderName;\n    double balance;\npublic:\n    Account(int accountNumber = 0, string accountHolderName = \"No name\", double balance = 0);\n    /*\n    Account();//default constructor(\u9ed8\u8ba4\u6784\u9020\u51fd\u6570)\n    \u5df2\u7ecf\u63d0\u4f9b\u663e\u793a\u6784\u9020\u51fd\u6570\u540e\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u518d\u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u6240\u4ee5\u8fd9\u91cc\u4f1a\u62a5\u9519\uff0c\u53ea\u80fd\u624b\u52a8\u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\n    */\n    void withdraw(double amount);\n    void deposit(double amount);\n    void display();\n}; \n\nvoid Account::display()\n{\n    cout &lt;&lt; \"Account Number: \" &lt;&lt; accountNumber &lt;&lt; endl;\n    cout &lt;&lt; \"Account Holder Name: \" &lt;&lt; accountHolderName &lt;&lt; endl;\n    cout &lt;&lt; \"Balance: \" &lt;&lt; balance &lt;&lt; endl;\n}\n\n\nAccount::Account(int accountNumber, string accountHolderName, double balance)\n{\n    this-&gt;accountNumber = accountNumber;\n    this-&gt;accountHolderName = accountHolderName;\n    this-&gt;balance = balance;\n}\n\nvoid Account::withdraw(double amount)\n{\n    if (balance &lt; amount)\n    {\n        cout &lt;&lt; \"Insufficient balance\" &lt;&lt; endl;\n    }\n    else\n    {\n        balance -= amount;\n    }\n}\n\nvoid Account::deposit(double amount)\n{\n    balance += amount;\n}\n\nint main()\n{\n    Account a1(101, \"John\", 5000); //\u9690\u5f0f\u8c03\u7528\n    //Account a1 = Account(101, \"John\", 5000); \u663e\u5f0f\u8c03\u7528\n    a1.display();\n    a1.deposit(2000);\n    a1.display();\n    return 0;\n}\n</code></pre>"},{"location":"OOP/oop1/#_1","title":"\u8bbf\u95ee\u63a7\u5236","text":"<p>Info</p> <p><code>private</code>\u548c<code>public</code>\u63cf\u8ff0\u4e86\u5bf9\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u63a7\u5236\u3002\u4f7f\u7528\u7c7b\u5bf9\u8c61\u7684\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u516c\u6709\u90e8\u5206\uff0c\u4f46\u662f\u79c1\u6709\u5bf9\u8c61\u53ea\u80fd\u901a\u8fc7\u516c\u6709\u6210\u5458\u51fd\u6570(\u6216\u53cb\u5143\u51fd\u6570)\u6765\u8bbf\u95ee\u3002</p> <ul> <li>\u65e0\u8bba\u7c7b\u6210\u5458\u662f\u6570\u636e\u6210\u5458\u8fd8\u662f\u6210\u5458\u51fd\u6570\uff0c\u90fd\u53ef\u4ee5\u5728\u7c7b\u7684\u516c\u6709\u90e8\u5206\u6216\u79c1\u6709\u90e8\u5206\u4e2d\u58f0\u660e\u5b83\u3002\u4f46\u7531\u4e8e\u9690\u85cf\u6570\u636e\u662fOOP\u4e3b\u8981\u76ee\u6807\u4e4b\u4e00\uff0c\u56e0\u6b64\u901a\u5e38\u6570\u636e\u9879\u653e\u5728\u79c1\u6709\u90e8\u5206\u800c\u7ec4\u6210\u7c7b\u63a5\u53e3\u653e\u5728\u516c\u6709\u90e8\u5206</li> <li>\u901a\u5e38\uff0c\u4f7f\u7528\u79c1\u6709\u51fd\u6570\u6765\u5904\u7406\u4e0d\u5c5e\u4e8e\u516c\u6709\u63a5\u53e3\u7684\u90e8\u5206</li> </ul>"},{"location":"OOP/oop1/#_2","title":"\u5c01\u88c5","text":"<ul> <li>\u7c7b\u8bbe\u8ba1\u5c3d\u53ef\u80fd\u5c06\u516c\u6709\u63a5\u53e3\u4e0e\u5b9e\u73b0\u7ec6\u8282\u5206\u5f00\u3002\u516c\u6709\u63a5\u53e3\u8868\u793a\u8bbe\u8ba1\u7684\u62bd\u8c61\u7ec4\u4ef6\uff0c\u5c06\u5b9e\u73b0\u7ec6\u8282\u653e\u5728\u4e00\u8d77\u5e76\u5c06\u4ed6\u4eec\u4e0e\u62bd\u8c61\u5206\u5f00\u79f0\u4e4b\u4e3a\u5c01\u88c5</li> <li>\u6570\u636e\u9690\u85cf(\u5c06\u6570\u636e\u653e\u5728\u7c7b\u7684\u79c1\u6709\u90e8\u5206\u4e2d)\u4e5f\u662f\u4e00\u79cd\u5c01\u88c5\uff0c\u5c06\u5b9e\u73b0\u7ec6\u8282\u9690\u85cf\u5728\u79c1\u6709\u90e8\u5206(\u79c1\u6709\u63a5\u53e3)\u4e5f\u662f\u5c01\u88c5</li> </ul>"},{"location":"OOP/oop1/#_3","title":"\u5b9e\u73b0\u6210\u5458\u51fd\u6570","text":"<p>Abstract</p> <p>\u7c7b\u7684\u63cf\u8ff0\u7684\u7b2c\u4e8c\u90e8\u5206\uff1a\u4e3a\u90a3\u4e9b\u7c7b\u58f0\u660e\u7684\u539f\u578b\u8868\u793a\u7684\u6210\u5458\u51fd\u6570\u63d0\u4f9b\u4ee3\u7801 - \u5b9a\u4e49\u6210\u5458\u51fd\u6570\u65f6\uff0c\u4f7f\u7528\u4f5c\u7528\u57df\u89e3\u6790\u8fd0\u7b97\u7b26<code>(::)</code>\u6765\u6807\u8bc6\u51fd\u6570\u6240\u5c5e\u7684\u7c7b - \u7c7b\u7684\u65b9\u6cd5\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u7684<code>private</code>\u7ec4\u4ef6</p>"},{"location":"OOP/oop1/#inline-function","title":"Inline Function","text":"<p>Info</p> <p>\u5728C\u8bed\u8a00\u4e2d\uff0c\u5982\u679c\u4e00\u4e9b\u51fd\u6570\u88ab\u9891\u7e41\u8c03\u7528\uff0c\u4e0d\u65ad\u5730\u6709\u51fd\u6570\u5165\u6808\uff0c\u5373\u51fd\u6570\u6808\uff0c\u4f1a\u9020\u6210\u6808\u7a7a\u95f4\u6216\u6808\u5185\u5b58\u7684\u5927\u91cf\u6d88\u8017\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u7279\u522b\u7684\u5f15\u5165\u4e86<code>inline</code>\u4fee\u9970\u7b26\uff0c\u8868\u793a\u4e3a\u5185\u8054\u51fd\u6570\u3002(\u6808\u7a7a\u95f4\u5c31\u662f\u6307\u653e\u7f6e\u7a0b\u5f0f\u7684\u5c40\u90e8\u6570\u636e\u4e5f\u5c31\u662f\u51fd\u6570\u5185\u6570\u636e\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5728\u7cfb\u7edf\u4e0b\uff0c\u6808\u7a7a\u95f4\u662f\u6709\u9650\u7684\uff0c\u5047\u5982\u9891\u7e41\u5927\u91cf\u7684\u4f7f\u7528\u5c31\u4f1a\u9020\u6210\u56e0\u6808\u7a7a\u95f4\u4e0d\u8db3\u6240\u9020\u6210\u7684\u7a0b\u5f0f\u51fa\u9519\u7684\u95ee\u9898\uff0c\u51fd\u6570\u7684\u6b7b\u5faa\u73af\u9012\u5f52\u8c03\u7528\u7684\u6700\u7ec8\u7ed3\u679c\u5c31\u662f\u5bfc\u81f4\u6808\u5185\u5b58\u7a7a\u95f4\u67af\u7aed\u3002)</p> Example <pre><code>class Account\n{\nprivate:\n    int number;\n    void set_num(){number += 1;}//Inline Function\n}\uff1b\n/*\u6216\u8005\u4f7f\u7528inline\u4fee\u9970\u7b26*/\nclass Account\n{\nprivate:\n    int number;\n    void set_num();//Inline Function\n}\uff1b\ninline void set_num()\n{\n    number += 1;\n}\n</code></pre> <p>\u53ef\u4ee5\u7c7b\u6bd4\u4e3a<code>#define</code>,\u51fd\u6570\u4f1a\u5728\u8c03\u7528\u5b83\u7684\u5730\u65b9\u8fdb\u884c\u66ff\u6362\u3002(\u4e00\u822c\u5185\u8054\u51fd\u6570\u4e0d\u5efa\u8bae\u8d85\u8fc7\u5341\u884c)\uff0c\u8fd8\u8981\u786e\u4fdd\u5185\u8054\u51fd\u6570\u5bf9\u591a\u6587\u4ef6\u7a0b\u5e8f\u4e2d\u7684\u6240\u6709\u6587\u4ef6\u90fd\u662f\u53ef\u7528\u7684\uff0c\u6700\u7b80\u4fbf\u7684\u65b9\u6cd5\u662f\uff1a\u5c06\u5185\u8054\u5b9a\u4e49\u653e\u5728\u5b9a\u4e49\u7c7b\u7684\u5934\u6587\u4ef6\u91cc\u3002</p>"},{"location":"OOP/oop1/#constructor","title":"Constructor(\u6784\u9020\u51fd\u6570)","text":"<ul> <li>\u6784\u9020\u51fd\u6570\u867d\u7136\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u4f46\u662f\u6ca1\u6709\u88ab\u58f0\u660e\u4e3a<code>void</code>\uff0c\u5b9e\u9645\u4e0a\uff0c\u6784\u9020\u51fd\u6570\u6ca1\u6709\u58f0\u660e\u7c7b\u578b\u3002</li> <li>\u9690\u5f0f\u8c03\u7528\u6784\u9020\u51fd\u6570<ul> <li><code>Stock garment(\"Furry Mason\", 50, 2.5);</code></li> </ul> </li> <li>\u663e\u5f0f\u8c03\u7528\u6784\u9020\u51fd\u6570<ul> <li><code>Stock gaement = Stock(\"Furry Mason\", 50, 2.5);</code></li> </ul> </li> <li>\u4f7f\u7528<code>new</code>\u52a8\u6001\u5206\u914d\u5185\u5b58<ul> <li><code>Stock *pstock = new Stock(\"Furry Mason\", 50, 2.5);</code></li> </ul> </li> </ul> <p>default constructor(\u9690\u5f0f\u6784\u9020\u51fd\u6570)</p> <ul> <li>\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\u4efb\u4f55\u6784\u9020\u51fd\u6570\uff0c\u5219<code>C++</code>\u5c06\u81ea\u52a8\u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u5b83\u662f\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u9690\u5f0f\u7248\u672c\uff0c\u4e0d\u505a\u4efb\u4f55\u5de5\u4f5c</li> <li>\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u6ca1\u6709\u4efb\u4f55\u53c2\u6570\uff0c\u56e0\u4e3a\u58f0\u660e\u4e2d\u4e0d\u5305\u542b</li> <li>\u5982\u679c\u4e3a\u7c7b\u63d0\u4f9b\u4e86\u975e\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u800c\u6ca1\u6709\u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u5219\u7c7b\u4f3c\u4e0b\u9762\u7684\u58f0\u660e\u5c06\u51fa\u9519(\u7981\u6b62\u521b\u5efa\u672a\u521d\u59cb\u5316\u7684\u5bf9\u8c61)<ul> <li><code>Stock stock1;</code></li> </ul> </li> <li>\u5b9a\u4e49\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u6709\u4e24\u79cd\u65b9\u6cd5<ul> <li>\u7ed9\u5df2\u6709\u6784\u9020\u51fd\u6570\u63d0\u4f9b\u6240\u6709\u53c2\u6570\u9ed8\u8ba4\u503c</li> <li>\u51fd\u6570\u91cd\u8f7d\u6765\u5b9a\u4e49\u4e00\u4e2a\u6ca1\u6709\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570 </li> </ul> </li> </ul> <ul> <li><code>C++11</code>\u5217\u8868\u521d\u59cb\u5316(\u63d0\u4f9b\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u53c2\u6570\u5217\u8868\u5339\u914d\u7684\u5185\u5bb9)\uff1a<ul> <li><code>Stock stock1 = {\"name\", 2, 2.0};</code> </li> <li><code>Stock stock1 {\"name\", 2, 2.0};</code></li> </ul> </li> </ul>"},{"location":"OOP/oop1/#destructor","title":"Destructor(\u6790\u6784\u51fd\u6570)","text":"<ul> <li>\u5982\u679c\u6784\u9020\u51fd\u6570\u4f7f\u7528<code>new</code>\u6765\u5206\u914d\u5185\u5b58,\u5219\u4f7f\u7528<code>delete</code>\u6765\u91ca\u653e\u7a7a\u95f4</li> <li> <p>\u5982\u679c\u6ca1\u6709\u4f7f\u7528<code>new</code>,\u5219\u4f1a\u8ba9\u7f16\u8bd1\u5668\u751f\u6210\u4e00\u4e2a\u9690\u5f0f\u6790\u6784\u51fd\u6570</p> </li> <li> <p><code>C++</code>\u4e2d\u5bf9\u8c61<code>new</code>\u51fa\u6765\u548c\u76f4\u63a5\u58f0\u660e\u7684\u533a\u522b(\u7c7b\u4f3cmalloc)</p> <ul> <li>\u9996\u5148\uff0c\u6700\u76f4\u89c2\u7684\uff0cnew\u51fa\u6765\u7684\u5bf9\u8c61\u9700\u8981\u4f7f\u7528\u6307\u9488\u63a5\u6536\uff0c\u800c\u76f4\u63a5\u58f0\u660e\u7684\u4e0d\u7528\u3002\u4f8b\u5982 A* a=new A() \u4e0eA a\uff08\uff09\u3002</li> <li><code>new</code>\u51fa\u6765\u7684\u5bf9\u8c61\u662f\u76f4\u63a5\u4f7f\u7528\u5806\u7a7a\u95f4\uff0c\u800c\u5c40\u90e8\u58f0\u660e\u4e00\u4e2a\u5bf9\u8c61\u662f\u653e\u5728\u6808\u4e2d\u3002</li> <li><code>new</code>\u51fa\u6765\u7684\u5bf9\u8c61\u7c7b\u4f3c\u4e8e\u7533\u8bf7\u7a7a\u95f4\uff0c\u56e0\u6b64\u9700\u8981delete\u9500\u6bc1\uff0c\u800c\u76f4\u63a5\u58f0\u660e\u7684\u5bf9\u8c61\u5219\u5728\u4f7f\u7528\u5b8c\u76f4\u63a5\u9500\u6bc1\u3002</li> <li><code>new</code>\u51fa\u6765\u7684\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u662f\u5177\u6709\u5168\u5c40\u6027\uff0c\u8b6c\u5982\u5728\u4e00\u4e2a\u51fd\u6570\u5757\u91ccnew\u4e00\u4e2a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u5c06\u8be5\u5bf9\u8c61\u7684\u6307\u9488\u8fd4\u56de\u56de\u53bb\uff0c\u8be5\u5bf9\u8c61\u4f9d\u65e7\u5b58\u5728\u3002\u800c\u58f0\u660e\u7684\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u53ea\u5b58\u5728\u4e8e\u58f0\u660e\u4e86\u8be5\u5bf9\u8c61\u7684\u51fd\u6570\u5757\u4e2d\uff0c\u5982\u679c\u8fd4\u56de\u8be5\u58f0\u660e\u7684\u5bf9\u8c61\uff0c\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5df2\u7ecf\u88ab\u9500\u6bc1\u7684\u5bf9\u8c61\u3002</li> <li><code>new</code>\u5bf9\u8c61\u6307\u9488\u7528\u9014\u5e7f\u6cdb\uff0c\u6bd4\u5982\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u3001\u51fd\u6570\u53c2\u6570\u7b49</li> </ul> </li> </ul>"},{"location":"OOP/oop1/#this-pointerthis","title":"This Pointer(this \u6307\u9488)","text":"<p><code>this</code>\u6307\u9488\u6307\u5411\u7528\u6765\u8c03\u7528\u6210\u5458\u51fd\u6570\u7684\u5bf9\u8c61(this\u88ab\u4f5c\u4e3a\u9690\u85cf\u53c2\u6570\u4f20\u9012\u7ed9\u65b9\u6cd5) \u5982\u679c\u8981\u9632\u6b62<code>this</code>\u88ab\u8c03\u7528\u4fee\u6539\u6240\u6307\u5411\u7684\u5bf9\u8c61\u7684\u503c\uff0c\u5219\u53ef\u4ee5\u5728\u51fd\u6570\u58f0\u660e\u540e\u9762\u52a0\u4e0a<code>const</code></p> Info <p>\u6700\u521d\u7684UNIX\u5b9e\u73b0\u4f7f\u7528C++\u524d\u7aefcfront\u5c06C++\u7a0b\u5e8f\u8f6c\u5316\u4e3aC\u7a0b\u5e8f\u3002\u4f1a\u5c06\u9650\u5b9a\u7b26<code>ClassName::</code>\u8f6c\u6362\u4e3a\u51fd\u6570\u53c2\u6570(\u6307\u5411\u5bf9\u8c61\u7684\u6307\u9488)</p>"},{"location":"OOP/oop1/#_4","title":"\u5bf9\u8c61\u6570\u7ec4","text":"<ul> <li>\u5728\u6ca1\u6709\u663e\u5f0f\u6784\u9020\u51fd\u6570\u7684\u60c5\u51b5\u4e0b(\u6216\u663e\u5f0f\u6784\u9020\u51fd\u6570\u6709\u9ed8\u8ba4\u503c)\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u76f4\u63a5\u5982\u4e0b\u5b9a\u4e49<ul> <li><code>Stock mystuff[4];</code>\u6216\u8005\u53ef\u4ee5\u5bc4\u5e0c\u671b\u4e8e\u81ea\u52a8\u8865\u8db3\u672a\u521d\u59cb\u5316\u7684\u5bf9\u8c61</li> </ul> </li> <li>\u5426\u5219\u8981\u4e3a\u6bcf\u4e2a\u5143\u7d20\u8c03\u7528\u6784\u9020\u51fd\u6570</li> </ul> <pre><code>const int num = 4;\nStock stocks[num] = {\n    Stock(\"A\", 2, 2.0),\n    Stock(\"B\", 3, 3.0),\n    Stock(\"C\", 4, 4.0),\n    Stock(\"D\", 5, 5.0)\n};\n</code></pre>"},{"location":"OOP/oop1/#_5","title":"\u7c7b\u4f5c\u7528\u57df","text":""},{"location":"OOP/oop1/#_6","title":"\u4f5c\u7528\u57df\u4e3a\u7c7b\u7684\u5e38\u91cf","text":"<p>\u5982\u679c\u5e0c\u671b\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u4e00\u4e2a\u5e38\u91cf\uff0c\u8fd9\u6837\u505a\u662f\u9519\u8bef\u7684\u4f8b\u5b50\uff1a</p> <pre><code>class Bakery:\n{\nprivate:\n    const int months = 12; \n    double costs[months];   \n}\n</code></pre> <p>Warning</p> <p>\u58f0\u660e\u7c7b\u53ea\u662f\u63cf\u8ff0\u4e86\u5bf9\u8c61\u7684\u5f62\u5f0f\uff0c\u5e76\u6ca1\u6709\u521b\u5efa\u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u5728\u521b\u5efa\u5bf9\u8c61\u524d\uff0c\u5c06\u6ca1\u6709\u7528\u4e8e\u5b58\u50a8\u503c\u7684\u7a7a\u95f4\u3002</p>"},{"location":"OOP/oop1/#1","title":"1.\u58f0\u660e\u4e00\u4e2a\u679a\u4e3e","text":"<p>\u5728\u7c7b\u58f0\u660e\u4e2d\u58f0\u660e\u7684\u679a\u4e3e\u7684\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7c7b\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u679a\u4e3e\u4e3a\u6574\u578b\u53d8\u91cf\u63d0\u4f9b\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7c7b\u7684\u7b26\u53f7\u540d\u79f0\u3002</p> <p>Example</p> <p>\u540c\u4e3a\u8fd9\u4e2a<code>Bakrey</code>\u7c7b <pre><code>class Bakery:\n{\nprivate:\n    enum {enum = 12};\n    double costs[Months];\n}\n</code></pre></p> <p>\u6240\u6709\u5bf9\u8c61\u4e2d\u90fd\u4e0d\u5305\u542b\u679a\u4e3e(\u679a\u4e3e\u4e0d\u4f1a\u521b\u5efa\u7c7b\u6570\u636e\u6210\u5458)\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u57df\u7684\u4ee3\u7801\u9047\u5230\u5b83\u65f6\uff0c\u4f1a\u8fdb\u884c\u66ff\u6362\u3002</p>"},{"location":"OOP/oop1/#2static","title":"2.\u4f7f\u7528\u5173\u952e\u5b57<code>static</code>","text":"<p>Example</p> <p>\u5728<code>const</code>\u52a0\u4e0a<code>static</code> <pre><code>class Bakery:\n{\nprivate:\n    static const int months = 12; \n    double costs[months];   \n}\n</code></pre></p> <p>\u8fd9\u4e2a<code>static</code>\u7c7b\u578b\u7684\u53d8\u91cf\u4f1a\u88ab\u4e0e\u5176\u4ed6\u9759\u6001\u53d8\u91cf\u4e00\u8d77\u5b58\u50a8\uff0c\u800c\u4e0d\u662f\u5b58\u50a8\u5728\u5bf9\u8c61\u4e2d\u3002</p>"},{"location":"OOP/oop1/#_7","title":"\u4f5c\u7528\u57df\u5185\u679a\u4e3e","text":"<p>\u4f20\u7edf\u7684\u679a\u4e3e\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff0c\u5176\u4e2d\u4e4b\u4e00\u662f\u4e24\u4e2a\u679a\u4e3e\u5b9a\u4e49\u4e2d\u7684\u679a\u4e3e\u91cf\u53ef\u80fd\u53d1\u751f\u51b2\u7a81\u3002</p> <p>Example</p> <p>\u5982\u4e0b\uff0c<code>egg Small</code>\u548c<code>t_shirt Small</code>\u4f4d\u4e8e\u76f8\u540c\u7684\u4f5c\u7528\u57df\u4e2d\uff0c\u4ed6\u4eec\u5c06\u53d1\u751f\u51b2\u7a81\u3002 <pre><code>    enum egg {Small, Medium, Large, Jumbo};\n    enum t_shirt {Small, Medium, Large, Jumbo};\n</code></pre></p> <ul> <li><code>C++</code>\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b0\u679a\u4e3e\uff0c\u4f5c\u7528\u57df\u4e3a\u7c7b\u3002</li> </ul> <pre><code>enum class egg {Small, Medium, Large, Jumbo};\n</code></pre> <ul> <li><code>class</code>\u4e5f\u53ef\u4ee5\u66ff\u6362\u4e3a<code>struct</code></li> </ul> <p>\u4f46\u662f\u4f5c\u7528\u57df\u5185\u679a\u4e3e\u4e0d\u80fd\u8fdb\u884c\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u53ea\u80fd\u8fdb\u884c\u663e\u5f0f\u7c7b\u578b\u8f6c\u6362\u3002</p>"},{"location":"OOP/oop2/","title":"Chapter 2 Using Class","text":"<p>Abstract</p> <ul> <li>Overload(\u91cd\u8f7d)</li> <li>Friends(\u53cb\u5143)</li> <li>\u81ea\u52a8\u8f6c\u6362\u548c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362</li> </ul>"},{"location":"OOP/oop2/#overload","title":"Overload(\u91cd\u8f7d)","text":"<p>Overload(\u51fd\u6570\u91cd\u8f7d)</p> <p>\u9ed8\u8ba4\u53c2\u6570\u8ba9\u60a8\u80fd\u591f\u4f7f\u7528\u4e0d\u540c\u6570\u76ee\u7684\u53c2\u6570\u8c03\u7528\u540c\u4e00\u4e2a\u51fd\u6570\uff0c\u800c\u51fd\u6570\u591a\u6001(\u51fd\u6570\u91cd\u8f7d)\u8ba9\u60a8\u80fd\u591f\u4f7f\u7528\u591a\u4e2a\u540c\u540d\u7684\u51fd\u6570\u3002\u51fd\u6570\u91cd\u8f7d\u7684\u5173\u952e\u662f\u51fd\u6570\u7279\u5f81\u6807(function signature):\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u3002</p>"},{"location":"OOP/oop2/#_1","title":"\u8fd0\u7b97\u7b26\u91cd\u8f7d\u9650\u5236","text":"<p>1.\u91cd\u8f7d\u540e\u7684\u8fd0\u7b97\u7b26\u5fc5\u987b\u6709\u4e00\u4e2a\u64cd\u4f5c\u6570\u662f\u7528\u6237\u5b9a\u4e49\u7684\u7c7b\u578b\u3002(\u9632\u6b62\u7528\u6237\u4e3a\u6807\u51c6\u7c7b\u578b\u91cd\u8f7d\u8fd0\u7b97\u7b26) 2.\u4e0d\u80fd\u8fdd\u53cd\u539f\u6765\u7684\u53e5\u6cd5\u89c4\u5219\u3002 3.\u4e0d\u80fd\u521b\u5efa\u65b0\u7684\u8fd0\u7b97\u7b26 4.\u4e0d\u80fd\u91cd\u8f7d\u5982\u4e0b\u7684\u8fd0\u7b97\u7b26</p> operator function sizeof sizeof\u8fd0\u7b97\u7b26 . \u6210\u5458\u8fd0\u7b97\u7b26 .* \u6210\u5458\u6307\u9488\u8fd0\u7b97\u7b26 :: \u4f5c\u7528\u57df\u89e3\u6790\u8fd0\u7b97\u7b26 ?: \u6761\u4ef6\u8fd0\u7b97\u7b26 typeid \u4e00\u4e2aRTTI\u8fd0\u7b97\u7b26 const_cast \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26 dynamic_cast \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26 reinterpret_cast \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26 static_cast \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26 <p>5.\u5927\u90e8\u5206\u8fd0\u7b97\u7b26\u90fd\u53ef\u4ee5\u901a\u8fc7\u6210\u5458\u6216\u975e\u6210\u5458\u51fd\u6570\u6765\u8fdb\u884c\u91cd\u8f7d\uff0c\u4f46\u4e0b\u9762\u7684\u8fd0\u7b97\u7b26\u53ea\u80fd\u901a\u8fc7\u6210\u5458\u51fd\u6570\u8fdb\u884c\u91cd\u8f7d\u3002</p> <ul> <li><code>=</code> : \u8d4b\u503c\u8fd0\u7b97\u7b26</li> <li><code>()</code> : \u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26</li> <li><code>[]</code> : \u4e0b\u6807\u8fd0\u7b97\u7b26</li> <li><code>-&gt;</code> : \u901a\u8fc7\u6307\u9488\u8bbf\u95ee\u7c7b\u6210\u5458\u7684\u8fd0\u7b97\u7b26</li> </ul>"},{"location":"Paper/","title":"Index","text":"<p>Abstract</p> <p>\u8fd9\u91cc\u8bb0\u5f55\u4e86\u5173\u4e8e\u591a\u6a21\u6001\u4ee5\u53ca\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u8bba\u6587\u9605\u8bfb\u7b14\u8bb0</p> <p> \u5f31\u5c0f\u4e0e\u65e0\u77e5\u4e0d\u662f\u751f\u5b58\u7684\u969c\u788d\uff0c\u50b2\u6162\u624d\u662f\u3002 </p>"},{"location":"Paper/DDPM/","title":"Denoising Diffusion Probabilistic Models","text":""},{"location":"Paper/DDPM/#reference","title":"Reference","text":"<p>Lil's blog</p> <p>\u7531\u6d45\u5165\u6df1\u4e86\u89e3Diffusion Model </p> <p>\u53bb\u566a\u6269\u6563\u6982\u7387\u6a21\u578b\uff08Denoising Diffusion Probabilistic Models\uff09</p>"},{"location":"Paper/DDPM/#definition","title":"Definition","text":"<p>Diffusion Model\u6709\u4e24\u4e2a\u8fc7\u7a0b\uff1a\u524d\u5411\u8fc7\u7a0b\uff08forward process\uff09\u548c\u53cd\u5411\u8fc7\u7a0b\uff08reverse process\uff09\uff0c\u5176\u4e2d\u524d\u5411\u8fc7\u7a0b\u53c8\u79f0\u4e3a\u6269\u6563\u8fc7\u7a0b\uff08diffusion process\uff09\u3002\u65e0\u8bba\u662f\u524d\u5411\u8fc7\u7a0b\u8fd8\u662f\u53cd\u5411\u8fc7\u7a0b\u90fd\u662f\u4e00\u4e2a\u53c2\u6570\u5316\u7684\u9a6c\u5c14\u53ef\u592b\u94fe\uff08<code>Markov chain</code>\uff09\uff0c\u5176\u4e2d\u53cd\u5411\u8fc7\u7a0b\u53ef\u7528\u4e8e\u751f\u6210\u6570\u636e\u6837\u672c\uff08\u5b83\u7684\u4f5c\u7528\u7c7b\u4f3cGAN\u4e2d\u7684\u751f\u6210\u5668\uff0c\u53ea\u4e0d\u8fc7GAN\u751f\u6210\u5668\u4f1a\u6709\u7ef4\u5ea6\u53d8\u5316\uff0c\u800c<code>DDPM</code>\u7684\u53cd\u5411\u8fc7\u7a0b\u6ca1\u6709\u7ef4\u5ea6\u53d8\u5316\uff09\u3002</p> <p></p> <p>- \\(X_0\\) \u5230\\(X_t\\)\u4e3a\u9010\u6b65\u52a0\u566a\u8fc7\u7684\u524d\u5411\u7a0b\uff0c\u566a\u58f0\u662f\u5df2\u77e5\u7684\uff0c\u8be5\u8fc7\u7a0b\u4ece\u539f\u59cb\u56fe\u7247\u9010\u6b65\u52a0\u566a\u81f3\u4e00\u7ec4\u7eaf\u566a\u58f0\u3002</p> <p>- \\(X_t\\)\u5230\\(X_0\\)\u200b\u4e3a\u5c06\u4e00\u7ec4\u968f\u673a\u566a\u58f0\u8fd8\u539f\u4e3a\u8f93\u5165\u7684\u8fc7\u7a0b\u3002\u8be5\u8fc7\u7a0b\u9700\u8981\u5b66\u4e60\u4e00\u4e2a\u53bb\u566a\u8fc7\u7a0b\uff0c\u76f4\u5230\u8fd8\u539f\u4e00\u5f20\u56fe\u7247\u3002</p>"},{"location":"Paper/DDPM/#forward-process","title":"Forward Process","text":"<p>\u524d\u5411\u8fc7\u7a0b\u662f\u52a0\u566a\u7684\u8fc7\u7a0b\uff0c\u524d\u5411\u8fc7\u7a0b\u4e2d\u56fe\u50cf\\(\\mathbf{x}_t\\)\u53ea\u548c\u4e0a\u4e00\u65f6\u523b\u7684\\(\\mathbf{x}_{t-1}\\)\u6709\u5173, \u8be5\u8fc7\u7a0b\u53ef\u4ee5\u89c6\u4e3a\u9a6c\u5c14\u79d1\u592b\u8fc7\u7a0b, \u6ee1\u8db3:</p> \\[ q(\\mathbf{x}_t \\vert \\mathbf{x}_{t-1}) = \\mathcal{N}(\\mathbf{x}_t; \\sqrt{1 - \\beta_t} \\mathbf{x}_{t-1}, \\beta_t\\mathbf{I}) \\quad q(\\mathbf{x}_{1:T} \\vert \\mathbf{x}_0) = \\prod^T_{t=1} q(\\mathbf{x}_t \\vert \\mathbf{x}_{t-1}) \\] <p>\u53ef\u4ee5\u63a8\u51fa\\(\\mathbf{x}_0\\)\u4e0e\\(\\mathbf{x}_{t}\\)\u7684\u5173\u7cfb\u5982\u4e0b</p> \\[ \\begin{aligned} \\mathbf{x}_t &amp;= \\sqrt{\\alpha_t}\\mathbf{x}_{t-1} + \\sqrt{1 - \\alpha_t}\\boldsymbol{\\epsilon}_{t-1} &amp; \\text{ ;where } \\boldsymbol{\\epsilon}_{t-1}, \\boldsymbol{\\epsilon}_{t-2}, \\dots \\sim \\mathcal{N}(\\mathbf{0}, \\mathbf{I}) \\\\ &amp;= \\sqrt{\\alpha_t \\alpha_{t-1}} \\mathbf{x}_{t-2} + \\sqrt{1 - \\alpha_t \\alpha_{t-1}} \\bar{\\boldsymbol{\\epsilon}}_{t-2} &amp; \\text{ ;where } \\bar{\\boldsymbol{\\epsilon}}_{t-2} \\text{ merges two Gaussians (*).} \\\\ &amp; = \\dots \\\\ &amp;= \\sqrt{\\bar{\\alpha}_t}\\mathbf{x}_0 + \\sqrt{1 - \\bar{\\alpha}_t}\\boldsymbol{\\epsilon} \\\\ q(\\mathbf{x}_t \\vert \\mathbf{x}_0) &amp;= \\mathcal{N}(\\mathbf{x}_t; \\sqrt{\\bar{\\alpha}_t} \\mathbf{x}_0, (1 - \\bar{\\alpha}_t)\\mathbf{I}) \\end{aligned} \\] \\[ \\alpha_t = 1 - \\beta_t  \\quad \\bar{\\alpha}_t = \\prod_{i=1}^t \\alpha_i \\] <p>\u6ce8\uff1a\\(\\beta_t\\)\u7531\u5bf9\u5e94\u65f6\u523b\\(t\\)\u200b\u51b3\u5b9a,</p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u968f\u7740\\(t\\)\u7684\u589e\u5927\uff0c \\(\\mathbf{x}_t\\)\u8d8a\u6765\u8d8a\u63a5\u8fd1\u7eaf\u566a\u58f0\u3002\u5f53\\(t\\)\u2192\u221e \uff0c \\(\\mathbf{x}_t\\)\u662f\u5b8c\u5168\u7684\u9ad8\u65af\u566a\u58f0</p>"},{"location":"Paper/DDPM/#reverse-process","title":"reverse process","text":"\\[ p_\\theta(\\mathbf{x}_{0:T}) = p(\\mathbf{x}_T) \\prod^T_{t=1} p_\\theta(\\mathbf{x}_{t-1} \\vert \\mathbf{x}_t) \\quad p_\\theta(\\mathbf{x}_{t-1} \\vert \\mathbf{x}_t) = \\mathcal{N}(\\mathbf{x}_{t-1}; \\boldsymbol{\\mu}_\\theta(\\mathbf{x}_t, t), \\boldsymbol{\\Sigma}_\\theta(\\mathbf{x}_t, t)) \\]"},{"location":"Paper/DDPM/#characteristic","title":"Characteristic","text":"<p>diffusion model\u548c\u5176\u4ed6\u6a21\u578b\u6700\u5927\u7684\u533a\u522b\u662f\u5b83\u7684latent code(z)\u548c\u539f\u56fe\u662f\u540c\u5c3a\u5bf8\u5927\u5c0f\u7684</p>"},{"location":"Paper/DDPM/#reparameterization-trick","title":"\u91cd\u53c2\u6570\uff08reparameterization trick\uff09","text":"\\[ \\mathbf{x}_t = \\mathbf{x}_{t-1} + \\frac{\\delta}{2} \\nabla_\\mathbf{x} \\log p(\\mathbf{x}_{t-1}) + \\sqrt{\\delta} \\boldsymbol{\\epsilon}_t ,\\quad\\text{where } \\boldsymbol{\\epsilon}_t \\sim \\mathcal{N}(\\mathbf{0}, \\mathbf{I}) \\]"},{"location":"Paper/DDPM/#tbd","title":"TBD","text":""},{"location":"Python/","title":"Python\u7a0b\u5e8f\u8bbe\u8ba1","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201cPython\u7a0b\u5e8f\u8bbe\u8ba1\u201d \u8bfe\u7a0b\u53ca\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <ul> <li>Prof:\u6c88\u777f</li> <li>TA\uff1a\u5468\u5065\u5747</li> </ul>"},{"location":"Python/Py1/","title":"Introduction","text":"<p>Abstract</p> <ul> <li>\u8bed\u8a00\u6982\u8ff0</li> <li>\u6570\u636e\u8868\u793a\u4e0e\u8bbe\u8ba1</li> <li>\u6d41\u7a0b\u63a7\u5236</li> <li>\u6587\u4ef6\u8bfb\u5199</li> <li>\u6a21\u5757\u4e0e\u5305</li> <li>\u5e38\u7528\u7b97\u6cd5</li> </ul>"},{"location":"Python/Py1/#_1","title":"\u7f16\u7801","text":""},{"location":"Python/Py1/#_2","title":"\u539f\u7801\uff0c\u53cd\u7801\uff0c\u8865\u7801","text":"<p>Example</p> <p>-78\u7684\u539f\u7801\uff0c\u53cd\u7801\uff0c\u8865\u7801\uff08\u7528\u516b\u4f4d\u8868\u793a\uff09</p> <ul> <li>\u539f\u7801\uff08Sign-Magnitude\uff09\uff1a</li> <li>\u539f\u7801\u5c31\u662f\u7b26\u53f7\u4f4d\u52a0\u4e0a\u771f\u503c\u7684\u7edd\u5bf9\u503c</li> </ul> <p>Example</p> <ul> <li>\u5c0678\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 01001110\u3002</li> <li>\u5c06\u7b26\u53f7\u4f4d\u6539\u4e3a1\uff0c\u5f97\u5230\u539f\u7801\uff1a11001110\u3002</li> </ul> <ul> <li>\u53cd\u7801\uff08One's Complement\uff09\uff1a</li> <li>\u6b63\u6570\u7684\u53cd\u7801\u5c31\u662f\u5176\u672c\u8eab</li> <li>\u8d1f\u6570\u7684\u53cd\u7801\u662f\u5728\u5176\u539f\u7801\u7684\u57fa\u7840\u4e0a\uff0c\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u5176\u4f59\u5404\u4f4d\u53d6\u53cd</li> </ul> <p>Example</p> <ul> <li>\u5bf9\u539f\u7801\u7684\u975e\u7b26\u53f7\u4f4d\u53d6\u53cd\uff0c\u5f97\u5230\u53cd\u7801\uff1a10110001\u3002</li> </ul> <ul> <li>\u8865\u7801\uff08Two's Complement\uff09\uff1a</li> <li>\u6b63\u6570\u7684\u8865\u7801\u5c31\u662f\u5176\u672c\u8eab</li> <li>\u8d1f\u6570\u7684\u8865\u7801\u662f\u5728\u5176\u539f\u7801\u7684\u57fa\u7840\u4e0a\uff0c\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u5176\u4f59\u5404\u4f4d\u53d6\u53cd\uff0c\u6700\u540e+1\u3002(\u4e5f\u5373\u5728\u53cd\u7801\u7684\u57fa\u7840\u4e0a+1)</li> </ul> <p>Example</p> <p>\u53cd\u7801\u52a01\uff0c\u5f97\u5230\u8865\u7801\uff1a10110010\u3002</p> <ul> <li>\u6b63\u6570\u4e0e\u65e0\u7b26\u53f7\u6570\u5904\u7406\u76f8\u540c</li> </ul>"},{"location":"Python/Py1/#_3","title":"\u6587\u5b57\u7f16\u7801","text":"<ul> <li>UTF-8\u662f\u9488\u5bf9Unicode\u7684\u4e00\u79cd\u53ef\u53d8\u957f\u5b57\u7b26\u7f16\u7801\u6a21\u5f0f\uff0c\u4f7f\u7528\u65f6\u628a\u6240\u6709Unicode\u8f6c\u6362UTF-8\uff0c\u6bcf\u4e2aASCii\u90fd\u6709\u5bf9\u5e94\u7684UTF-8,\u4e0e8\u4f4d\u7684\u4e00\u81f4</li> <li>Unicode\u56ca\u62ec\u4e86\u6240\u6709\u7684\u8bed\u8a00\u7684\u6240\u6709\u5b57\u7b26</li> </ul>"},{"location":"Python/Py2/","title":"Input and Output","text":"<p>Abstract</p> <ul> <li>\u8f93\u5165\u51fd\u6570</li> <li>\u8f93\u51fa\u51fd\u6570</li> <li>\u8f93\u51fa\u683c\u5f0f\u63a7\u5236</li> <li>\u6570\u636e\u7c7b\u578b</li> <li>\u6807\u8bc6\u7b26</li> <li>\u4fdd\u7559\u5b57</li> </ul>"},{"location":"Python/Py2/#input","title":"\u8f93\u5165\u51fd\u6570 input","text":"<ul> <li>input()\u51fd\u6570\u5b9e\u73b0\u4e86\u4ece\u63a7\u5236\u53f0\u8bfb\u5165\u8f93\u5165</li> </ul> <pre><code>a = input()\ntype(a)\n\n&lt;class 'str'&gt;\n</code></pre> <ul> <li>\u770b\u4f3c\u6574\u6570\u7c7b\u578b\uff0c\u4f46\u5b9e\u5219\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u82e5\u60f3\u83b7\u5f97\u6574\u6570\u7c7b\u578b\uff0c\u53ef\u7528<code>int()</code>\u51fd\u6570\u8fdb\u884c\u8f6c\u6362\uff1a<code>a=int(input())</code></li> <li>\u53ef\u4ee5\u8c03\u7528split()\u51fd\u6570\u5206\u5272\uff0c\u5728\u4e00\u884c\u4e2d\u83b7\u5f97\u591a\u4e2a\u503c</li> <li>\u53ef\u4ee5\u8c03\u7528map\u5c06\u4e00\u884c\u4e2d\u591a\u4e2a\u8f93\u5165\u8f6c\u5316\u4e3a\u5176\u4ed6\u7c7b\u578b</li> <li>m,n = map(int, input().split('/'))</li> </ul>"},{"location":"Python/Py2/#print","title":"\u8f93\u51fa\u51fd\u6570 print","text":"<ul> <li>\u5982\u4f55\u8bbe\u7f6e\u591a\u4e2a\u503c\u4e4b\u95f4\u7684\u5206\u9694 \uff1a <code>print(a, b, c, sep = ',')</code></li> <li>\u5982\u4f55\u8bbe\u7f6e\u7ed3\u675f\u7b26: <code>print(a, end = \"\")</code></li> </ul>"},{"location":"Python/Py2/#_1","title":"\u8f93\u51fa\u683c\u5f0f\u63a7\u5236","text":"<ul> <li>\u65b9\u6cd5\u4e00 \uff1a%</li> <li>\u65b9\u6cd5\u4e8c \uff1aformat</li> <li>\u65b9\u6cd5\u4e09 \uff1af-string</li> </ul> <pre><code># 1 %\nprint(\"my name is %s, my age is %d, my height is %.lf \" % (name, age, height))\n# 2 format\nprint(\"my name is {:s}, my age is {:d}, my height is {:.lf} \".format(name, age, height))\n# 3 f-string\nprint(f\"my name is {name}, my age is {age}, my height is {height:.lf} \".format(name, age, height))\n</code></pre>"},{"location":"Python/Py2/#_2","title":"\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7","text":"\u4f18\u5148\u7ea7 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u7ed3\u5408\u6027 1 x**y \u5e42 \u4ece\u53f3\u5411\u5de6 2 +x,-x \u6b63\uff0c\u8d1f 3 x*y, x/y,x//y, x%y \u4e58\uff0c\u9664\uff0c\u53d6\u6a21 \u4ece\u5de6\u5411\u53f3 4 x+y, x-y \u52a0\uff0c\u51cf \u4ece\u5de6\u5411\u53f3 5 x&lt;y, x&lt;=y, x==y, x!=y, x&gt;=y, x&gt;y \u6bd4\u8f83 \u4ece\u5de6\u5411\u53f3 6 not x \u903b\u8f91\u5426 \u4ece\u5de6\u5411\u53f3 7 x and y \u903b\u8f91\u4e0e \u4ece\u5de6\u5411\u53f3 8 x or y \u903b\u8f91\u6216 \u4ece\u5de6\u5411\u53f3"},{"location":"Python/Py2/#_3","title":"\u5185\u7f6e\u8f6c\u6362\u51fd\u6570","text":"\u51fd\u6570\u540d \u542b\u4e49 bool \u6839\u636e\u4f20\u5165\u7684\u53c2\u6570\u7684\u903b\u8f91\u503c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5e03\u5c14\u503c int \u6839\u636e\u4f20\u5165\u7684\u53c2\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6574\u6570 float \u6839\u636e\u4f20\u5165\u7684\u53c2\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6d6e\u70b9\u6570 complex \u6839\u636e\u4f20\u5165\u53c2\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u590d\u6570 str \u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32 ord \u8fd4\u56deUnicode\u5b57\u7b26\u5bf9\u5e94\u7684\u6574\u6570 chr \u8fd4\u56de\u6574\u6570\u6240\u5bf9\u5e94\u7684Unicode\u5b57\u7b26 bin \u5c06\u6574\u6570\u8f6c\u6362\u62102\u8fdb\u5236\u5b57\u7b26\u4e32 oct \u5c06\u6574\u6570\u8f6c\u5316\u62108\u8fdb\u5236\u6570\u5b57\u7b26\u4e32 hex \u5c06\u6574\u6570\u8f6c\u6362\u621016\u8fdb\u5236\u5b57\u7b26\u4e32 list \u6839\u636e\u4f20\u5165\u7684\u53c2\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5217\u8868"},{"location":"Python/problems/","title":"\u4f5c\u4e1a\u8bb0\u5f55","text":""},{"location":"Python/problems/#week-1","title":"Week 1","text":"<p>Question</p> <p>\u5b57\u6bcdA\u7684ASCII\u7f16\u7801\u503c\u548cUnicode\u7f16\u7801\u503c\u76f8\u540c\u3002 - Answer : T (\u7f16\u7801\u4e0d\u540c\uff0c\u4f46\u662f\u7f16\u7801\u503c\u76f8\u540c)</p> <p>Question</p> <p>\u9ad8\u7ea7\u8bed\u8a00\u7a0b\u5e8f\u8981\u88ab\u673a\u5668\u6267\u884c,\u53ea\u6709\u7528\u89e3\u91ca\u5668\u6765\u89e3\u91ca\u6267\u884c - Answer : F (\u8fd8\u6709\u7f16\u8bd1\u578b\u8bed\u8a00)</p> <p>Question</p> <p>Python\u662f\u811a\u672c\u8bed\u8a00 - Answer : T</p> <p>Question</p> <p>Python\u662f\u9759\u6001\u8bed\u8a00 - Answer : F</p>"},{"location":"Python/problems/#week-2","title":"Week 2","text":"<p>Question</p> <p>\u5f53\u8f93\u5165\u662f\uff1a45,8 \u65f6\uff0c\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f37\u3002 <pre><code>a,b = input().split(',')\nb=int(b)\nc=int('a',b)\nprint(c)\n</code></pre> - a\u52a0\u5f15\u53f7\u4f1a\u62a5\u9519\uff0c\u4e0d\u52a0\u5f15\u53f7\u4e3astr</p> <p>Question</p> <p>print(bin(12.5))\u7684\u8f93\u51fa\u662f0b1100.1 - bin()\u4e0d\u80fd\u5904\u7406float</p>"}]}