{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Thorin's Notebook!","text":"<p>About me</p> <p> There were sixpence all over the ground, but he looked up and saw the moon. </p> <p>Quote</p> <p>\u6fc0\u52b1\u7740\u6211\u4e00\u76f4\u66f4\u65b0note\u7684\u8fd8\u6709HobbitQia\u8001\u5e08\u7684\u4eba\u683c\u5149\u8f89!!!</p>"},{"location":"changelog/","title":"\u66f4\u65b0\u8bb0\u5f55","text":"<p>Abstract</p> <p>\u7279\u522b\u9e23\u8c22\uff1a@TonyCrane \u672c\u9875\u9762\u6837\u5f0f\u6765\u81ea TonyCrane \u8001\u5e08\u7684\u63d2\u4ef6\uff0c\u53ef\u89c1  TonyCrane/mkdocs-changelog-plugin</p>"},{"location":"changelog/#2024","title":"2024","text":"2024-1-20\u00b6 <p> Computer Science &gt; \u8ba1\u7b97\u7406\u8bba</p> 2024-1-7\u00b6 <p> Computer Science &gt; \u5e94\u7528\u8fd0\u7b79\u5b66\u57fa\u7840</p>"},{"location":"changelog/#2023","title":"2023","text":"2023-12-16\u00b6 <p> System &gt; \u64cd\u4f5c\u7cfb\u7edf\u539f\u7406\u4e0e\u5b9e\u8df5 &gt; \u5927\u5bb9\u91cf\u5b58\u50a8\u3001I/O \u7cfb\u7edf</p> <p> System &gt; \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784 &gt; \u6307\u4ee4\u7ea7\u5e76\u884c</p> <p> System &gt; \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784 &gt; DLP \u548c TLP</p> 2023-12-7\u00b6 <p> System &gt; \u64cd\u4f5c\u7cfb\u7edf\u539f\u7406\u4e0e\u5b9e\u8df5 &gt; \u865a\u62df\u5185\u5b58</p> <p> Computer Science &gt; \u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790</p> <p> \u66f4\u65b0\u4e86 Miscellaneous \u90e8\u5206\u9875\u9762\u7ed3\u6784\uff01</p> <p> Miscellaneous &gt; \u6d6e\u70b9\u6570\u4e0e\u5b9a\u70b9\u6570</p> 2023-11-16\u00b6 <p> System &gt; \u64cd\u4f5c\u7cfb\u7edf\u539f\u7406\u4e0e\u5b9e\u8df5 &gt; \u4e3b\u5b58</p> <p> System &gt; \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784 &gt; \u6307\u4ee4\u7ea7\u5e76\u884c</p> 2023-11-10\u00b6 <p> System &gt; \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784 &gt; \u6307\u4ee4\u7ea7\u5e76\u884c</p> 2023-11-9\u00b6 <p> System &gt; \u64cd\u4f5c\u7cfb\u7edf\u539f\u7406\u4e0e\u5b9e\u8df5 &gt; \u6b7b\u9501</p> 2023-11-7\u00b6 <p> System &gt; \u64cd\u4f5c\u7cfb\u7edf\u539f\u7406\u4e0e\u5b9e\u8df5 &gt; \u540c\u6b65</p> 2023-11-4\u00b6 <p> System &gt; \u64cd\u4f5c\u7cfb\u7edf\u539f\u7406\u4e0e\u5b9e\u8df5 &gt; \u7ebf\u7a0b\u3001\u8c03\u5ea6</p> <p> System &gt; \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784 &gt; \u5185\u5b58\u5c42\u6b21</p> 2023-10-31\u00b6 <p> \u7b14\u8bb0\u672c\u6837\u5f0f\u5927\u66f4\u65b0\uff01</p>"},{"location":"link/","title":"\u53cb\u94fe","text":"<p>Abstract</p> <p>\u4e00\u4e9b\u670b\u53cb\u4eec\u7684\u7b14\u8bb0\u672c\uff01 \u53cb\u94fe\u6837\u5f0f\u6765\u81ea @TonyCrane</p> xg\u7684\u7b14\u8bb0\u672c \u4e0a\u5e1d\u8bf4\u8981\u6709\u795e\uff0c\u4e8e\u662f\u4fbf\u6709\u4e86TonyCrane HobbitQia\u7684\u7b14\u8bb0\u672c \u5927Q\u8001\u5e08 \u534e\u96f6's note ykgg tql yhwu_is's Notes wyy\u662f\u6570\u5b66\u7684\u795e star0228 's Notes \u900d\u9065\uff01\u4fe1\u4ef0\uff01"},{"location":"ADS/","title":"\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790\u201d \u8bfe\u7a0b\u53ca\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <ul> <li>Prof:\u6768\u6d0b</li> <li>TA\uff1a\u9093\u7693\u7136/\u8881\u77e5\u5f70/\u51af\u9a81</li> </ul> <p>\u58f0\u660e</p> <p>\u672c\u7b14\u8bb0\u7684\u6574\u7406\u53c2\u8003\u4e86\u5218\u91d1\u98de\u73ed\u7684\u52a9\u6559\u5434\u4e00\u822a\u7684\u76f8\u5173\u68b3\u7406(\u5f3a\u70c8\u63a8\u8350\uff0c\u5b69\u5b50\u7ec8\u4e8e\u80fd\u5b66\u61c2ADS\u4e86) </p> <p>Success</p> <ul> <li> Chapter 1 : AVL Trees, Splay Trees, and Amortized Analysis</li> <li> Chapter 2 : Red-Black Trees and B+ Trees</li> <li> Chapter 3 : Inverted File Index</li> <li> Chapter 4 : Leftist Heap and Skew Heap</li> </ul>"},{"location":"ADS/ADS1/","title":"chapter 1 AVL Tree\u3001Splay Tree and Amortized Analysis","text":""},{"location":"ADS/ADS1/#avl-treespeed-up-searching","title":"AVL Tree(speed up searching)","text":"<p>Info</p> <p>An empty binary tree is height balanced.  If \\(T\\) is a nonempty binary tree with \\(T_L\\) and \\(T_R\\) as its left and right subtrees, then \\(T\\) is height balanced iff     (1)  \\(T_L\\) and \\(T_R\\) are height balanced, and     (2)  \\(| h_L - h_R | \\leq 1\\) where  \\(h_L\\) and \\(h_R\\) are the heights of \\(T_L\\) and \\(T_R\\) , respectively.</p> <p>\u8fd9\u91cc\u5b9a\u4e49Balance Factor(BF) = \\(h_L - h_R\\)\u6765\u5224\u65ad\u6811\u7684\u5e73\u8861\u6027\uff0c\u5728\u4e00\u4e2aAVL Tree\u4e2d\uff0c\\(BF = -1, 0, 1\\)</p> <p>Warning</p> <ul> <li>\u5bf9\u4e8e\u7a7a\u8282\u70b9\uff0c\u5176BF\u9ed8\u8ba4\u4e3a-1</li> <li>\u5bf9\u4e8e\u5355\u8282\u70b9\uff0c\u5176BF\u9ed8\u8ba4\u4e3a0</li> </ul>"},{"location":"ADS/ADS1/#tree-rotation","title":"Tree Rotation","text":"<p>Warning</p> <p>\u901a\u8fc7Rotation\u5904\u7406\u975e\u5e73\u8861\u7684\u60c5\u51b5\u4f9d\u7167\u4ece\u53f6\u5b50\u8282\u70b9\u5411\u4e0a\uff0c\u5148\u89e3\u51b3\u6700\u4f4e\u7684</p>"},{"location":"ADS/ADS1/#rightor-leftrotation","title":"Right(or Left)Rotation","text":"<ul> <li>Tree rotation is an operation on a binary tree that changes the structure without interfering with the order of the elements.</li> </ul> <ul> <li> <p>After a rotation, the side of the rotation increases its height by 1 whilst the side opposite the rotation decreases its height similarly.</p> </li> <li> <p>Time complexity: \\(O(1)\\)</p> </li> </ul> <p>Example</p> <p>The trouble maker Nov is in the right subtree\u2019s right subtree of the trouble finder Mar.  Hence it is called an RR rotation. </p>"},{"location":"ADS/ADS1/#double-rotation","title":"Double Rotation","text":""},{"location":"ADS/ADS1/#minimum-number-of-nodes","title":"Minimum Number of Nodes","text":"<p>Let \\(n_h\\) be the minimum number of nodes in a height balanced tree of height \\(h\\). Then the tree must look like</p> <p></p> <p>\\(F_0 = 0,  F_1 = 1,  F_i = F_{i-1} + F_{i-2}\\) \\(for\\) \\(i &gt; 1\\)</p> <p>\\(n_h = F_{h+3} - 1, for \\quad h \\leq -1\\)</p>"},{"location":"ADS/ADS1/#splay-tree","title":"Splay Tree","text":"<p>Abstract</p> <ul> <li>Target: Any \\(M\\) consecutive tree operations starting from an empty tree take at most \\(O(M log N)\\) time.</li> <li>Idea: After a node is accessed, it is pushed to the root by a series of AVL tree rotations</li> </ul> <p>\u4e3a\u4e86\u907f\u514d\u51fa\u73b0\u5197\u4f59\u7684\u5faa\u73af\u540e\u56de\u5230\u539f\u70b9\uff0c\u5bf9Splay Tree\u7684\u5904\u7406\u91c7\u7528zig-zig\u548czig-zag\u4e24\u79cd\u65b9\u5f0f\u3002</p> Tip <p>Splay \u6811\u7684\u60f3\u6cd5\u4e00\u65b9\u9762\u6765\u6e90\u4e8e\u5e0c\u671b\u53ef\u4ee5\u4e0d\u50cf AVL \u90a3\u6837\u4fdd\u6301\u4e25\u683c\u7684\u5e73\u8861\u7ea6\u675f\uff0c\u4f46\u4e5f\u80fd\u4fdd\u8bc1\u67d0\u79cd\u5c42\u9762\uff08\u5747\u644a\uff09\u7684\u5bf9\u6570\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u53e6\u4e00\u65b9\u9762 Splay \u6811\u5728\u8bbf\u95ee\uff08\u7279\u522b\u6ce8\u610f\u8bbf\u95ee\u5305\u62ec\u641c\u7d22\u3001\u63d2\u5165\u548c\u5220\u9664\uff09\u65f6\u90fd\u9700\u8981\u5c06\u5143\u7d20\u79fb\u52a8\u5230\u6839\u7ed3\u70b9\uff0c\u8fd9\u975e\u5e38\u7b26\u5408\u7a0b\u5e8f\u5c40\u90e8\u6027\u7684\u8981\u6c42\uff0c\u5373\u521a\u521a\u8bbf\u95ee\u7684\u6570\u636e\u5f88\u6709\u53ef\u80fd\u518d\u6b21\u88ab\u8bbf\u95ee\uff0c\u56e0\u6b64\u5728\u5b9e\u73b0\u7f13\u5b58\u548c\u5783\u573e\u6536\u96c6\u7b97\u6cd5\u4e2d\u6709\u4e00\u5b9a\u7684\u5e94\u7528\u3002</p> <ul> <li>\u641c\u7d22\uff1a\u4f7f\u7528\u666e\u901a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u65b9\u6cd5\u627e\u5230\u7ed3\u70b9\uff0c\u7136\u540e\u901a\u8fc7 splay \u64cd\u4f5c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u65cb\u8f6c\u5c06\u641c\u7d22\u7684\u7ed3\u70b9\u79fb\u52a8\u5230\u6839\u7ed3\u70b9\u7684\u4f4d\u7f6e</li> <li>\u63d2\u5165\uff1a\u4f7f\u7528\u666e\u901a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u65b9\u6cd5\u627e\u5230\u8981\u63d2\u5165\u7684\u4f4d\u7f6e\u8fdb\u884c\u63d2\u5165\uff0c\u7136\u540e\u628a\u521a\u521a\u63d2\u5165\u7684\u7ed3\u70b9\u901a\u8fc7splay\u64cd\u4f5c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u65cb\u8f6c\u79fb\u52a8\u5230\u6839\u7ed3\u70b9\u7684\u4f4d\u7f6e</li> <li>\u5220\u9664\uff1a\u4f7f\u7528\u666e\u901a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u65b9\u6cd5\u627e\u5230\u8981\u5220\u9664\u7684\u7ed3\u70b9\uff0c\u7136\u540e\u901a\u8fc7 splay \u64cd\u4f5c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u65cb\u8f6c\u5c06\u8981\u5220\u9664\u7684\u7ed3\u70b9\u79fb\u52a8\u5230\u6839\u7ed3\u70b9\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5220\u9664\u6839\u7ed3\u70b9\uff08\u73b0\u5728\u6839\u7ed3\u70b9\u5c31\u662f\u8981\u5220\u9664\u7684\u70b9\uff09\uff0c\u7136\u540e\u548c\u666e\u901a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u5220\u9664\u4e00\u6837\u8fdb\u884c\u5408\u7406\u7684merge\u5373\u53ef\u3002</li> </ul> <p>Zig-zig</p> <p>zig-zig\u867d\u7136\u5199\u4f5csingle rotation\uff0c\u4f46\u662f\u5176\u5b9e\u9645\u4e0a\u65cb\u8f6c\u4e86\u4e24\u6b21\uff0c\u5148\u662fG\u4e0eP\u4ea4\u6362\u4f4d\u7f6e(G\u53d8\u4e3aP\u7684\u53f3\u5b50\u6811)\uff0c\u518d\u4ea4\u6362P\u4e0eX\u7684\u5173\u7cfb(P\u53d8\u4e3aX\u7684\u53f3\u5b50\u6811) </p>"},{"location":"ADS/ADS1/#amortized-analysis","title":"Amortized Analysis(\u644a\u8fd8\u5206\u6790)","text":"Abstract <p>\u644a\u8fd8\u5206\u6790\u7684\u60f3\u6cd5\u6765\u6e90\u4e8e\u6211\u4eec\u5e0c\u671b\u4f30\u8ba1\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u7ecf\u8fc7\u4e00\u7cfb\u5217\u64cd\u4f5c\u7684\u5e73\u5747\u82b1\u8d39\u65f6\u95f4\u3002\u7136\u800c\uff0c\u5e73\u5747\u65f6\u95f4\u975e\u5e38\u96be\u8ba1\u7b97\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6b65\u90fd\u6709\u975e\u5e38\u591a\u7684\u9009\u62e9\uff0c\u8fde\u7eedm\u4e2a\u64cd\u4f5c\uff0c\u53ef\u80fd\u7684\u64cd\u4f5c\u8def\u5f84\u662f\u6307\u6570\u7ea7\u522b\u7684\u3002\u5e76\u4e14\u6709\u65f6\u5019\u5e73\u5747\u6d89\u53ca\u6982\u7387\u5206\u5e03\u7b49\uff0c\u4f46\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u786e\u5207\u7684\u5206\u5e03\uff0c\u56e0\u6b64\u6bd4\u8f83\u96be\u4ee5\u8ba1\u7b97\u3002\u4e00\u79cd\u6700\u7b80\u5355\u7684\u4f30\u8ba1\u65b9\u6cd5\u5c31\u662f\u7528\u6700\u5dee\u60c5\u51b5\u5206\u6790\u4f5c\u4e3a\u5e73\u5747\u60c5\u51b5\u7684\u4e0a\u754c\uff0c\u4f8b\u5982Splay\u6811\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u6700\u5dee\u90fd\u662f\\(O(n)\\)\uff08\\(n\\)\u4e3a\u6811\u4e2d\u7ed3\u70b9\u4e2a\u6570\uff09\u7684\uff0c\u56e0\u6b64\u5e73\u5747\u4e0d\u4f1a\u6bd4\u6700\u5dee\u60c5\u51b5\u5dee\uff0c\u6240\u4ee5\u4e5f\u662f\\(O(n)\\)\u7684\u3002\u7136\u800c\u8fd9\u6837\u7684\u4f30\u8ba1\u663e\u7136\u662f\u653e\u5f97\u592a\u5bbd\u4e86\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e2a\u590d\u6742\u5ea6\u662f\u975e\u5e38\u4e0d\u6ee1\u610f\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u8fdb\u884c\u644a\u8fd8\u5206\u6790\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u6700\u5dee\u60c5\u51b5\u7684\u5206\u6790\u4e2d\uff0c\u6211\u4eec\u5ffd\u7565\u4e86\u4e00\u4ef6\u4e8b\u60c5\uff0c\u5c31\u662f\u6709\u7684\u5e8f\u5217\u662f\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\uff0c\u4f8b\u5982\u76f4\u63a5\u5728\u7a7a\u7684\u6811\u4e0a\u7528\\(O(n)\\)\u65f6\u95f4\u5220\u9664\uff0c\u644a\u8fd8\u5206\u6790\u5219\u662f\u5e0c\u671b\u6392\u9664\u6389\u6700\u5dee\u60c5\u51b5\u5206\u6790\u4e2d\u628a\u6240\u6709\u4e0d\u7ba1\u53ef\u80fd\u4e0d\u53ef\u80fd\u7684\u60c5\u51b5\uff0c\u6700\u5dee\u7684\u8def\u5f84\u6311\u51fa\u6765\u7684\u8fd9\u79cd\u65e0\u8111\u884c\u4e3a\uff0c\u8f6c\u800c\u5206\u6790\u6240\u6709\u53ef\u80fd\u7684\u4ece\u7a7a\u7ed3\u6784\u5f00\u59cb\u7684\u64cd\u4f5c\u8def\u5f84\u4e2d\uff0c\u6700\u5dee\u7684\u5e73\u5747\u65f6\u95f4\uff0c\u90a3\u4e48\u8fd9\u4e00\u65f6\u95f4\u4e00\u5b9a\u6bd4\u6700\u5dee\u60c5\u51b5\u5206\u6790\u597d\uff0c\u56e0\u4e3a\u6392\u9664\u6389\u4e86\u4e00\u4e9b\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u6240\u8c13\u6700\u5dee\u5e8f\u5217\uff0c\u4f46\u53c8\u4f1a\u5927\u4e8e\u7b49\u4e8e\u5e73\u5747\u65f6\u95f4\uff0c\u56e0\u4e3a\u53d6\u7684\u662f\u6240\u6709\u53ef\u80fd\u5e8f\u5217\u4e2d\u6700\u5dee\u7684\u90a3\u4e00\u79cd\u3002\u56e0\u6b64\u5f53\u6211\u4eec\u7b97\u51fa\u644a\u8fd8\u5206\u6790\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u90a3\u4e48\u5b83\u4e5f\u4e00\u5b9a\u662f\u5e73\u5747\u65f6\u95f4\u7684\u4e0a\u754c\uff0c\u540c\u65f6\u8fd9\u4e2a\u4e0a\u754c\u4f1a\u6bd4\u6700\u5dee\u60c5\u51b5\u5206\u6790\u597d\uff0c\u8fd9\u4e5f\u662f\u4e0d\u7b49\u5f0fworst-case bound  \\(\u2265\\) amortized bound \\(\u2265\\) average-case bound\u7684\u5185\u5728\u542b\u4e49\u3002</p> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u4ecb\u7ecd\u4e09\u79cd\u65b9\u6cd5\uff1a\u805a\u5408\u5206\u6790\u3001\u6838\u7b97\u6cd5\u4ee5\u53ca\u52bf\u80fd\u6cd5\u3002\u805a\u5408\u5206\u6790\u76f4\u63a5\u4f7f\u7528\u4e86\u6211\u4eec\u4e0a\u9762\u63d0\u5230\u7684\u601d\u60f3\uff1a\u201c\u644a\u8fd8\u5206\u6790\u662f\u8003\u8651\u53ef\u80fd\u51fa\u73b0\u7684\u64cd\u4f5c\u5e8f\u5217\u4e2d\u7684\u6700\u5dee\u5e8f\u5217\u201d\uff08\u518d\u6b21\u5f3a\u8c03\uff0c\u8fd9\u91cc\u7684\u6700\u5dee\u4e0d\u662f\u6700\u5dee\u60c5\u51b5\u5206\u6790\u7684\u6700\u5dee\uff0c\u6700\u5dee\u60c5\u51b5\u5206\u6790\u7684\u6700\u5dee\u4f1a\u5305\u62ec\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u5e8f\u5217\uff0c\u4f46\u644a\u8fd8\u5206\u6790\u8981\u6392\u9664\u4e0d\u53ef\u80fd\u7684\u5e8f\u5217\uff09</p>"},{"location":"ADS/ADS1/#aggregate-analysis","title":"Aggregate analysis(\u805a\u5408\u5206\u6790)","text":"Example <p>\u601d\u8003\u8fd9\u4e00\u652f\u6301 MultiPop \u64cd\u4f5c\u7684\u6808\uff0c\u5728\u4ece\u7a7a\u6808\u5f00\u59cb\u7684\u8fde\u7eed n \u6b21\u64cd\u4f5c\u4e2d\uff0c\u6700\u5dee\u7684\u60c5\u51b5\u662f\u4ec0\u4e48\uff1a\u5b9e\u9645\u4e0a\u5c31\u662f\u5148 Push n\u22121\u4e2a\u7136\u540e\u6700\u540e\u4e00\u6b21\u64cd\u4f5c\u4e00\u6b21\u6027 Multipop \u51fa\u6240\u6709\u5143\u7d20\u3002\u4e3a\u4ec0\u4e48\u8fd9\u6837\u662f\u6700\u5dee\u7684\u5462\uff1f\u4e8b\u5b9e\u4e0a\u7b80\u5355\u60f3\u60f3\u5c31\u80fd\u7406\u89e3\uff0c\u65e0\u6cd5\u7406\u89e3\u6216\u8005\u5e0c\u671b\u4e25\u8c28\u4e00\u4e9b\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u89e3\u91ca\uff1a\u56e0\u4e3a n \u6b21\u64cd\u4f5c\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u76ee\u6807\u662f\uff0c\u56fa\u5b9a n \u7684\u60c5\u51b5\u4f7f\u5f97\u4e0b\u603b\u7684\u4ee3\u4ef7\u6700\u5927\uff0c\u666e\u901a\u7684 Push \u548c Pop \u90fd\u662f 1 \u6b21\u64cd\u4f5c\u5bf9\u5e941 \u4e2a\u5355\u4f4d\u4ee3\u4ef7\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5bc4\u5e0c\u671b\u4e8e\u5e8f\u5217\u4e2d MultiPop \u4ee3\u4ef7\u6700\u5927\uff0c\u90a3\u4ee3\u4ef7\u6700\u5927\u7684\u60c5\u51b5\u5c31\u662f\u53ea MultiPop\u4e00\u6b21\uff0c\u4e14\u5c31\u5728\u6700\u540e\u4e00\u6b21\uff0c\u56e0\u4e3a\u5982\u679c\u53ea MultiPop \u4e00\u6b21\uff0c\u4e0d\u5728\u6700\u540e\u4e00\u6b21\uff0c\u663e\u7136\u8fd9\u6b21 MultiPop \u4ee3\u4ef7\u6bd4 n \u2212 1\u5c0f\uff1b\u5982\u679c MultiPop \u591a\u6b21\uff0c\u90a3\u4e48 Push \u64cd\u4f5c\u7684\u4e2a\u6570\u5c11\u4e86\uff0c\u6240\u4ee5 MultiPop \u80fd\u5f39\u51fa\u7684\u6bd4 n \u2212 1 \u5c11\uff0c\u6240\u4ee5\u4ee3\u4ef7\u4e5f\u5c11\u3002 </p>"},{"location":"ADS/ADS1/#accounting-method","title":"Accounting method(\u6838\u7b97\u6cd5)","text":"<p>\u6838\u7b97\u6cd5\u5c31\u662f\u4f20\u7edf\u610f\u4e49\u4e0a\u7684\u53d6\u957f\u8865\u77ed</p> \\[\\sum\\limits_{i=1}^{n}\\hat{c_i} \\geq \\sum\\limits_{i=1}^{n}{c_i}\\] <p>\\(\\hat{c_i}\\)\u662f\u9884\u6d4b\u7684\u671f\u671b(\u644a\u8fd8\u4ee3\u4ef7)\uff0c\\(c_i\\)\u662f\u5b9e\u9645\u7684\u5f00\u9500\uff0c\u4ed6\u4eec\u6ee1\u8db3\\(\\hat{c_i} = c_i + \\Delta_i\\)\uff0c\\(\\Delta_i\\)\u662f\u622a\u53d6\u7684\u957f\u6216\u8005\u662f\u8865\u8db3\u7684\u77ed\u3002(\u53ef\u6b63\u53ef\u8d1f)</p> <p>\u4e00\u4e2a\u60b2\u4f24\u7684\u4f8b\u5b50</p> <p>\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u8bf4\uff0c\u4f60\u5e0c\u671b\u4f60\u7684\u5e73\u5747\u7ee9\u70b9\u4fdd\u6301\u57284.0\u4ee5\u4e0a\uff0c\u4f60\u77e5\u9053ADS\u8fd9\u95e8\u8bfe\u4f60\u53ef\u80fd\u4f1a\u6302\u79d1\uff0c\u6240\u4ee5\u4f60\u4e4b\u524d\u7684\u5fae\u79ef\u5206\u3001\u7ebf\u6027\u4ee3\u6570\u3001FDS\u7b49\u5c31\u9700\u8981\u4e3a\u8fd9\u6b21\u6302\u79d1\u5b58\u4e0b\u8db3\u591f\u9ad8\u7684\u5747\u7ee9\u3002</p>"},{"location":"ADS/ADS1/#potential-method","title":"Potential method(\u52bf\u80fd\u6cd5)","text":"<p>\u52bf\u51fd\u6570</p> <p>\u6bd4\u5982\u601d\u8003 Splay \u6811\u8fd9\u79cd\u590d\u6742\u7684\u7ed3\u6784\uff0c\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u6709\u4e00\u4e2a\u66f4\u7edf\u4e00\u7684\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u4e0d\u518d\u628a\u76ee\u5149\u5c40\u9650\u4e8e\u6bcf\u4e2a\u64cd\u4f5c\uff0c\u800c\u662f\u7ed9\u6574\u4e2a\u7ed3\u6784\u5b9a\u4e49\u4e00\u4e2a\u52bf\u51fd\u6570\uff0c\u8fd9\u4e2a\u52bf\u51fd\u6570\u63cf\u8ff0\u4e86\u8fd9\u4e2a\u7ed3\u6784\u4e0d\u540c\u72b6\u6001\uff0c\u5176\u5b9e\u5c31\u662f\u501f\u7528\u4e86\u7269\u7406\u91cc\u9762\u7684\u52bf\u80fd\u7684\u601d\u60f3\uff0c\u6bd4\u5982\u91cd\u529b\u52bf\u80fd\u662f\u9ad8\u5ea6\u7684\u51fd\u6570\uff0c\u4f46\u6811\u7684\u52bf\u80fd\u53ef\u80fd\u662f\u6811\u9ad8\u7684\u51fd\u6570\uff0c\u4e5f\u53ef\u80fd\u662f\u6811\u7684\u7ed3\u70b9\u603b\u6570\u7684\u51fd\u6570\u751a\u81f3\u66f4\u590d\u6742\u7b49\u7b49\u3002</p> \\[ \\sum\\limits_{i=1}^{n}\\hat{c_i} = \\sum\\limits_{i=1}^{n}({c_i}+\\Phi(D_i)-\\Phi(D_{i-1})) = \\sum\\limits_{i=1}^{n}{c_i} + \\Phi(D_n) - \\Phi(D_0) \\] <p>Attention</p> <p>\u6ce8\u610f\u8fd9\u91cc\u7684\\(i\\)\u4e0d\u518d\u662f\u6838\u7b97\u6cd5\u4e2d\u8868\u793a\u7b2c\\(i\\)\u79cd\u64cd\u4f5c\uff0c\u800c\u662f\\(n\\)\u4e2a\u64cd\u4f5c\u7ec4\u6210\u7684\u5e8f\u5217\u4e2d\u7684\u7b2c\\(i\\)\u4e2a\uff01\u56e0\u6b64\u8fd9\u91cc\u7684\u542b\u4e49\u662f\uff0c\u6bcf\u4e00\u6b65\u7684\u644a\u8fd8\u4ee3\u4ef7\u7b49\u4e8e\u771f\u5b9e\u64cd\u4f5c\u7684\u4ee3\u4ef7\u52a0\u4e0a\u52bf\u51fd\u6570\u7684\u53d8\u5316</p> \u5982\u4f55\u8bbe\u8ba1\u52bf\u51fd\u6570 <p>\u4e3a\u4e86\u4f7f\u5f97\u644a\u8fd8\u6210\u672c\u662f\u5e73\u5747\u6210\u672c\u7684\u4e0a\u754c\uff0c\u6211\u4eec\u4ecd\u7136\u9700\u8981\u6ee1\u8db3\\(\\sum\\limits_{i=1}^{n}\\hat{c_i} \\geq \\sum\\limits_{i=1}^{n}{c_i}\\)\u56e0\u6b64\u53ea\u9700\u8981\u6ee1\u8db3\\(\\Phi(D_n) \\leq \\Phi(D_0)\\)\u5373\u53ef\uff0c\u8fd9\u4e00\u70b9\u5728\u8bbe\u8ba1\u51fd\u6570\u7684\u65f6\u5019\u5f88\u5bb9\u6613\u6ee1\u8db3\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u4f7f\u5f97 \\(\u03a6(D_0) = 0\\)\uff0c\u5373\u521d\u59cb\u72b6\u6001\u52bf\u80fd\u4e3a0\uff0c\u5176\u5b83\u4efb\u4f55\u72b6\u6001\u7684\u52bf\u80fd\u90fd\u4e0d\u4f1a\u5c0f\u4e8e0\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6bd4\u8003\u8651\u6838\u7b97\u6cd5\u4e2d\u5bf9\u4efb\u4f55\u53ef\u80fd\u7684\u5e8f\u5217\u90fd\u6210\u7acb\u66f4\u52a0\u7b80\u5355\u76f4\u63a5\uff0c\u56e0\u6b64\u66f4\u591a\u65f6\u5019\u6211\u4eec\u91c7\u7528\u52bf\u80fd\u6cd5\u8fdb\u884c\u5206\u6790\u3002</p>"},{"location":"ADS/ADS1/#splay","title":"Splay\u6811\u7684\u644a\u8fd8\u5206\u6790","text":"<p>Rank of SubTree</p> <p>\u8282\u70b9\u6570\u76ee\u7684\u5bf9\u6570\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u7528Height,Height\u4e0d\u80fd\u5f88\u597d\u7684\u53cd\u5e94\u6570\u91cf\uff0c\u4e14\u4e0d\u4f1a\u4e25\u683c\u589e\u52a0</p> <p></p> \\[ \\sum\\limits_{i=1}^{n}\\hat{c_i} \\leq 1 + 3(R_{k+1}(X)-R_{k}(X)) + \\sum\\limits_{i=1}^{k}3(R_i(X)-R_{i-1}(X)) = 1 + 3(R_{k+1}(X) - R_0(X)) = O(logN) \\]"},{"location":"ADS/ADS1/#_1","title":"\u7b97\u6cd5\u5bfc\u8bba\u4e0a\u7684\u4f8b\u5b50","text":""},{"location":"ADS/ADS1/#_2","title":"\u6808\u64cd\u4f5c","text":"<p>\u4f8b\u5b50\u63cf\u8ff0</p> <ul> <li>PUSH(S, x) : \u5c06\u5bf9\u8c61x\u538b\u5165\u6808S\u4e2d</li> <li>POP(S) : \u5c06\u6808S\u7684\u6808\u9876\u5bf9\u8c61\u5f39\u51fa\uff0c\u5e76\u8fd4\u56de\u8be5\u5bf9\u8c61\uff0c\u5bf9\u7a7a\u6808\u8c03\u7528POP\u4f1a\u4ea7\u751f\u4e00\u4e2a\u9519\u8bef</li> <li>MULTIPOP(S, k) : \u5c06\u6808S\u7684k\u4e2a\u6808\u9876\u5bf9\u8c61\u5f39\u51fa</li> </ul> \u805a\u5408\u5206\u6790 <p>\u901a\u8fc7\u4f7f\u7528\u805a\u5408\u5206\u6790\uff0c\u6211\u4eec\u8003\u8651\u6574\u4e2a\u5e8f\u5217\u7684\\(n\\)\u4e2a\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5f97\u5230\u66f4\u597d\u7684\u4e0a\u754c\u3002\u5b9e\u9645\u4e0a\uff0c\u867d\u7136\u4e00\u4e2a\u5355\u72ec\u7684 MULTIPOP\u64cd\u4f5c\u53ef\u80fd\u4ee3\u4ef7\u5f88\u9ad8\uff0c\u4f46\u5728\u4e00\u4e2a\u7a7a\u6808\u4e0a\u6267\u884c\\(n\\)\u4e2a PUSH\u3001 POP\u548cMULTIPOP\u7684\u64cd\u4f5c\u5e8f\u5217\uff0c\u4ee3\u4ef7\u81f3\u591a\u662f \\(O(n)\\)\u3002\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\u5f53\u5c06\u4e00\u4e2a\u5bf9\u8c61\u538b\u5165\u6808\u540e\uff0c\u6211\u4eec\u81f3\u591a\u5c06\u5176\u5f39\u51fa\u4e00\u6b21\u3002\u56e0\u6b64\uff0c\u5bf9\u4e00\u4e2a\u975e\u7a7a\u7684\u6808\uff0c\u53ef\u4ee5\u6267\u884c\u7684 POP\u64cd\u4f5c\u7684\u6b21\u6570\uff08\u5305\u62ec\u4e86MULTIPOP\u4e2d\u8c03\u7528POP\u7684\u6b21\u6570\uff09\u6700\u591a\u4e0ePUSH\u64cd\u4f5c\u7684\u6b21\u6570\u76f8\u5f53\uff0c\u5373\u6700\u591a\\(n\\)\u6b21\u3002\u56e0\u6b64\uff0c\u5bf9\u4efb\u610f\u7684 n\u503c\uff0c\u4efb\u610f\u4e00\u4e2a\u7531\\(n\\)\u4e2a PUSH\u3001 POP\u548c MULTIPOP\u7ec4\u6210\u7684\u64cd\u4f5c\u5e8f\u5217\uff0c\u6700\u591a\u82b1\u8d39 \\(O(n)\\)\u65f6\u95f4\u3002\u4e00\u4e2a\u64cd\u4f5c\u7684\u5e73\u5747\u65f6\u95f4\u4e3a\\(O(n)/n=O(l)\\)\u3002\u5728\u805a\u5408\u5206\u6790\u4e2d\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u64cd\u4f5c\u7684\u644a\u8fd8\u4ee3\u4ef7\u8bbe\u5b9a\u4e3a\u5e73\u5747\u4ee3\u4ef7\u3002\u56e0\u6b64\uff0c\u5728\u6b64\u4f8b\u4e2d\uff0c\u6240\u6709\u4e09\u79cd\u6808\u64cd\u4f5c\u7684\u644a\u8fd8\u4ee3\u4ef7\u90fd\u662f\\(O(1)\\)\u3002</p> \u6838\u7b97\u6cd5 <p>\u4e3a\u4e86\u8bf4\u660e\u644a\u8fd8\u5206\u6790\u7684\u6838\u7b97\u6cd5\uff0c\u6211\u4eec\u56de\u5230\u6808\u7684\u4f8b\u5b50\u3002\u56de\u987e\u524d\u9762\u7684\u5185\u5bb9\uff0c\u64cd\u4f5c\u7684\u5b9e\u9645\u4ee3\u4ef7\u4e3a:</p> <ul> <li>PUSH : 1</li> <li>POP : 1</li> <li> <p>MULTIPOP : \\(\\min(k,s)\\) (\u5176\u4e2d\\(k\\)\u662f\u63d0\u4f9b\u7ed9MULTIPOP\u7684\u53c2\u6570\uff0c\\(s\\)\u662f\u8c03\u7528\u65f6\u6808\u7684\u89c4\u6a21)</p> </li> <li> <p>PUSH : 2</p> </li> <li>POP : 0</li> <li> <p>MULTIPOP : 0</p> </li> <li> <p>MULTIPOP\u7684\u644a\u8fd8\u4ee3\u4ef7\u662f\u4e00\u4e2a\u5e38\u6570 (0),\u800c\u5176\u5b9e\u9645\u4ee3\u4ef7\u662f\u53d8\u91cf\u3002\u5728\u6b64\u4f8b\u4e2d\uff0c\u6240\u6709\u4e09\u4e2a\u644a\u8fd8\u4ee3\u4ef7\u90fd\u662f\u5e38\u6570\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6240\u8003\u8651\u7684\u64cd\u4f5c\u7684\u644a\u8fd8\u4ee3\u4ef7\u53ef\u80fd\u5404\u4e0d\u76f8\u540c\uff0c\u6e10\u8fd1\u6027\u4e5f\u53ef\u80fd\u4e0d\u540c\u3002</p> </li> <li> <p>\u5728PUSH\u6bcf\u4e2a\u76d8\u5b50\u7684\u65f6\u5019\uff0c\u5c31\u4e3a\u5176POP\u5b58\u4e0b\u4e00\u7f8e\u5143\u4fe1\u7528\u3002</p> </li> <li>\u6362\u53e5\u8bdd\u8bf4\uff0c\u7531\u5343\u6808\u4e2d\u7684\u6bcf\u4e2a\u76d8\u5b50\u90fd\u5b58\u6709 1\u7f8e\u5143\u7684\u4fe1\u7528\uff0c\u800c\u6808\u4e2d\u7684\u76d8\u5b50\u6570\u59cb\u7ec8\u662f\u975e\u8d1f\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u4fdd\u8bc1\u4fe1\u7528\u503c\u4e5f\u603b\u662f\u975e\u8d1f\u7684\u3002\u56e0\u6b64\uff0c\u5bf9\u4efb\u610f \\(n\\)\u4e2a PUSH\u3001 POP\u3001MULTIPOP\u64cd\u4f5c\u7ec4\u6210\u7684\u5e8f\u5217\uff0c\u603b\u644a\u8fd8\u4ee3\u4ef7\u4e3a\u603b\u5b9e\u9645\u4ee3\u4ef7\u7684\u4e0a\u754c\u3002\u7531\u5343\u603b\u644a\u8fd8\u4ee3\u4ef7\u4e3a \\(O(n)\\),\u56e0\u6b64\u603b\u5b9e\u9645\u4ee3\u4ef7\u4e5f\u662f\u3002</li> </ul> \u52bf\u80fd\u6cd5 <ul> <li>\u6211\u4eec\u5c06\u4e00\u4e2a\u6808\u7684\u52bf\u51fd\u6570\u5b9a\u4e49\u4e3a\u5176\u4e2d\u7684\u5bf9\u8c61\u6570\u91cf\u3002\u5bf9\u4e8e\u521d\u59cb\u7684\u7a7a\u6808\\(D_0\\),\u6211\u4eec\u6709 \\(\\Phi(D_0) =0\\)\u3002\u7531\u5343\u6808\u4e2d\u5bf9\u8c61\u6570\u76ee\u6c38\u8fdc\u4e0d\u53ef\u80fd\u4e3a\u8d1f\uff0c\u56e0\u6b64\uff0c\u7b2c\\(i\\)\u6b65\u64cd\u4f5c\u5f97\u5230\u7684\u6808 \\(D_i\\);\u5177\u6709\u975e\u8d1f\u7684\u52bf</li> <li>POP\u7684\u644a\u8fd8\u4ee3\u4ef7 \uff1a 0</li> <li>PUSH\u7684\u644a\u8fd8\u4ee3\u4ef7 \uff1a2</li> </ul>"},{"location":"ADS/ADS1/#_3","title":"\u4e8c\u8fdb\u5236\u8ba1\u6570\u5668\u9012\u589e","text":"<p>\u4f8b\u5b50\u63cf\u8ff0</p> <ul> <li>\u6211\u4eec\u6765\u770b\u4e00\u4e2a\\(K\\)\u4f4d\u4e8c\u8fdb\u5236\u8ba1\u6570\u5668\u9012\u589e\u7684\u95ee\u9898\uff0c\u8ba1\u6570\u5668\u7684\u521d\u503c\u4e3a\\(0\\)\u3002\u6211\u4eec\u7528\u4e00\u4e2a\u4f4d\u6570\u7ec4 \\(A[0.. k\u20141]\\)\u4f5c\u4e3a\u8ba1\u6570\u5668\uff0c\u5176\u4e2d \\(A.length=k\\)\u3002\u5f53\u8ba1\u6570\u5668\u4e2d\u4fdd\u5b58\u7684\u4e8c\u8fdb\u5236\u503c\u4e3a\\(x\\)\u65f6\uff0c\\(x\\)\u7684\u6700\u4f4e\u4f4d\u4fdd\u5b58\u5728 \\(A[0]\\)\u4e2d\uff0c\u800c\u6700\u9ad8\u4f4d\u4fdd\u5b58\u5728 \\(A[k-1]\\)\u4e2d\uff0c\u56e0\u6b64\\(x= \\sum\\limits_{i=0}^{k-1}{A[i]}\u20222^i\\)\u3002\u521d\u59cb\u65f6 \\(x=0\\),\u56e0\u6b64\u5bf9\u6240\u6709 \\(i=0, 1, \u2026, k-1, A[i]=0\\)\u3002\u4e3a\u4e86\u5c06 \\(1\\)(\u6a21 \\(2^k\\))\u52a0\u5230\u8ba1\u6570\u5668\u7684\u503c\u4e0a\uff0c\u6211\u4eec\u4f7f\u7528\u5982\u4e0b\u8fc7\u7a0b\uff1a</li> </ul> <pre><code>INCREMENT(A)\n    i = 0\n    while i &lt; A.lenght and A[i] ==1 :\n        A[i] = 0\n        i = i + 1\n    if i &lt; A.lenght:\n        A[i] = 1\n</code></pre> <p>\u4e0e\u4e0a\u4e00\u4e2a\u5173\u4e8e\u6808\u7684\u4f8b\u5b50\u7c7b\u4f3c\uff0c\u5bf9\u6b64\u7b97\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4\u8fdb\u884c\u7c97\u7565\u7684\u5206\u6790\u4f1a\u5f97\u5230\u4e00\u4e2a\u6b63\u786e\u4f46\u4e0d\u7d27\u7684\u754c\u3002\u6700\u574f\u60c5\u51b5\u4e0b INCREMENT\u6267\u884c\u4e00\u6b21\u82b1\u8d39\\(O(k)\\)\u65f6\u95f4\uff0c\u6700\u574f\u60c5\u51b5\u5f53\u6570\u7ec4A\u6240\u6709\u4f4d\u90fd\u4e3a 1\u65f6\u53d1\u751f\u3002\u56e0\u6b64\uff0c\u5bf9\u521d\u503c\u4e3a 0\u7684\u8ba1\u6570\u5668\u6267\u884c \\(n\\)\u4e2aINCREMENT\u64cd\u4f5c\u6700\u574f\u60c5\u51b5\u4e0b\u82b1\u8d39 \\(O(nk)\\)\u65f6\u95f4\u3002</p> \u805a\u5408\u5206\u6790 <p>\u5bf9\u4e8e\\(n\\)\u4e2a INCREMENT\u64cd\u4f5c\u7ec4\u6210\u7684\u5e8f\u5217\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u66f4\u7d27\u7684\u754c\uff08\u6700\u574f\u60c5\u51b5\u4e0b\u4ee3\u4ef7\uff09\u4e3a \\(O(n)\\),\u56e0\u4e3a\u4e0d\u53ef\u80fd\u6bcf\u6b21 INCREMENT\u64cd\u4f5c\u90fd\u7ffb\u8f6c\u6240\u6709\u7684\u4e8c\u8fdb\u5236\u4f4d\u3002\u6bcf\u6b21\u8c03\u7528INCREMENT\u65f6 \\(A[0]\\)\u786e\u5b9e\u90fd\u4f1a\u7ffb\u8f6c\u3002\u800c\u4e0b\u4e00\u4f4d \\(A[1]\\),\u5219\u53ea\u662f\u6bcf\u4e24\u6b21\u8c03\u7528\u7ffb\u8f6c\u4e00\u6b21\uff0c\u8fd9\u6837\uff0c\u5bf9\u4e00\u4e2a\u521d\u503c\u4e3a \\(0\\)\u7684\u8ba1\u6570\u5668\u6267\u884c\u4e00\u4e2a\\(n\\)\u4e2aINCREMENT\u64cd\u4f5c\u7684\u5e8f\u5217\uff0c\u53ea\u4f1a\u4f7f\\(A[1]\\)\u7ffb\u8f6c \\([n/2]\\)\u6b21\u3002\u7c7b\u4f3c\u5730\uff0c \\(A[2]\\)\u6bcf4\u6b21\u8c03\u7528\u624d\u7ffb\u8f6c\u4e00\u6b21\uff0c\u5373\u6267\u884c\u4e00\u4e2a\\(n\\)\u4e2aINCREMENT\u64cd\u4f5c\u7684\u5e8f\u5217\u7684\u8fc7\u7a0b\u4e2d\u7ffb\u8f6c\\([n/4]\\)\u6b21\u3002\u4e00\u822c\u5730\uff0c\u5bf9\u4e00\u4e2a\u521d\u503c\u4e3a\\(0\\)\u7684\u8ba1\u6570\u5668\uff0c\u5728\u6267\u884c\u4e00\u4e2a\u7531\\(n\\)\u4e2aINCREMENT\u64cd\u4f5c\u7ec4\u6210\u7684\u5e8f\u5217\u7684\u8fc7\u7a0b\u4e2d\uff0c\\(A[i]\\)\u4f1a\u7ffb\u8f6c\\([n/2^i]\\)\u6b21 \\((i=0, 1, \u2026\uff0c K-1)\\)\u3002\u5bf9 \\(i \u2265 k\\), \\(A[i]\\)\u4e0d\u5b58\u5728\uff0c\u56e0\u6b64\u4e5f\u5c31\u4e0d\u4f1a\u7ffb\u8f6c\u3002\u56e0\u6b64\uff0c\u5728\u6267\u884c INCREMENT\u5e8f\u5217\u7684\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u7684\u7ffb\u8f6c\u64cd\u4f5c\u7684\u603b\u6570\u4e3a</p> \\[\\sum\\limits_{i=0}^{k-1}{[\\frac{n}{2^i}]} &lt; n\\sum\\limits_{i=1}^{\\infty}{\\frac{1}{2^i}} = 2n\\] <p>\u56e0\u6b64\uff0c\u5bf9\u4e00\u4e2a\u521d\u503c\u4e3a\\(0\\)\u7684\u8ba1\u6570\u5668\uff0c\u6267\u884c\u4e00\u4e2a\\(n\\)\u4e2a INCREMENT\u64cd\u4f5c\u7684\u5e8f\u5217\u7684\u6700\u574f\u60c5\u51b5\u65f6\u95f4\u4e3a\\(O(n)\\)\u3002\u6bcf\u4e2a\u64cd\u4f5c\u7684\u5e73\u5747\u4ee3\u4ef7\uff0c\u5373\u644a\u8fd8\u4ee3\u4ef7\u4e3a\\(O(n)/n=O(1)\\)\u3002</p> \u6838\u7b97\u6cd5 <p>\u6211\u4eec\u5206\u6790\u5728\u4e00\u4e2a\u4ece\\(0\\)\u5f00\u59cb\u7684\u4e8c\u8fdb\u5236\u8ba1\u6570\u5668\u4e0a\u6267\u884c INCREMENT\u64cd\u4f5c\u3002\u5982\u6211\u4eec\u4e4b\u524d\u6240\u89c2\u5bdf\u5230\u7684\uff0c\u6b64\u64cd\u4f5c\u7684\u8fd0\u884c\u65f6\u95f4\u4e0e\u7ffb\u8f6c\u7684\u4f4d\u6570\u6210\u6b63\u6bd4\uff0c\u56e0\u6b64\u5bf9\u6b64\u4f8b\uff0c\u53ef\u4ee5\u5c06\u7ffb\u8f6c\u7684\u4f4d\u6570\u4f5c\u4e3a\u64cd\u4f5c\u7684\u4ee3\u4ef7\u3002\u6211\u4eec\u518d\u6b21\u4f7f\u7528\\(1\\)\u7f8e\u5143\u8868\u793a\u4e00\u4e2a\u5355\u4f4d\u7684\u4ee3\u4ef7\uff08\u5728\u6b64\u4f8b\u4e2d\u662f\u7ffb\u8f6c\\(1\\)\u4f4d\uff09\u3002\u5728\u644a\u8fd8\u5206\u6790\u4e2d\uff0c\u5bf9\u4e00\u6b21\u7f6e\u4f4d\u64cd\u4f5c\uff0c\u6211\u4eec\u8bbe\u5176\u644a\u8fd8\u4ee3\u4ef7\u4e3a\\(2\\)\u7f8e\u5143\u3002\u5f53\u8fdb\u884c\u7f6e\u4f4d\u65f6\uff0c\u7528\\(1\\)\u7f8e\u5143\u652f\u4ed8\u7f6e\u4f4d\u64cd\u4f5c\u7684\u5b9e\u9645\u4ee3\u4ef7\uff0c\u5e76\u5c06\u53e6\u5916\\(1\\)\u7f8e\u5143\u5b58\u4e3a\u4fe1\u7528\uff0c\u7528\u6765\u652f\u4ed8\u5c06\u6765\u590d\u4f4d\u64cd\u4f5c\u7684\u4ee3\u4ef7\u3002\u5728\u4efb\u4f55\u65f6\u523b\uff0c\u8ba1\u6570\u5668\u4e2d\u4efb\u4f55\u4e3a\\(1\\)\u7684\u4f4d\u90fd\u5b58\u6709\\(1\\)\u7f8e\u5143\u7684\u4fe1\u7528\uff0c\u8fd9\u6837\u5bf9\u5343\u590d\u4f4d\u64cd\u4f5c\uff0c\u6211\u4eec\u5c31\u65e0\u9700\u7f34\u7eb3\u4efb\u4f55\u8d39\u7528\uff0c\u4f7f\u7528\u5b58\u50a8\u7684 1\u7f8e\u5143\u4fe1\u7528\u5373\u53ef\u652f\u4ed8\u590d\u4f4d\u64cd\u4f5c\u7684\u4ee3\u4ef7\u3002\u73b0\u5728\u53ef\u4ee5\u786e\u5b9a INCREMENT\u7684\u644a\u8fd8\u4ee3\u4ef7\u3002 while\u5faa\u73af\u4e2d\u590d\u4f4d\u64cd\u4f5c\u7684\u4ee3\u4ef7\u7528\u8be5\u4f4d\u50a8\u5b58\u7684\\(1\\)\u7f8e\u5143\u6765\u652f\u4ed8\u3002INCREMENT\u8fc7\u7a0b\u81f3\u591a\u7f6e\u4f4d\u4e00\u6b21\uff0c\u56e0\u6b64\uff0c\u5176\u644a\u8fd8\u4ee3\u4ef7\u6700\u591a\u4e3a\\(2\\)\u7f8e\u5143\u3002\u8ba1\u6570\u5668\u4e2d\\(1\\)\u7684\u4e2a\u6570\u6c38\u8fdc\u4e0d\u4f1a\u4e3a\u8d1f\uff0c\u56e0\u6b64\uff0c\u4efb\u4f55\u65f6\u523b\u4fe1\u7528\u503c\u90fd\u662f\u975e\u8d1f\u7684\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e\\(n\\)\u4e2aINCREMENT\u64cd\u4f5c\uff0c\u603b\u644a\u8fd8\u4ee3\u4ef7\u4e3a\\(O(n)\\),\u4e3a\u603b\u5b9e\u9645\u4ee3\u4ef7\u7684\u4e0a\u754c\u3002</p> \u52bf\u80fd\u6cd5 <p>\u4f5c\u4e3a\u52bf\u80fd\u6cd5\u7684\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u518d\u6b21\u5206\u6790\u4e8c\u8fdb\u5236\u8ba1\u6570\u5668\u9012\u589e\u95ee\u9898\u3002\u8fd9\u4e00\u6b21\uff0c\u6211\u4eec\u5c06\u8ba1\u6570\u5668\u6267\u884c\\(i\\)\u6b21 INCREMENT\u64cd\u4f5c\u540e\u7684\u52bf\u5b9a\u4e49\u4e3a\\(b_i\\)(\\(i\\)\u6b21\u64cd\u4f5c\u540e\u8ba1\u6570\u5668\u4e2d1\u7684\u4e2a\u6570)\u3002\u6211\u4eec\u6765\u8ba1\u7b97 INCREMENT\u64cd\u4f5c\u7684\u644a\u8fd8\u4ee3\u4ef7\u3002\u5047\u8bbe\u7b2c\\(i\\)\u4e2aINCREMENT\u64cd\u4f5c\u5c06\\(t_i\\)\u4e2a\u4f4d\u590d\u4f4d\uff0c\u5219\u5176\u5b9e\u9645\u4ee3\u4ef7\u81f3\u591a\u4e3a\\(t_i + 1\\),\u56e0\u4e3a\u9664\u4e86\u590d\u4f4d\\(t_i\\)\u4e2a\u4f4d\u4e4b\u5916\uff0c\u8fd8\u81f3\u591a\u7f6e\u4f4d1\u4f4d\u3002\u5982\u679c \\(b_i=0\\),\u5219\u7b2c\\(i\\)\u4e2a\u64cd\u4f5c\u5c06\u6240\u6709\\(K\\)\u4f4d\u90fd\u590d\u4f4d\u4e86\uff0c\u56e0\u6b64 \\(b_{i-1} =t_i=k\\)\u3002\u5982\u679c \\(b_i&gt;0\\),\u5219 \\(b_i=b_{i-1}-t_i+1\\)\u3002\u65e0\u8bba\u54ea\u79cd\u60c5\u51b5\uff0c\\(b_i \\leq b_{i-1}-1-t_i + 1\\),\u52bf\u5dee\u4e3a</p> \\[\\Phi(D_i) - \\Phi(D_{i-1}) \\leq (b_{i-1} - t_i + 1) - b_{i-1} = 1 - t_i\\] <p>\u56e0\u6b64\uff0c\u644a\u8fd8\u4ee3\u4ef7\u4e3a</p> \\[\\hat{c_i} = c_i + \\Phi(D_i) - \\Phi(D_{i-1}) \\leq (t_1 + 1) + (1 - t_i) = 2\\] <p>\u5982\u679c\u8ba1\u6570\u5668\u4ece\\(0\\)\u5f00\u59cb\uff0c\u5219\\(\\Phi(D_0) = 0\\)\u7531\u4e8e\u5bf9\u6240\u6709i\u5747\u6709\\(\\Phi(D_i) \\geq 0\\), \u56e0\u6b64\uff0c\u4e00\u4e2a\\(n\\)\u4e2aINCREMENT\u64cd\u4f5c\u7684\u5e8f\u5217\u7684\u603b\u644a\u8fd8\u4ee3\u4ef7\u662f\u603b\u5b9e\u9645\u4ee3\u4ef7\u7684\u4e0a\u754c\uff0c\u6240\u4ee5 n\u4e2aINCREMENT\u64cd\u4f5c\u7684\u6700\u574f\u60c5\u51b5\u65f6\u95f4\u4e3a\\(O(n)\\)\u3002\u52bf\u80fd\u6cd5\u7ed9\u51fa\u4e86\u5206\u6790\u8ba1\u6570\u5668\u95ee\u9898\u7684\u4e00\u4e2a\u7b80\u5355\u65b9\u6cd5\uff0c\u5373\u4f7f\u8ba1\u6570\u5668\u4e0d\u662f\u4ece\\(0\\)\u5f00\u59cb\u4e5f\u53ef\u4ee5\u5206\u6790\u3002\u8ba1\u6570\u5668\u521d\u59cb\u65f6\u5305\u542b\\(b_0\\)\u4e2a1,\u7ecf\u8fc7n\u4e2aINCREMENT\u64cd\u4f5c\u540e\u5305\u542b\\(b_n\\)\u4e2a1,\u5176\u4e2d\\(0 \\leq b_0, b_n \\leq k\\)</p> \\[\\sum\\limits_{i=1}^{n}c_i = \\sum\\limits_{i=1}^{n}\\hat{c_i} + \\Phi(D_0) - \\Phi(D_n)\\] \\[\\sum\\limits_{i=1}^{n}c_i \\leq \\sum\\limits_{i=1}^{n}2-b_n+b_0=2n-b_n+b_0\\]"},{"location":"ADS/ADS2/","title":"chapter 2 Red-Black Trees and B+ Trees","text":""},{"location":"ADS/ADS2/#red-black-trees","title":"Red-Black Trees","text":"<p>Definition of red-black tree</p> <p>A red-black tree is a binary search tree that satisfies the following red-black properties: 1. Every node is either red or black. 2. The root is black. 3. Every leaf (NIL) is black. 4. If a node is red, then both its children are black. 5. For each node, all simple paths from the node to descendant leaves contain the same number of black nodes.(\u9ed1\u9ad8\u76f8\u540c)</p> <p>Warning</p> <ul> <li>\u9664\u4e86\u5e38\u89c4\u7684\u7236\u5b50\u4ee5\u53ca\u952e\u503c\u4fe1\u606f\u4e4b\u5916\uff0c\u7ea2\u9ed1\u6811\u8fd8\u6709\u4e00\u4e2a\u989c\u8272\u7684\u5c5e\u6027\uff0c\u5e76\u4e14\u5f53\u5de6\u53f3\u5b50\u7ed3\u70b9\u4e3a\u7a7a\u65f6\uff0c\u5fc5\u987b\u662f\u9ed1\u8272\u7684NIL\u7ed3\u70b9\uff08\u5b83\u6ca1\u6709\u952e\u503c\uff09\uff0c\u8fd9\u4e0e\u4e00\u822c\u7684NULL\u4e0d\u4e00\u6837\u3002</li> <li>\u9ed1\u9ad8\u662f\u7edd\u5bf9\u4e25\u683c\u7684\u5e73\u8861\u8981\u6c42\uff0c\u800c\u7ea2\u8272\u7ed3\u70b9\u5219\u662f\u5c11\u91cf\u4e0d\u5e73\u8861\u7684\u56e0\u7d20\uff0c\u5e76\u4e14\u5b9a\u4e49\u63a7\u5236\u4e86\u7ea2\u8272\u7ed3\u70b9\u7684\u4e2a\u6570\uff0c\u4e5f\u5c31\u63a7\u5236\u4e86\u4e0d\u5e73\u8861\u56e0\u7d20\u7684\u5f71\u54cd</li> </ul>"},{"location":"ADS/ADS2/#insertion","title":"Insertion","text":"\u4e3a\u4ec0\u4e48\u9ed8\u8ba4\u63d2\u5165\u7ea2\u8272\u8282\u70b9 <p>\u5047\u8bbe\u6211\u4eec\u6bcf\u6b21\u90fd\u63d2\u5165\u9ed1\u8272\u7ed3\u70b9\uff0c\u90a3\u4e48\u5b9a\u4e49\u7b2c\u4e94\u6761\u4e00\u5b9a\u4f1a\u88ab\u7834\u574f\uff0c\u56e0\u6b64\u6bcf\u6b21\u63d2\u5165\u90fd\u5fc5\u987b\u8c03\u6574\uff08\u9664\u4e86\u4ece\u7a7a\u6811\u63d2\u5165\u7684\u90a3\u6b21\uff09\uff1b\u4f46\u662f\u5982\u679c\u63d2\u5165\u7ea2\u8272\u7ed3\u70b9\uff0c\u5b9a\u4e49\u7b2c\u4e8c\u6761\uff08\u4ec5\u5728\u63d2\u5165\u7a7a\u6811\u65f6\uff09\u548c\u5b9a\u4e49\u7b2c\u56db\u6761\u4ec5\u4ec5\u662f\u6709\u53ef\u80fd\u88ab\u7834\u574f\uff0c\u56e0\u6b64\u76f4\u89c2\u6765\u770b\u63d2\u5165\u7ea2\u8272\u7ed3\u70b9\u4f1a\u6bd4\u63d2\u5165\u9ed1\u8272\u7ed3\u70b9\u9700\u8981\u7684\u8c03\u6574\u66f4\u5c11\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5728\u5b66\u5b8c\u7ea2\u9ed1\u6811\u5220\u9664\u540e\uff0c\u7ea2\u9ed1\u6811\u5220\u9664\u9ed1\u8272\u7ed3\u70b9\u65f6\u7684\u590d\u6742\u60c5\u51b5\u4e5f\u6697\u793a\u4e86\u63d2\u5165\u7ea2\u8272\u5e94\u5f53\u662f\u66f4\u597d\u7684\u9009\u62e9\u3002</p> <ul> <li>\u60c5\u51b5 1\uff1a\\(X\\) \u7684\u53d4\u53d4\uff08\u5373\u7236\u4eb2\u7684\u5144\u5f1f\uff09\u662f\u7ea2\u8272\u7684\uff0c\\(X\\) \u65e0\u8bba\u5de6\u53f3\u5b69\u5b50\u90fd\u662f\u8be5\u60c5\u51b5</li> </ul> <p></p> <ul> <li> <p>\u60c5\u51b5 2\uff1a\\(X\\) \u7684\u53d4\u53d4\uff08\u5373\u7236\u4eb2\u7684\u5144\u5f1f\uff09\u662f\u9ed1\u8272\u7684\uff0c\u4e14 \\(X\\) \u662f\u53f3\u5b69\u5b50</p> </li> <li> <p>\u60c5\u51b5 3\uff1a\\(X\\) \u7684\u53d4\u53d4\uff08\u5373\u7236\u4eb2\u7684\u5144\u5f1f\uff09\u662f\u9ed1\u8272\u7684\uff0c\u4e14 \\(X\\) \u662f\u5de6\u5b69\u5b50</p> </li> </ul> <p></p> <p>Summary</p> <p>\u5bf9\u4e8e\u63d2\u5165\u4ea7\u751f\u7684\u51b2\u7a81\u95ee\u9898\uff0c\u6838\u5fc3\u7684\u5904\u7406\u601d\u60f3\u662f\u5c06\u9505\u4e0d\u65ad\u5411\u4e0a\u7529  </p>"},{"location":"ADS/ADS2/#deletion","title":"Deletion","text":"<p>\u57fa\u7840\u5220\u9664\u64cd\u4f5c</p> <ul> <li>\u5982\u679c\\(X\\)\u6ca1\u6709\u5b69\u5b50\uff0c\u76f4\u63a5\u5220\u9664\u5c31\u597d\uff0c\u6ca1\u6709\u4efb\u4f55\u540e\u987e\u4e4b\u5fe7\uff1b</li> <li>\u5982\u679c\\(X\\)\u53ea\u6709\u4e00\u4e2a\u5b69\u5b50\uff0c\u90a3\u5c31\u8ba9\u5b69\u5b50\u63a5\u66ff\\(X\\)\u7684\u4f4d\u7f6e\uff1b</li> <li>\u5982\u679c\\(X\\)\u6709\u4e24\u4e2a\u5b69\u5b50\uff0c\u90a3\u5c31\u8ba9\\(X\\)\u4e0e\u5176\u5de6\u5b50\u6811\u7684\u6700\u5927\u7ed3\u70b9\uff08\u6216\u53f3\u5b50\u6811\u6700\u5c0f\u7ed3\u70b9\uff09\u4ea4\u6362\uff0c\u7136\u540e\u5220\u9664 \\(X\\)\uff08\u8fd9\u65f6 \\(X\\) \u6240\u5728\u7684\u4f4d\u7f6e\u4e00\u5b9a\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u56e0\u4e3a\u5de6\u5b50\u6811\u6700\u5927\u7ed3\u70b9\u4e0d\u53ef\u80fd\u6709\u53f3\u5b69\u5b50\uff0c\u53f3\u5b50\u6811\u6700\u5c0f\u7ed3\u70b9\u4e0d\u53ef\u80fd\u6709\u5de6\u5b69\u5b50\uff09</li> </ul> <p>Red-Black Tree\u5220\u9664\u7279\u70b9</p> <p>\u4e8b\u5b9e\u4e0a\u7ea2\u9ed1\u6811\u7684\u5220\u9664\u662f\u57fa\u4e8e\u8fd9\u4e9b\u64cd\u4f5c\u7684\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\\(X\\) \u548c\u4e0e\u5176\u4ea4\u6362\u7684\u7ed3\u70b9\u53ea\u4ea4\u6362\u952e\u503c\uff0c\u4e0d\u4ea4\u6362\u989c\u8272\uff0c\u5426\u5219\u5982\u679c\u4e24\u8005\u989c\u8272\u4e0d\u540c\uff0c\u5728\u4ea4\u6362\u7684\u65f6\u5019\u5c31\u53ef\u80fd\u7834\u574f\u7b2c\u4e94\u6761\u6027\u8d28\uff0c\u8fd9\u662f\u5f88\u96be\u4ee4\u4eba\u6ee1\u610f\u7684\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u7b2c\u4e09\u79cd\u60c5\u51b5\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b65\u4ea4\u6362\u76f4\u63a5\u8f6c\u5316\u4e3a\u7b2c\u4e00\u6216\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3\u7b2c\u4e00\u548c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002</p> <p>\u53cc\u9ed1\u8282\u70b9</p> <p>\u5982\u679c\u63a5\u66ff\u88ab\u5220\u9664\u7684\u662fNIL\u6216\u662f\u9ed1\u8272\u7ed3\u70b9\u5e94\u8be5\u600e\u4e48\u529e\uff1f\u6211\u4eec\u76f4\u63a5\u7ed9\u9ed1\u8272\u7ed3\u70b9\u6216\u8005 NIL\uff08\u5176\u5b9e\u4e5f\u662f\u9ed1\u8272\u7ed3\u70b9\uff09\u518d\u52a0\u4e00\u91cd\u9ed1\u8272\uff0c\u4e8e\u662f\u5b83\u7684\u989c\u8272\u53d8\u6210\u4e86\u53cc\u9ed1\u3002\u6b64\u65f6\u7b2c\u4e94\u6761\u6027\u8d28\u6ca1\u6709\u88ab\u7834\u574f\uff0c\u4f46\u662f\uff0c\u7b2c\u4e00\u6761\u6027\u8d28\u88ab\u7834\u574f\u4e86\uff01\u8fd9\u91cc\u51fa\u73b0\u4e86\u975e\u7ea2\u4e5f\u975e\u9ed1\u7684\u989c\u8272\uff01\u4e8e\u662f\u6211\u4eec\u7684\u60f3\u6cd5\u5c31\u662f\uff1a\u628a\u8fd9\u4e2a\u9ed1\u8272\u7684 debuff \u6254\u7ed9\u4e00\u4e2a\u7ea2\u8272\u7ed3\u70b9\uff0c\u6216\u8005\u4e00\u6b65\u4e00\u6b65\u5f80\u4e0a\u6254\u7ed9\u6839\u7ed3\u70b9\uff0c\u4e8b\u5b9e\u4e0a\u6839\u7ed3\u70b9\u628a\u53cc\u9ed1\u76f4\u63a5\u53d8\u6210\u9ed1\u8272\u5b8c\u5168\u4e0d\u5f71\u54cd\u5176\u5b83\u6027\u8d28\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5220\u9664\u7684\u60c5\u51b5\u5206\u6210\u4ee5\u4e0b\u56db\u7c7b\uff08\u4e0e\u63d2\u5165\u76f8\u540c\uff0c\u8fd9\u91cc\u7528\u5b50\u6811\u8868\u793a\u66f4\u4e00\u822c\u7684\u60c5\u51b5\uff0c\\(X\\) \u5728\u6b64\u5904\u5219\u8868\u793a\u53cc\u9ed1\u7ed3\u70b9\uff0c\u56fe\u4e2d\u7528\u9ed1\u8272\u5706\u5708\u548c\u5706\u65c1\u8fb9\u7684\u52a0\u53f7\u8868\u793a\u53cc\u9ed1\uff0c\u84dd\u8272\u8868\u793a\u989c\u8272\u65e0\u6240\u8c13\uff0c\u53ef\u7ea2\u53ef\u9ed1\u3002\u6ce8\u610f\u8fd9\u91cc \\(X\\) \u90fd\u662f\u7236\u4eb2\u7684\u5de6\u5b69\u5b50\uff0c\u53f3\u5b69\u5b50\u60c5\u51b5\u5bf9\u79f0\uff09</p> <ul> <li>\u60c5\u51b5 1\uff1a\\(X\\) \u7684\u5144\u5f1f\u662f\u7ea2\u8272\u7684</li> </ul> <p></p> <p>\u7531\u4e8e\u539f\u5148\u7684\u6811\u6ee1\u8db3\u7ea2\u9ed1\u6811\u5b9a\u4e49\u7b2c\u56db\u6761\uff0c\u56e0\u6b64\u6b64\u65f6\u7236\u7ed3\u70b9\u4e00\u5b9a\u662f\u9ed1\u8272\u3002\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u5c06\u5144\u5f1f\u8282\u70b9\u62ce\u8d77\u6765</p> <ul> <li>\u60c5\u51b5 2\uff1a\\(X\\) \u7684\u5144\u5f1f\u662f\u9ed1\u8272\u7684\uff0c\u4e14\u5144\u5f1f\u7684\u4e24\u4e2a\u5b69\u5b50\uff08\u6839\u636e\u8ddd\u79bb\u5212\u5206\u4e3a\u8fd1\u3001\u8fdc\u4f84\u5b50\uff0c\u7528\u8fdc\u8fd1\u800c\u4e0d\u7528\u5de6\u53f3\u662f\u4e3a \u4e86\u5bf9\u79f0\u60c5\u51b5\u4e0d\u6df7\u6dc6\u5de6\u53f3\uff09\u90fd\u662f\u9ed1\u8272\u7684</li> </ul> <p></p> <p>\u8fd9\u65f6\u5019\u6ca1\u4eba\u662f\u7ea2\u8272\u53ef\u4ee5\u6551\u4e86\uff0c\u90a3\u5c31\u60f3\u8d77\u6839\u7ed3\u70b9\u518d\u600e\u4e48\u6837\u90fd\u80fd\u6551\uff0c\u6240\u4ee5\u628a\u53cc\u9ed1\u5f80\u4e0a\u63a8\u7ed9\u7236\u4eb2\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u7ea2\u9ed1\u6811\u6027\u8d28\uff0c\u5144\u5f1f\u4e5f\u8981\u4ece\u9ed1\u53d8\u7ea2\uff0c\u603b\u800c\u8a00\u4e4b\u5c31\u662f \\(X\\) \u8fd9\u4e00\u5c42\u7684\u9ed1\u8272\u5168\u90e8\u5f80\u4e0a\u63a8\u3002\u5982\u679c\u7236\u4eb2\u539f\u672c\u662f\u7ea2\u8272\uff0c\u90a3\u5c31\u67d3\u9ed1\uff0c\u95ee\u9898\u89e3\u51b3\uff1b\u5982\u679c\u7236\u4eb2\u539f\u672c\u662f\u9ed1\u8272\uff0c\u90a3\u7236\u4eb2\u5c31\u53d8\u6210\u53cc\u9ed1\uff0c\u8ba9\u95ee\u9898\u5411\u6839\u7ed3\u70b9\u9760\u8fd1\u3002\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u662f\u4ece\u60c5\u51b51\u53d8\u6210\u60c5\u51b52\u7684\uff0c\u7236\u4eb2\u4e00\u5b9a\u662f\u7ea2\u8272\uff0c\u6240\u4ee5\u5982\u679c\u662f1\u53d8\u4e3a2\uff0c\u5219\u95ee\u9898\u4f1a\u9a6c\u4e0a\u89e3\u51b3\u3002</p> <ul> <li>\u60c5\u51b5 3\uff1a\\(X\\) \u7684\u5144\u5f1f\u662f\u9ed1\u8272\u7684\uff0c\u4e14\u8fd1\u4f84\u5b50\u662f\u7ea2\u8272\u7684\uff0c\u8fdc\u4f84\u5b50\u662f\u9ed1\u8272\u7684</li> </ul> <p></p> <p>\u8fd9\u65f6\u6211\u4eec\u501f\u7528 AVL \u6811\u7684\u60f3\u6cd5\uff0c\u7ea2\u8272\u5728\u7236\u4eb2 P \u7684 RL \u4f4d\u7f6e\uff0c\u56e0\u6b64\u505a double rotation\uff1asingle rotation \u540e\u4f1a\u53d8\u6210\u60c5\u51b54\u7684RR\u7684\u60c5\u51b5\uff08\u4e5f\u5c31\u610f\u5473\u7740\u7ea2\u8272\u8981\u7ed9\u5230RR\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u989c\u8272\u7684\u53d8\u5316\uff0c\u7528RR\u8bb0\u5fc6\u5f88\u65b9\u4fbf\uff09\u3002</p> <ul> <li>\u60c5\u51b5 4\uff1a\\(X\\) \u7684\u5144\u5f1f\u662f\u9ed1\u8272\u7684\uff0c\u4e14\u8fdc\u4f84\u5b50\u662f\u7ea2\u8272\u7684\uff0c\u8fd1\u4f84\u5b50\u989c\u8272\u4efb\u610f</li> </ul> <p></p> <p>\u6b64\u65f6\u5bf9\u5e94AVL\u6811\u7684RR\uff0c\u4e8e\u662f\u518d\u4e00\u6b21single rotation\u5373\u53ef\u628a\u53cc\u9ed1\u7684\u4e00\u91cd\u9ed1\u4e22\u7ed9\u7ea2\u8272\u8fdc\u4f84\u5b50\uff08\u5373\\(X\\)\u548c \\(N_2\\) \u90fd\u53d8\u6210\u9ed1\u8272\uff09\uff0c\u4f46\u8981\u6ce8\u610f\u4e3a\u4e86\u4fdd\u8bc1\u7ea2\u9ed1\u6811\u6027\u8d28\u7684\u989c\u8272\u53d8\u5316\uff0c\u5373P\u548cS\u8fd8\u8981\u4ea4\u6362\u989c\u8272\uff0c\u6b64\u65f6\u95ee\u9898\u89e3\u51b3\u3002</p> \u65f6\u95f4\u590d\u6742\u5ea6 <p>\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u603b\u7ed3\u5e76\u8ba1\u7b97\u51fa\u5220\u9664\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u9996\u5148\u6211\u4eec\u6700\u591a\u7528\\(O(\\log n)\\)\u7684\u65f6\u95f4\u627e\u5230\u5220\u9664\u7ed3\u70b9\uff0c\u6700\u591a 1 \u6b21\u4ea4\u6362\u548c 1 \u4e2a\u5220\u9664\u7684\u64cd\u4f5c\u3002\u63a5\u4e0b\u6765\u5982\u679c\u5220\u9664\u540e\u6ca1\u6709\u95ee\u9898\u5219\u5230\u6b64\u7ed3\u675f\uff1b\u5426\u5219\u6839\u636e\u5206\u6790\uff0c\u60c5\u51b5 1\u30013 \u548c 4 \u5728\u95ee\u9898\u89e3\u51b3\u524d\u6700\u591a\u8fdb\u53bb\u4e00\u6b21\uff0c\u56e0\u4e3a 4 \u53ef\u4ee5\u76f4\u63a5\u89e3\u51b3\uff0c3 \u76f4\u63a5\u8fdb\u5165 4 \u7136\u540e\u89e3\u51b3\uff0c1 \u5982\u679c\u8fdb\u5165 3 \u548c 4 \u4e5f\u53ef\u4ee5\u9a6c\u4e0a\u89e3\u51b3\uff0c\u8fdb\u5165 2 \u540e\u4e5f\u56e0\u4e3a\u7236\u7ed3\u70b9\u662f\u7ea2\u8272\u53ef\u4ee5\u9a6c\u4e0a\u89e3\u51b3\u3002\u56e0\u6b64\u5173\u952e\u5728\u4e8e\u60c5\u51b5 2 \u53ef\u80fd\u51fa\u73b0\u5f88\u591a\u6b21\uff0c\u4f46\u6700\u591a\u4e5f\u53ea\u662f\u6811\u9ad8\\(O(\\log n)\\)\u6b21\uff0c\u56e0\u4e3a\u6bcf\u6b21\u90fd\u4f1a\u4e0a\u63a8 1 \u683c\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u56e0\u4e3a\u60c5\u51b5 1\u30013 \u548c 4 \u5728\u95ee\u9898\u89e3\u51b3\u524d\u6700\u591a\u8fdb\u53bb\u4e00\u6b21\uff0c\u6240\u4ee5\u6700\u591a 3 \u6b21\u65cb\u8f6c\u52a0\u4e0a\\(O(\\log n)\\)\u6b21\u989c\u8272\u8c03\u6574\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\uff0c\u56e0\u6b64\u6211\u4eec\u6709\u5982\u4e0b\u7ed3\u8bba\uff1a\u4e00\u68f5\u6709 \\(n\\)\u4e2a\u5185\u90e8\u7ed3\u70b9\u7684\u7ea2\u9ed1\u6811\u5220\u9664\u4e00\u4e2a\u7ed3\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(\\log n)\\)</p>"},{"location":"ADS/ADS2/#b-tree","title":"B+ Tree","text":"<p>Definition</p> <p>A B+ tree of order M is a tree with the following structural properties:</p> <ul> <li>The root is either a leaf or has between 2 and M children.</li> <li>All nonleaf nodes (except the root) have between $ \u2308M/2\u2309$ and \\(M\\) children.</li> <li>All leaves are at the same depth. Assume each nonroot leaf also has between $ \u2308M/2\u2309$ and \\(M\\) children.</li> </ul> Example <p></p>"},{"location":"ADS/ADS2/#b-tree_1","title":"B+ Tree\u7684\u64cd\u4f5c","text":""},{"location":"ADS/ADS2/#search","title":"search","text":"<p>\\(B+\\)\u6811\u4e2d\u7684\u8282\u70b9\u5305\u542b\u6709\u591a\u4e2a\u952e\u3002\u5047\u8bbe\u9700\u8981\u67e5\u627e\u7684\u662f\\(k\\)\uff0c\u90a3\u4e48\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u4ece\u4e0a\u5230\u4e0b\u9012\u5f52\u7684\u904d\u5386\u6811\u3002\u5728\u6bcf\u4e00\u5c42\u4e0a\uff0c\u641c\u7d22\u7684\u8303\u56f4\u88ab\u51cf\u5c0f\u5230\u5305\u542b\u4e86\u641c\u7d22\u503c\u7684\u5b50\u6811\u4e2d\u3002\u5b50\u6811\u503c\u7684\u8303\u56f4\u88ab\u5b83\u7684\u7236\u8282\u70b9\u7684\u952e\u786e\u5b9a\u3002\u56e0\u4e3a\u662f\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u7684\u4e8c\u5206\u6cd5\u67e5\u627e\uff0c\u6240\u4ee5\u67e5\u627e\u4e00\u4e2a\u952e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <p>code</p> <pre><code>BTreeNode *BTreeNode::search(int k) {\n  // \u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u5f85\u67e5\u627e\u952e k \u7684\u952e\n  int i = 0;\n  while (i &lt; n &amp;&amp; k &gt; keys[i]) i++;\n\n  // \u5982\u679c\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u952e\u7b49\u4e8e k , \u8fd4\u56de\u8282\u70b9\u6307\u9488\n  if (keys[i] == k) return this;\n\n  // \u5982\u679c\u6ca1\u6709\u627e\u5230\u952e k \u4e14\u5f53\u524d\u8282\u70b9\u4e3a\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56deNULL\n  if (leaf == true) return NULL;\n\n  // \u9012\u5f52\n  return C[i]-&gt;search(k);\n}\n</code></pre> <p>\u6839\u636e B+ \u6811\u5b9a\u4e49\uff0c\u9700\u8981\u5728\u975e\u53f6\u7ed3\u70b9\u5c42\u9010\u5c42\u548c\u5b58\u50a8\u7684\u952e\u503c\u6bd4\u8f83\u4ece\u800c\u786e\u5b9a\u53bb\u54ea\u4e00\u4e2a\u5b69\u5b50\u7ed3\u70b9\u3002\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u4e24\u4e2a\u91cd\u8981\u56e0\u7d20\uff1a\u4e00\u4e2a\u662f\u6811\u7684\u9ad8\u5ea6\uff0c\u53e6\u4e00\u4e2a\u662f\u6bcf\u4e00\u5c42\u641c\u7d22\u9700\u8981\u7684\u65f6\u95f4\u3002\u6811\u7684\u9ad8\u5ea6\u975e\u5e38\u597d\u8ba1\u7b97\uff0c\u6700\u5dee\u7684\u60c5\u51b5\u4e5f\u662f\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u5b58 \\(\u2308M/2\u2309\\) \u4e2a\u7ed3\u70b9\uff0c\u56e0\u6b64\u6700\u5927\u9ad8\u5ea6\u662f\\(O(\\log_{\\lceil M/2 \\rceil} N)\\)\u7684\u3002\u7136\u540e\u6bcf\u4e00\u5c42\u56e0\u4e3a\u952e\u503c\u662f\u6392\u597d\u5e8f\u7684\uff0c\u56e0\u6b64\u7528\u4e8c\u5206\u67e5\u627e\u627e\u5230\u8981\u53bb\u54ea\u4e2a\u5b69\u5b50\u7ed3\u70b9\uff0c\u590d\u6742\u5ea6\u4e3a O(\\log_2 M)\uff0c\u7efc\u5408\u53ef\u5f97\u641c\u7d22\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(\\log_2 M \u00b7 log_{\u2308M/2\u2309} N) = (\\log_2 M/2 + 1) \u00b7\\frac{\\log_2 N}{\\log_2 M/2} = O(\\log N)\\)\uff0c\u6ce8\u610f\u63a8\u5bfc\u4e2d\u4f7f\u7528\u4e86\u6362\u5e95\u516c\u5f0f.</p>"},{"location":"ADS/ADS2/#insert","title":"Insert","text":"<p>PPT\u4e0a\u7684\u4f2a\u4ee3\u7801\u5df2\u7ecf\u5341\u5206\u6e05\u695a\uff0c\u5c31\u662f\u627e\u5230\u63d2\u5165\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u63d2\u5165\u770b\u7ed3\u70b9\u662f\u5426\u653e\u5f97\u4e0b\uff0c\u653e\u4e0d\u4e0b\u5c31\u5206\u88c2\uff0c\u5982\u679c\u5206\u88c2\u540e\u5b50\u7ed3\u70b9\u4e2a\u6570\u4e5f\u8fc7\u591a\u5219\u7ee7\u7eed\u5411\u4e0a\u4e00\u5c42\u5206\u88c2\uff0c\u76f4\u5230\u6839\u7ed3\u70b9\u5b69\u5b50\u7206\u6ee1\u5219\u5c06\u6839\u7ed3\u70b9\u5206\u88c2\u5e76\u751f\u6210\u65b0\u7684\u6839\u7ed3\u70b9\uff0c\u5f53\u7136\u8fd8\u8981\u6ce8\u610f\u5373\u4f7f\u4e0d\u5206\u88c2\u4e5f\u53ef\u80fd\u9700\u8981\u6309\\(B+\\)\u6811\u5b9a\u4e49\u66f4\u65b0\u4e0a\u5c42\u7ed3\u70b9\u3002\u6211\u4eec\u77e5\u9053\u6811\u6709\\(O(log_{\u2308M/2\u2309} N)\\)\u5c42\uff0c\u6bcf\u5c42\u64cd\u4f5c\u6700\u591a\u662f\\(O(M)\\)\u7684\uff08\u5982\u66f4\u65b0\u7ed3\u70b9\u6216\u8005\u5206\u88c2\uff0c\u65e0\u975e\u5c31\u662f\u66f4\u6539\\(O(M)\\)\u4e2a\u952e\u503c\u4ee5\u53ca\u4fee\u6539\\(O(M)\\)\u4e2a\u7236\u5b50\u6307\u9488\uff09\uff0c\u56e0\u6b64\u6574\u4f53\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(M \u00b7 \\log_{\\lceil M/2 \\rceil} N) = O(\\frac{M}{\\log M} \\log N)\\)\u3002</p> <p></p> Example <p> </p>"},{"location":"ADS/ADS2/#delete","title":"Delete","text":"<p>PPT \u6ca1\u6709\u8981\u6c42\uff0c\u4f46\u60f3\u6cd5\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u53ea\u9700\u628a\u63d2\u5165\u65f6\u5206\u88c2\u7ed3\u70b9\u6539\u4e3a\u5408\u5e76\u952e\u503c\u6216\u5b69\u5b50\u6570\u91cf\u5c11\u7684\u7ed3\u70b9\uff0c\u5f53\u7136\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e3a\u4e86\u786e\u4fdd\u5408\u5e76\u540e\u952e\u503c\u6570\u91cf\u4e0d\u4f1a\u8d85\u8fc7 M \u4e14\u51cf\u5c11\u5408\u5e76\u6b21\u6570\uff0c\u53ef\u4ee5\u5148\u770b\u770b\u5144\u5f1f\u7ed3\u70b9\u662f\u4e0d\u662f\u952e\u503c\u8fd8\u5f88\u591a\uff0c\u591a\u7684\u8bdd\u62ff\u4e00\u4e2a\u8fc7\u6765\u5373\u53ef\uff0c\u4e8b\u5b9e\u4e0a\u6574\u4f53\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u63d2\u5165\u5206\u6790\u7c7b\u4f3c\uff0c\u4e5f\u4e3a \\(O(\\frac{M}{\\log M} \\log N)\\)\u3002</p>"},{"location":"ADS/ADS2/#b-tree_2","title":"B+ Tree\u7684\u610f\u4e49","text":"<p>\u901a\u8fc7\u964d\u4f4e\u6811\u7684\u9ad8\u5ea6\uff0c\u6781\u5927\u51cf\u5c11\u4e86\u6570\u636e\u5e93\u67e5\u8be2\u7b49\u9700\u8981\u7684\u78c1\u76d8\u64cd\u4f5c\u6b21\u6570\u3002</p> <p>Example</p> <p></p>"},{"location":"ADS/ADS3/","title":"chapter 3 Inverted File Index","text":""},{"location":"ADS/ADS3/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>definition</p> <p>\u5012\u6392\u7d22\u5f15\u7684\u5f15\u5165\u548c\u5b9a\u4e49\uff1a\u4ece\u4e24\u4e2anaive\u7684\u60f3\u6cd5\u51fa\u53d1\uff0c\u5176\u4e00\u662f\u904d\u5386\u641c\u7d22\uff0c\u8fd9\u6837\u592a\u8017\u65f6\u95f4\uff1b\u5176\u4e8c\u662f\u7a00\u758f\u77e9\u9635\uff0c\u8fd9\u6837\u5b58\u50a8\u6bd4\u8f83\u6d6a\u8d39\u7a7a\u95f4\u3002\u6240\u4ee5\u6211\u4eec\u6539\u8fdb\u4e3a\u94fe\u8868\u5b58\u50a8\uff0c\u8fd9\u5c31\u662f\u5012\u6392\u7d22\u5f15\u3002\u6ce8\u610f\u5728\u5012\u6392\u7d22\u5f15\u91cc\u9762\u6211\u4eec\u4fdd\u5b58\u5355\u8bcd\u7684\u51fa\u73b0\u6b21\u6570\u662f\u56e0\u4e3a\u5f53\u591a\u4e2a\u5355\u8bcd\u540c\u65f6\u641c\u7d22\u65f6\uff0c\u4ece\u51fa\u73b0\u6700\u5c11\u7684\u8bcd\u5165\u624b\u641c\u7d22\u4f1a\u66f4\u5feb\u3002</p> \u904d\u5386\u641c\u7d22 \u7a00\u758f\u77e9\u9635 \u5012\u6392\u7d22\u5f15 Example <p></p> \u4e3a\u4ec0\u4e48\u53eb\u5012\u6392\u7d22\u5f15 <p>\u5012\u6392\u7d22\u5f15\u6e90\u4e8e\u5b9e\u9645\u5e94\u7528\u4e2d\u9700\u8981\u6839\u636e\u5c5e\u6027\u7684\u503c\u6765\u67e5\u627e\u8bb0\u5f55\u3002\u8fd9\u79cd\u7d22\u5f15\u8868\u4e2d\u7684\u6bcf\u4e00\u9879\u90fd\u5305\u62ec\u4e00\u4e2a\u5c5e\u6027\u503c\u548c\u5177\u6709\u8be5\u5c5e\u6027\u503c\u7684\u5404\u8bb0\u5f55\u7684\u5730\u5740\u3002\u7531\u4e8e\u4e0d\u662f\u7531\u8bb0\u5f55\u6765\u786e\u5b9a\u5c5e\u6027\u503c\uff0c\u800c\u662f\u7531\u5c5e\u6027\u503c\u6765\u786e\u5b9a\u8bb0\u5f55\u7684\u4f4d\u7f6e\uff0c\u56e0\u800c\u79f0\u4e3a\u5012\u6392\u7d22\u5f15(inverted index)\u3002\u5e26\u6709\u5012\u6392\u7d22\u5f15\u7684\u6587\u4ef6\u6211\u4eec\u79f0\u4e3a\u5012\u6392\u7d22\u5f15\u6587\u4ef6\uff0c\u7b80\u79f0\u5012\u6392\u6587\u4ef6(inverted file)</p>"},{"location":"ADS/ADS3/#_2","title":"\u6784\u5efa","text":"<ul> <li>\u5982\u4f55\u6784\u5efa\u5012\u6392\u7d22\u5f15\uff1a\u9010\u4e2a\u8bcd\u8bed\u8bfb\u5165\u63d2\u5165\u6784\u5efa\u3002\u5176\u4e2d\u4f1a\u6709\u5f88\u591a\u95ee\u9898\uff0c\u4f8b\u5982\u5206\u8bcd\uff0cstemming\uff0cstop words\u7b49\uff0c\u8fd8\u6709\u901a\u8fc7\u641c\u7d22\u6811\u6216 hash \u8bbf\u95ee\u7b49\uff1b\u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u5b58\u50a8\u4e0a\u7684\u8003\u91cf\uff0c\u56e0\u4e3a\u5185\u5b58\u4e0d\u591f\u9700\u8981\u5b58\u50a8\u5230\u5916\u5b58\uff0c\u5916\u5b58\u53ef\u4ee5\u5206\u5e03\u5f0f\u5b58\u50a8\uff08\u4e24\u79cd\u65b9\u5f0f\uff09\uff0c\u7136\u540e\u8fd8\u6709\u66f4\u65b0\u65f6\u53ef\u4ee5\u7528 cache \u7b49\u6539\u8fdb\u5b58\u50a8\u6548\u7387\u3002</li> </ul>"},{"location":"ADS/ADS3/#dynamic-indexing","title":"Dynamic indexing","text":""},{"location":"ADS/ADS3/#distributed-indexing","title":"Distributed indexing","text":""},{"location":"ADS/ADS3/#_3","title":"\u5206\u8bcd\u5668","text":""},{"location":"ADS/ADS3/#thresholding","title":"Thresholding(\u68c0\u7d22\u9608\u503c)","text":"<ul> <li>Document: only retrieve the top x documents where the documents are ranked by weight<ul> <li>Not feasible for Boolean queries</li> <li>Can miss some relevant documents due to truncation</li> </ul> </li> <li>Query: Sort the query terms by their frequency in ascending order; search according to only some percentage of the original query terms </li> </ul>"},{"location":"ADS/ADS3/#compression","title":"Compression","text":""},{"location":"ADS/ADS3/#_4","title":"\u5982\u4f55\u8bc4\u4ef7\u68c0\u7d22\u7cfb\u7edf","text":"<ul> <li>\u641c\u7d22\u5f15\u64ce\u7684\u8bc4\u4ef7\uff1a\u533a\u5206 Data Retrieval \u548c Information Retrieval\uff0c\u4e86\u89e3\u51c6\u786e\u7387\u548c\u53ec\u56de\u7387\u4e24\u4e2a\u91cd\u89810\u7684\u8861\u91cf\u53c2\u6570\uff08\u4e0e\u6b64\u5bf9\u5e94\u8fd8\u6709\u5047\u9633\u6027\u548c\u5047\u9634\u6027\uff09\uff0c\u5176\u4e2d\u9608\u503c\u7684\u8bbe\u7f6e\u662f\u91cd\u8981\u7684\u5f71\u54cd\u56e0\u7d20</li> </ul> <ul> <li>Relevance measurement requires 3 elements:<ul> <li>A benchmark document collection</li> <li>A benchmark suite of queries</li> <li>A binary assessment of either Relevant or Irrelevant for each query-doc pair</li> </ul> </li> </ul> <ul> <li>Precision \\(P = R_R / (R_R + I_R)\\)</li> <li>Recall    \\(R = R_R / (R_R + R_N)\\)</li> </ul>"},{"location":"ADS/ADS4/","title":"chapter 4 Leftist Heap &amp; Skew Heap","text":"<p>\u672c\u8bb2\u7684\u96be\u70b9\u5728\u4e8e\u7406\u89e3\u5bf9\u5e94\u7684\u644a\u8fd8\u5206\u6790</p> Review of heap <ol> <li>Insert\uff1a\u6211\u4eec\u76f4\u63a5\u63d2\u5728\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u4e0b\u4e00\u4e2a\u7a7a\u4f4d\u4e0a\uff0c\u7136\u540e percolate up \u627e\u5230\u5b83\u5e94\u5f53\u5728\u7684\u4f4d\u7f6e\uff0c\u663e\u7136\u6700\u574f\u60c5\u51b5\u4e5f\u4e0e\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u6210\u6b63\u6bd4\uff0c\u5373 \\(O(\\log n)\\)\u3002</li> <li>FindMin\uff1a\u76f4\u63a5\u8fd4\u56de\u6839\u7ed3\u70b9\u5373\u53ef\uff0c\u65f6\u95f4 \\(O(1)\\)\u3002</li> <li>DeleteMin\uff1a\u76f4\u63a5\u7528\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u9876\u66ff\u6839\u7ed3\u70b9\uff0c\u7136\u540e percolate down \u627e\u5230\u65b0\u6839\u7ed3\u70b9\u7684\u5f52\u5bbf\uff0c\u65f6\u95f4 \\(O(\\log n)\\)</li> <li>Buildheap : \u4e00\u822c\u4ece\u6700\u540e\u7684\u7236\u8282\u70b9\u5f00\u59cb\u7ef4\u62a4</li> <li>merge:\u628a\u4e00\u4e2a\u63a5\u5230\u53e6\u4e00\u4e2a\u540e\u9762\uff0c\u5b8c\u4e86\u6309\u7167build\u7684\u8fc7\u7a0b\u5904\u7406</li> </ol>"},{"location":"ADS/ADS4/#leftist-heaps","title":"Leftist Heaps","text":"<p>definition</p> <ul> <li>Target : Speed up merging in \\(O(N)\\).</li> <li>Heap:Structure Property + Order Property</li> <li>The null path length, \\(Npl(X)\\)(\u5230\u5916\u7ed3\u70b9\u7684\u8def\u5f84\u957f\u5ea6), of any node X is the length of the shortest path from \\(X\\) to a node without two children.  Define \\(Npl(NULL) = \u20131\\).</li> <li>The leftist heap property is that for every node \\(X\\) in the heap, the null path length of the left child is at least as large as that of the right child.</li> </ul> <p>NPL</p> <p>\\(\\textbf{Npl}(X)\\) = \\(\\min\\) { \\(\\textbf{Npl}(C) + 1  \\quad \\text{for all C as children of X}\\) }</p> <ul> <li>Order Property \u2013 the same</li> <li>Structure Property \u2013 binary tree, but unbalanced</li> </ul>"},{"location":"ADS/ADS4/#_1","title":"\u6027\u8d28:","text":"<ul> <li>A leftist tree with \\(r\\) nodes on the right path must have at least \\(2^r \u2013 1\\) nodes(\u5de6\u503e\u5806\u7684NPL\u7b49\u4e8e\u53f3\u8def\u5f84)</li> <li>\u53f3\u8def\u5f84\u957f\u5ea6\u7684\u6e10\u8fdb\u4e0a\u754c\u662f\\(O(\\log N)\\)</li> <li>\u5224\u65ad\u4ee5\u4e0b\u4e24\u4e2a\u8bf4\u6cd5\u662f\u5426\u6b63\u786e\uff0c\u82e5\u6b63\u786e\uff0c\u8bf7\u7ed9\u51fa\u8be6\u7ec6\u7684\u8bc1\u660e\uff1b\u82e5\u4e0d\u6b63\u786e\uff0c\u8bf7\u4e3e\u51fa\u53cd\u4f8b\uff1a<ol> <li>\u6309\u987a\u5e8f\u5c06\u542b\u6709\u952e\u503c\\(1, 2, \u00b7 \u00b7 \u00b7 , 2^k \u2212 1\\)\u7684\u7ed3\u70b9\u4ece\u5c0f\u5230\u5927\u4f9d\u6b21\u63d2\u5165\u5de6\u5f0f\u5806\uff0c\u90a3\u4e48\u7ed3\u679c\u5c06\u5f62\u6210\u4e00\u68f5\u5b8c\u5168\u5e73\u8861\u7684\u4e8c\u53c9\u6811\u3002</li> <li>\u6309\u987a\u5e8f\u5c06\u542b\u6709\u952e\u503c\\(1, 2, \u00b7 \u00b7 \u00b7 , 2^k \u2212 1\\)\u7684\u7ed3\u70b9\u4ece\u5c0f\u5230\u5927\u4f9d\u6b21\u63d2\u5165\u659c\u5806\uff0c\u90a3\u4e48\u7ed3\u679c\u5c06\u5f62\u6210\u4e00\u68f5\u5b8c\u5168\u5e73\u8861\u7684\u4e8c\u53c9\u6811\u3002\u4e24\u4e2a\u7ed3\u679c\u90fd\u662f\u6b63\u786e\u7684\uff0c\u8bc1\u660e\u53ea\u9700\u8981\u627e\u89c4\u5f8b\u5f52\u7eb3\u5373\u53ef\uff0c\u6ca1\u6709\u4ec0\u4e48\u7279\u6b8a\u6027\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u659c\u5806\u7684 Delete\u548c DecreaseKey \u64cd\u4f5c\u6211\u4eec\u4e00\u822c\u4e0d\u8ba8\u8bba\u3002</li> </ol> </li> </ul>"},{"location":"ADS/ADS4/#declaration","title":"Declaration","text":"<pre><code>struct TreeNode \n{ \n    ElementType     Element;\n    PriorityQueue       Left;\n    PriorityQueue       Right;\n    int         Npl;\n};\n</code></pre>"},{"location":"ADS/ADS4/#merge","title":"Merge","text":""},{"location":"ADS/ADS4/#_2","title":"\u9012\u5f52\u5b9e\u73b0","text":"<ol> <li>\u5982\u679c\u4e24\u4e2a\u5806\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u53e6\u4e00\u4e2a\u5373\u53ef\uff1b</li> <li>\u5982\u679c\u4e24\u4e2a\u5806\u90fd\u975e\u7a7a\uff0c\u6211\u4eec\u6bd4\u8f83\u4e24\u4e2a\u5806\u7684\u6839\u7ed3\u70b9 key \u7684\u5927\u5c0f\uff0ckey \u5c0f\u7684\u662f \\(H_1\\)\uff0ckey \u5927\u7684\u662f \\(H_2\\)\uff1b</li> <li>\u5982\u679c \\(H_1\\) \u53ea\u6709\u4e00\u4e2a\u9876\u70b9\uff08\u6839\u636e\u5de6\u5f0f\u5806\u7684\u5b9a\u4e49\uff0c\u53ea\u8981\u5b83\u6ca1\u6709\u5de6\u5b69\u5b50\u5c31\u4e00\u5b9a\u662f\u5355\u70b9\uff09\uff0c\u76f4\u63a5\u628a \\(H_2\\) \u653e\u5728 \\(H_1\\) \u7684\u5de6\u5b50\u6811\u5c31\u5b8c\u6210\u4efb\u52a1\u4e86\uff08\u5f88\u5bb9\u6613\u9a8c\u8bc1\u8fd9\u6837\u5f97\u5230\u7684\u7ed3\u6784\u7b26\u5408\u5de6\u5f0f\u5806\u6027\u8d28\uff0c\u6b64\u65f6 \\(Npl\\) \u4e5f\u6ca1\u6709\u53d8\u5316\uff09\uff1b</li> <li>\u5982\u679c \\(H_1\\) \u4e0d\u53ea\u6709\u4e00\u4e2a\u9876\u70b9\uff0c\u5219\u5c06 \\(H1\\) \u7684\u53f3\u5b50\u6811\u548c \\(H_2\\) \u5408\u5e76\uff08\u8fd9\u662f\u9012\u5f52\u7684\u4f53\u73b0\uff0c\u5728 base case \u8bbe\u8ba1\u826f\u597d\uff0c\u5176\u5b83\u6b65\u9aa4\u4e5f\u90fd\u5408\u7406\u7684\u60c5\u51b5\u4e0b\u4f60\u5b8c\u5168\u53ef\u4ee5\u76f8\u4fe1\u8fd9\u4e00\u6b65\u9012\u5f52\u5e2e\u4f60\u505a\u5bf9\u4e86\uff09\uff0c\u6210\u4e3a \\(H_1\\) \u7684\u65b0\u53f3\u5b50\u6811\uff1b</li> <li>\u5982\u679c \\(H_1\\) \u7684 \\(Npl\\) \u6027\u8d28\u88ab\u8fdd\u53cd\uff0c\u5219\u4ea4\u6362\u5b83\u7684\u4e24\u4e2a\u5b50\u6811\uff1b</li> <li>\u66f4\u65b0 \\(H_1\\) \u7684 \\(Npl\\)\uff0c\u7ed3\u675f\u4efb\u52a1\u3002</li> </ol> <p>\u590d\u6742\u5ea6\u5206\u6790</p> <ul> <li>\u5728\u5c06\u9012\u5f52\u8fc7\u7a0b\u5c55\u5f00\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u6e05\u695a\u5730\u5206\u6790\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u6211\u4eec\u9996\u5148\u5206\u6790\u9012\u5f52\u7684\u6700\u5927\u6df1\u5ea6\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5728\\(1-5\\)\u6b65\u8fd9\u6837\u7684\u9012\u5f52\u8fc7\u7a0b\u4e2d\uff0c\u4ea7\u751f\u7684\u9012\u5f52\u5c42\u6570\u4e0d\u4f1a\u8d85\u8fc7\u4e24\u4e2a\u5de6\u5f0f\u5806\u7684\u53f3\u8def\u5f84\u957f\u5ea6\u4e4b\u548c\uff0c\u56e0\u4e3a\u6bcf\u6b21\u9012\u5f52\u90fd\u4f1a\u4f7f\u5f97\u4e24\u4e2a\u5806\u7684\u5176\u4e2d\u4e00\u4e2a\uff08\u6839\u7ed3\u70b9key\u66f4\u5c0f\u7684\uff09\u5411\u7740\u53f3\u8def\u5f84\u4e0a\u4e0b\u4e00\u4e2a\u53f3\u5b69\u5b50\u63a8\u8fdb\uff0c\u5e76\u4e14\u76f4\u5230\u5176\u4e2d\u4e00\u4e2a\u63a8\u5230\u4e86null\u7ed3\u70b9\u5c31\u4e0d\u518d\u52a0\u6df1\u9012\u5f52\u3002\u6ce8\u610f\u52a0\u6df1\u4e00\u5c42\u7684\u8fc7\u7a0b\u4e2d\u7684\u64cd\u4f5c\u662f\u5e38\u6570\u7684\uff0c\u56e0\u4e3a\u53ea\u9700\u8981\u7b80\u5355\u7684\u5927\u5c0f\u6bd4\u8f83\u548c\u627e\u5b69\u5b50\uff0c\u52a0\u4e0a\u53f3\u8def\u5f84\u957f\u5ea6\u7684\u9650\u5236\uff0c\u56e0\u6b64\u9012\u5f52\u5411\u4e0b\u7684\u8fc7\u7a0b\u662f\\(O(\\log n)\\)\u7684\u3002\u8fd9\u4e00\u70b9\u6211\u4eec\u53ef\u4ee5\u66f4\u4e25\u8c28\u5730\u5c55\u5f00\uff1a\u5047\u8bbe\\(H_1\\)\u5927\u5c0f\u4e3a\\(N_1\\)\uff0c\\(H_2\\)\u5927\u5c0f\u4e3a\\(N_2\\)\uff0c\u4e24\u8005\u8def\u5f84\u4e4b\u548c\\(\\(O(\\log N_1 + \\log N_2) = O(\\log N_1N_2) = O(\\log \\sqrt{N_1N_2}) = O(\\log(N1 + N2))\\)\\),\u4e0a\u9762\u7684\u63a8\u5bfc\u7528\u5230\u4e86\u57fa\u672c\u4e0d\u7b49\u5f0f \\(a + b \u2a7e 2\\sqrt{ab}\\)\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u4e24\u4e2a\u5806\u53f3\u8def\u5f84\u957f\u5ea6\u4e4b\u548c\u4ecd\u7136\u662f\u4e24\u4e2a\u5806\u5927\u5c0f\u7684\u5bf9\u6570\u7ea7\u522b\uff0c\u56e0\u6b64\u9012\u5f52\u5c42\u6570\u662f\\(O(\\log n)\\)\u7684\u662f\u51c6\u786e\u7684\u3002\u63a5\u4e0b\u6765\u5206\u6790\u9012\u5f52\u8fd4\u56de\u7684\u64cd\u4f5c\uff0c\u4e8b\u5b9e\u4e0a\u6bcf\u4e00\u5c42\u7684\u64cd\u4f5c\u4e5f\u662f\u5e38\u6570\u7684\uff0c\u56e0\u4e3a\u53ea\u9700\u8981\u63a5\u4e0a\u65b0\u7684\u6307\u9488\uff0c\u5224\u65ad\u3001\u4ea4\u6362\u5b50\u6811\u4ee5\u53ca\u66f4\u65b0 Npl\uff0c\u6240\u4ee5\u4e5f\u662f\\(O(\\log n)\\)\u7684\uff0c\u56e0\u6b64\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f \\(O(\\log n)\\)\u7684\u3002</li> </ul>"},{"location":"ADS/ADS4/#_3","title":"\u8fed\u4ee3\u5b9e\u73b0","text":"<p>\u8fed\u4ee3\u4e8b\u5b9e\u4e0a\u5c31\u662f\u4e24\u4e2a\u6307\u9488\u6307\u5411\u672a\u88abMerge\u7684\u5b50\u6811\u7684\u6839\u8282\u70b9\uff0c\u505a\u4e00\u4e2a\u5f52\u5e76\u6392\u5e8f</p>"},{"location":"ADS/ADS4/#skew-heaps","title":"Skew Heaps","text":"<p>Definition</p> <ul> <li>Target : Any M consecutive operations take at most \\(O(M \\log N)\\) time</li> <li>Always swap the left and right children except that the largest of all the nodes on the right paths does not have its children swapped.  No Npl.</li> </ul> <p>Example</p> <p> - \u8be6\u7ec6\u8fc7\u7a0b</p> <p>Difference between skew heap and leftist heap</p> <ul> <li>\u5728base case\u662f\u5904\u7406\\(H\\)\u4e0enull\u8fde\u63a5\u7684\u60c5\u51b5\u65f6\uff0c\u5de6\u5f0f\u5806\u76f4\u63a5\u8fd4\u56de\\(H\\)\u5373\u53ef\uff0c\u4f46\u659c\u5806\u5fc5\u987b\u770b\\(H\\)\u7684\u53f3\u8def\u5f84\uff0c\u6211\u4eec\u8981\u6c42\\(H\\)\u53f3\u8def\u5f84\u4e0a\u9664\u4e86\u6700\u5927\u7ed3\u70b9\u4e4b\u5916\u90fd\u5fc5\u987b\u4ea4\u6362\u5176\u5de6\u53f3\u5b69\u5b50\u3002</li> <li>\u5728\u975ebase case\u65f6\uff0c\u82e5\\(H_1\\)\u7684\u6839\u7ed3\u70b9\u5c0f\u4e8e\\(H_2\\)\uff0c\u5982\u679c\u662f\u5de6\u5f0f\u5806\uff0c\u6211\u4eec\u9700\u8981\u5408\u5e76\\(H_1\\)\u7684\u53f3\u5b50\u6811\u548c H2\u4f5c\u4e3a\\(H_1\\)\u7684\u65b0\u53f3\u5b50\u6811\uff0c\u6700\u540e\u518d\u5224\u65ad\u8fd9\u6837\u662f\u5426\u8fdd\u53cd\u6027\u8d28\u51b3\u5b9a\u662f\u5426\u4ea4\u6362\u5de6\u53f3\u5b69\u5b50\uff0c\u659c\u5806\u76f4\u63a5\u65e0\u8111\u4ea4\u6362\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u6b21\u8fd9\u79cd\u60c5\u51b5\u90fd\u628a\\(H_1\\)\u7684\u5de6\u5b69\u5b50\u6362\u5230\u53f3\u5b69\u5b50\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u628a\u65b0\u5408\u5e76\u7684\u63d2\u5165\u5728\\(H_1\\)\u7684\u5de6\u5b50\u6811\u4e0a\u3002</li> </ul> <p>Note</p> <ul> <li>Skew heaps have the advantage that no extra space is required to maintain path lengths and no tests are required to determine when to swap children.</li> <li>It is an open problem to determine precisely the expected right path length of both leftist and skew heaps.</li> </ul>"},{"location":"ADS/ADS4/#_4","title":"\u644a\u8fd8\u5206\u6790","text":"<ul> <li>\u6211\u4eec\u79f0\u4e00\u4e2a\u7ed3\u70b9 \\(P\\) \u662f\u91cd\u7684\uff08heavy\uff09\uff0c\u5982\u679c\u5b83\u7684\u53f3\u5b50\u6811\u7ed3\u70b9\u4e2a\u6570\u81f3\u5c11\u662f \\(P\\) \u7684\u6240\u6709\u540e\u4ee3\u7684\u4e00\u534a \uff08\u540e\u4ee3\u5305\u62ec \\(P\\) \u81ea\u8eab\uff09\u3002\u53cd\u4e4b\u79f0\u4e3a\u8f7b\u7ed3\u70b9\uff08light node\uff09</li> <li>\u5bf9\u4e8e\u53f3\u8def\u5f84\u4e0a\u53f3 \\(l\\) \u4e2a\u8f7b\u7ed3\u70b9\u7684\u659c\u5806\uff0c\u6574\u4e2a\u659c\u5806\u81f3\u5c11\u6709 \\(2^l \u2212 1\\) \u4e2a\u7ed3\u70b9\uff0c\u8fd9\u610f\u5473\u7740\u4e00\u4e2a \\(n\\) \u4e2a\u7ed3\u70b9\u7684\u659c\u5806\u53f3\u8def\u5f84\u4e0a\u7684\u8f7b\u7ed3\u70b9\u4e2a\u6570\u4e3a \\(O(\\log n)\\)</li> <li>\u82e5\u6211\u4eec\u6709\u4e24\u4e2a\u659c\u5806 \\(H_1\\) \u548c \\(H_2\\)\uff0c\u5b83\u4eec\u5206\u522b\u6709 \\(n_1\\) \u548c \\(n_2\\) \u4e2a\u7ed3\u70b9\uff0c\u5219\u5408\u5e76 \\(H_1\\) \u548c \\(H_2\\) \u7684\u644a\u8fd8\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(\\log n)\\)\uff0c\u5176\u4e2d \\(n = n1 + n2\\)</li> </ul> Proof <ul> <li>\u6211\u4eec\u5b9a\u4e49\u52bf\u51fd\u6570 \\(\u03a6(H_i)\\) \u7b49\u4e8e\u5806 \\(H_i\\) \u7684\u91cd\u7ed3\u70b9\uff08heavy node\uff09\u7684\u4e2a\u6570\uff0c\u5e76\u4ee4 \\(H_3\\) \u4e3a\u5408\u5e76\u540e\u7684\u65b0\u5806.\u6211\u4eec\u8bbe \\(H_i(i = 1, 2)\\) \u7684\u53f3\u8def\u5f84\u4e0a\u7684\u8f7b\u7ed3\u70b9\u6570\u91cf\u4e3a \\(l_i\\)\uff0c\u91cd\u7ed3\u70b9\u6570\u91cf\u4e3a \\(h_i\\)\uff0c\u56e0\u6b64\u771f\u5b9e\u7684\u5408\u5e76\u64cd\u4f5c\u6700\u574f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(c_i = l_1 + l_2 + h_1 + h_2\\)\uff08\u6240\u6709\u64cd\u4f5c\u90fd\u5728\u53f3\u8def\u5f84\u4e0a\u5b8c\u6210\uff09\u3002\u56e0\u6b64\u6839\u636e\u644a\u8fd8\u5206\u6790\u6211\u4eec\u77e5\u9053\u644a\u8fd8\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\hat{c_i} = c_i + \u03a6(H3) \u2212 (\u03a6(H1) + \u03a6(H2))\\)\u4e8b\u5b9e\u4e0a\uff0c\u5728 merge \u524d\u6211\u4eec\u53ef\u4ee5\u8bb0\\(\u03a6(H_1) + \u03a6(H_2) = h_1 + h_2 + h\\)\u5176\u4e2d \\(h\\) \u8868\u793a\u4e0d\u5728\u53f3\u8def\u5f84\u4e0a\u7684\u91cd\u7ed3\u70b9\u4e2a\u6570\u3002\u73b0\u5728\u6211\u4eec\u8981\u8003\u5bdf\u5408\u5e76\u540e\u7684\u60c5\u51b5\uff0c\u4e8b\u5b9e\u4e0a\u6211\u4eec\u6709\u4e24\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u89c2\u5bdf\uff1a</li> </ul> <ol> <li>\u53ea\u6709\u5728 \\(H_1\\) \u548c \\(H_2\\) \u53f3\u8def\u5f84\u4e0a\u7684\u7ed3\u70b9\u624d\u53ef\u80fd\u6539\u53d8\u8f7b\u91cd\u72b6\u6001\uff0c\u8fd9\u662f\u5f88\u663e\u7136\u7684\uff0c\u56e0\u4e3a\u5176\u5b83\u7ed3\u70b9\u5408\u5e76\u524d\u540e\u5b50\u6811\u662f\u5b8c\u5168\u88ab\u590d\u5236\u7684\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u6539\u53d8\u8f7b\u91cd\u72b6\u6001\uff1b</li> <li>\\(H_1\\)\u548c\\(H_2\\)\u53f3\u8def\u5f84\u4e0a\u7684\u91cd\u7ed3\u70b9\u5728\u5408\u5e76\u540e\u4e00\u5b9a\u4f1a\u53d8\u6210\u8f7b\u7ed3\u70b9\uff0c\u8fd9\u662f\u56e0\u4e3a\u53f3\u8def\u5f84\u4e0a\u7ed3\u70b9\u4e00\u5b9a\u4f1a\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\uff0c\u5e76\u4e14\u540e\u7eed\u6240\u6709\u7ed3\u70b9\u4e5f\u90fd\u4f1a\u7ee7\u7eed\u63d2\u5165\u5728\u5de6\u5b50\u6811\u4e0a\uff08\u8fd9\u4e5f\u8868\u660e\u8f7b\u7ed3\u70b9\u4e0d\u4e00\u5b9a\u53d8\u4e3a\u91cd\u7ed3\u70b9\uff09\u3002\u7ed3\u5408\u4ee5\u4e0a\u4e24\u70b9\uff0c\u6211\u4eec\u77e5\u9053\u5408\u5e76\u540e\u539f\u672c\u4e0d\u5728\u53f3\u8def\u5f84\u4e0a\u7684\\(h\\)\u4e2a\u91cd\u7ed3\u70b9\u4ecd\u7136\u662f\u91cd\u7ed3\u70b9\uff0c\u5728\u53f3\u8def\u5f84\u4e0a\u7684\\(h_1 + h_2\\)\u4e2a\u91cd\u7ed3\u70b9\u5168\u90e8\u53d8\u6210\u8f7b\u7ed3\u70b9\uff0c\\(l_1 + l_2\\) \u4e2a\u8f7b\u7ed3\u70b9\u4e0d\u4e00\u5b9a\u90fd\u53d8\u91cd\uff0c\u56e0\u6b64\u5408\u5e76\u540e\u6211\u4eec\u6709\\(\u03a6(H_3) \u2a7d l_1 + l_2 + h\\),\u4ee3\u5165\u6570\u636e\u8ba1\u7b97\u53ef\u5f97\\(c_i \u2a7d (l_1 + l_2 + h_1 + h_2) + (l_1 + l_2 + h) \u2212 (h_1 + h_2 + h) = 2(l_1 + l_2)\\).\u6839\u636e\u524d\u9762\u7684\u5f15\u7406\uff0c\\(l_1 + l_2 = O(\\log n_1 + \\log n_2) = O(\\log(n_1 + n_2)) = O(\\log n)\\)\uff08\u8fd9\u91cc\u7684\u7b49\u53f7\u4e4b\u524d\u6709\u5b8c\u5168\u4e00\u6837\u7684\u8bf4\u660e\u8fc7\uff09\uff0c\u5e76\u4e14\u6ce8\u610f\u5230\u521d\u59cb\uff08\u7a7a\u5806\uff09\u52bf\u51fd\u6570\u4e00\u5b9a\u4e3a \\(0\\)\u3002\u4e14\u4e4b\u540e\u603b\u662f\u975e\u8d1f\u7684\uff0c\u6240\u4ee5\u8fd9\u4e00\u52bf\u51fd\u6570\u5b9a\u4e49\u6ee1\u8db3\u8981\u6c42\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u8bc1\u660e\u4e5f\u5c31\u5b8c\u6210\u4e86\u3002</li> </ol> <p>\u600e\u4e48\u611f\u89c9yy\u4e0a\u8bfe\u8bb2\u590d\u6742\u4e86</p>"},{"location":"ADS/ADS5/","title":"chapter 5 Binomial Queue","text":""},{"location":"ADS/ADS6/","title":"ADS6","text":""},{"location":"ADS/ADS6/#counter-true","title":"counter \uff1atrue","text":""},{"location":"ADS/ADS6/#chapter-6-backtracking","title":"Chapter 6 Backtracking","text":""},{"location":"ADS/ADS6/#introduction","title":"Introduction","text":"<p>\u4e00\u4e2a\u6bd4\u8f83naive\u7684\u505a\u6cd5</p> <p>A sure-fire way to find the answer to a problem is to make a list of all candidate answers, examine each, and following the examination of all or some of the candidates, declare the identified answer.</p> <p>pruning \u526a\u679d</p> <p>Backtracking enables us to eliminate the explicit examination of a large subset of the candidates while still guaranteeing that the answer will be found if the algorithm is run to termination.\u56de\u6eaf\u4f7f\u6211\u4eec\u80fd\u591f\u6d88\u9664\u5bf9\u5927\u91cf\u5019\u9009\u9879\u7684\u663e\u5f0f\u68c0\u67e5\uff0c\u540c\u65f6\u4ecd\u7136\u4fdd\u8bc1\u5728\u7b97\u6cd5\u8fd0\u884c\u5230\u7ec8\u6b62\u65f6\u4ecd\u80fd\u627e\u5230\u7b54\u6848\u3002</p>"},{"location":"ADS/ADS6/#the-turnpike-reconstruction-problem","title":"The Turnpike Reconstruction Problem","text":"<p>\u6536\u8d39\u7ad9\u91cd\u5efa\u95ee\u9898</p>"},{"location":"ADS/ADS6/#stick-problem","title":"Stick Problem","text":""},{"location":"ADS/HW/","title":"Problem","text":""},{"location":"ADS/HW/#week1","title":"Week1","text":"<p>Question</p> <p>If the depth of an AVL tree is 6 (the depth of an empty tree is defined to be -1), then the minimum possible number of nodes in this tree is:</p> <p>Answer</p> <ul> <li>33</li> <li>\\(n_h = F_{h+3} - 1, for \\quad h \\leq -1\\)</li> <li>\u6590\u6ce2\u90a3\u5951\u516c\u5f0f\u4e0d\u4e00\u5b9a\u8981\u8bb0\u5fc6\uff0c\u6570\u503c\u4e0d\u5927\u53ef\u4ee5\u73b0\u63a8</li> </ul> <p>Question</p> <p>Insert 2, 1, 4, 5, 9, 3, 6, 7 into an initially empty AVL tree. Which one of the following statements is FALSE?</p> <p>A.4 is the root B.3 and 7 are siblings C.2 and 6 are siblings D.9 is the parent of 7</p> <p>Answer</p> <ul> <li>B</li> </ul> <p>Question</p> <p>When doing amortized analysis, which one of the following statements is FALSE?</p> <p>A.Aggregate analysis shows that for all n, a sequence of n operations takes worst-case time \\(T(n)\\) in total. Then the amortized cost per operation is therefore \\(T(n)/n\\)</p> <p>B.For potential method, a good potential function should always assume its maximum at the start of the sequence</p> <p>C.For accounting method, when an operation's amortized cost exceeds its actual cost, we save the difference as credit to pay for later operations whose amortized cost is less than their actual cost</p> <p>D.The difference between aggregate analysis and accounting method is that the later one assumes that the amortized costs of the operations may differ from each other</p> <p>Answer</p> <ul> <li>B : \u5e94\u8be5\u662fminimum\uff0c\u521d\u59cb\u52bf\u80fd\u6700\u4f4e</li> </ul> <p>Question</p> <p>Consider the following buffer management problem. Initially the buffer size (the number of blocks) is one. Each block can accommodate exactly one item. As soon as a new item arrives, check if there is an available block. If yes, put the item into the block, induced a cost of one. Otherwise, the buffer size is doubled, and then the item is able to put into. Moreover, the old items have to be moved into the new buffer so it costs \\(k+1\\) to make this insertion, where \\(k\\) is the number of old items. Clearly, if there are \\(N\\) items, the worst-case cost for one insertion can be \\(\u03a9(N)\\). To show that the average cost is \\(O(1)\\), let us turn to the amortized analysis. To simplify the problem, assume that the buffer is full after all the \\(N\\) items are placed. Which of the following potential functions works?</p> <p>A.The number of items currently in the buffer</p> <p>B.The opposite number of items currently in the buffer</p> <p>C.The number of available blocks currently in the buffer</p> <p>D.The opposite number of available blocks in the buffer</p> <p>Answer</p> <p>D </p> <p>Question</p> <p>For the result of accessing the keys 3, 9, 1, 5 in order in the splay tree in the following figure, which one of the following statements is FALSE? </p> <p>A.5 is the root</p> <p>B.1 and 9 are siblings</p> <p>C.6 and 10 are siblings</p> <p>D.3 is the parent of 4</p> <p>Answer</p> <ul> <li>D</li> </ul>"},{"location":"ADS/HW/#week-2","title":"Week 2","text":"<p>Question</p> <p>In the red-black tree that results after successively inserting the keys 41; 38; 31; 12; 19; 8 into an initially empty red-black tree, which one of the following statements is FALSE?</p> <p>A.38 is the root B.19 and 41 are siblings, and they are both red C.12 and 31 are siblings, and they are both black D.8 is red</p> <p>Success</p> <ul> <li>\u6309\u7167\u7ea2\u9ed1\u6811\u89c4\u5219\u63d2\u5165\u5373\u53ef</li> </ul> <p>Question</p> <p>After deleting 15 from the red-black tree given in the figure, which one of the following statements must be FALSE?</p> <p>A.11 is the parent of 17, and 11 is black B.17 is the parent of 11, and 11 is red C.11 is the parent of 17, and 11 is red D.17 is the parent of 11, and 17 is black</p> <p>Success</p> <ul> <li>\u9876\u4e0a\u53bb\u7684\u90a3\u4e2a\u8282\u70b9\u8981\u53d8\u6210\u9ed1\u8272, \u4f46\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4ea4\u6362\u952e\u503c\u4e0e\u6539\u53d8\u989c\u8272\u662f\u5206\u4e24\u6b65\u8fdb\u884c\u7684</li> </ul>"},{"location":"ADS/HW/#week-3","title":"Week 3","text":"<p>Question</p> <p>While accessing a term, hashing is faster than search trees.</p> <p>Success</p> <ul> <li>T</li> <li>hash\u7684\u590d\u6742\u5ea6\u4e3a\\(O(1)\\)\uff0c\u4f7f\u7528\u641c\u7d22\u6811\u5219\u662f\\(O(\\log n)\\)\u7684\u3002\u4f46\u662fhash\u8868\u7684\u50a8\u5b58\u4e0d\u7075\u6d3b\u6709\u7f3a\u70b9\u3002</li> </ul> <p>Question</p> <p>In distributed indexing, document-partitioned strategy is to store on each node all the documents that contain the terms in a certain range.</p> <p>Success</p> <ul> <li>F</li> <li>\u78c1\u76d8\u5206\u533a\u7d22\u5f15\u6280\u672f\uff0c\u6bcf\u4e2a\u8282\u70b9\u5b58\u653e\u90e8\u5206\u7d22\u5f15\uff0c\u4e0d\u662f\u6240\u6709\u7684</li> </ul> <p>Question</p> <p>When evaluating the performance of data retrieval, it is important to measure the relevancy of the answer set.</p> <p>Success</p> <ul> <li>F</li> <li>\u53ec\u56de\u7387\u4e0e\u76f8\u5173\u6027\u65e0\u5173</li> </ul> <p>Question</p> <p>Precision is more important than recall when evaluating the explosive detection in airport security.</p> <p>Success</p> <ul> <li>F</li> <li>\u533b\u7597\u4ee5\u53ca\u5b89\u5168\u8ffd\u6c42\u5168\u90e8\u53d1\u73b0\uff0c\u53ec\u56de\u7387\u66f4\u91cd\u8981\u3002</li> </ul> <p>Question</p> <p>While accessing a term by hashing in an inverted file index, range searches are expensive. </p> <p>Success</p> <ul> <li>T</li> <li>\u8fd9\u4e2a\u662f\u4e0eB+Tree\u8fdb\u884c\u6bd4\u8f83</li> </ul> <p>Question</p> <p>When measuring the relevancy of the answer set, if the precision is high but the recall is low, it means that: A.most of the relevant documents are retrieved, but too many irrelevant documents are returned as well B.most of the retrieved documents are relevant, but still a lot of relevant documents are missed C.most of the relevant documents are retrieved, but the benchmark set is not large enough D.most of the retrieved documents are relevant, but the benchmark set is not large enough</p> <p>Success</p> <ul> <li>B</li> </ul> <p>Question</p> <p>Which of the following is NOT concerned for measuring a search engine? A.How fast does it index B.How fast does it search C.How friendly is the interface D.How relevant is the answer set</p> <p>Success</p> <ul> <li>C</li> </ul> <p>Question</p> <p>There are 28000 documents in the database. The statistic data for one query are shown in the following table. The recall is: __</p> Relevant Irrelevant Retrieved 4000 12000 Not Retrieved 8000 4000 <p>A.14% B.25% C.33% D.50%</p> <p>Success</p> <ul> <li>C</li> <li>\u5957\u516c\u5f0f</li> </ul>"},{"location":"ADS/HW/#week-4","title":"Week 4","text":"<p>Question</p> <p>The result of inserting keys \\(1\\) to \\(2^k\u22121\\) for any \\(k&gt;4\\) in order into an initially empty skew heap is always a full binary tree.</p> <p>Success</p> <ul> <li>T</li> </ul> <p>Question</p> <p>The right path of a skew heap can be arbitrarily long.</p> <p>Success</p> <ul> <li>T</li> </ul> <p>Question</p> <p>Merge the two leftist heaps in the following figure. Which one of the following statements is FALSE?</p> <p></p> <p>A.2 is the root with 11 being its right child B.the depths of 9 and 12 are the same C.21 is the deepest node with 11 being its parent D.the null path length of 4 is less than that of 2</p> <p>Success</p> <ul> <li>D</li> </ul> <p>Question</p> <p>We can perform BuildHeap for leftist heaps by considering each element as a one-node leftist heap, placing all these heaps on a queue, and performing the following step: Until only one heap is on the queue, dequeue two heaps, merge them, and enqueue the result. Which one of the following statements is FALSE?</p> <p>A. in the \\(k\\)-th run, \\(\u2308N/2^k\u2309\\) leftist heaps are formed, each contains \\(2^k\\) nodes B.the worst case is when \\(N=2^K\\) for some integer \\(K\\) C.the time complexity \\(T(N)=O(\\frac{N}{2}\\log 2^0 + \\frac{N}{2^2}\\log 2^1 + \\frac{N}{2^3} \\log 2^2 +\u22ef+ \\frac{N}{2^K}\\log 2 ^{K\u22121})\\) for some integer \\(K\\) so that \\(N=2^K\\) D.the worst case time complexity of this algorithm is \\(\u0398(N\\log N)\\)</p> <p>Success</p> <ul> <li>D</li> <li>\\(N = 2^k\\)\u662f\u591a\u8dd1\u4e00\u8f6e\u7684\u4e34\u754c\u70b9\u3002</li> </ul> <p>Question</p> <p>Insert keys 1 to 15 in order into an initially empty skew heap. Which one of the following statements is FALSE?</p> <p>A.the resulting tree is a complete binary tree B.there are 6 leaf nodes C.6 is the left child of 2 D.11 is the right child of 7</p> <p>Success</p> <ul> <li>B</li> </ul> <p>Question</p> <p>Merge the two skew heaps in the following figure. Which one of the following statements is FALSE? </p> <p>A.15 is the right child of 8 B.14 is the right child of 6 C.1 is the root D.9 is the right child of 3</p> <p>Success</p> <ul> <li>A</li> </ul> <p>\u7a0b\u5e8f\u586b\u7a7a</p> <pre><code>    PriorityQueue Merge( PriorityQueue H1, PriorityQueue H2 ){ \n        if (H1==NULL) return H2;\n        if (H2==NULL) return H1;\n        if (\n        H1-&gt;Element &gt; H2-&gt;Element\n        )\n            swap(H1, H2);  //swap H1 and H2\n        if ( H1-&gt;Left == NULL )\n            H1-&gt;Left = H2;\n        else {\n            H1-&gt;Right = Merge( H1-&gt;Right, H2 );\n            if ( H1-&gt;Left-&gt;Npl &lt; H1-&gt;Right-&gt;Npl )\n            SwapChildren( H1 );  //swap the left child and right child of H1                \n            H1-&gt;Npl = H1-&gt;Right-&gt;Npl+1;\n        }\n        return H1;\n    }\n</code></pre>"},{"location":"ADS/HW/#week-5","title":"Week 5","text":"<p>Question</p> <p>To implement a binomial queue, the subtrees of a binomial tree are linked in increasing sizes.</p> <p>Success</p> <ul> <li>F</li> <li>decreasing order</li> </ul> <p>Question</p> <p>To implement a binomial queue, left-child-next-sibling structure is used to represent each binomial tree.</p> <p>Success</p> <ul> <li>T</li> </ul> <p>Question</p> <p>Which of the following binomial trees can represent a binomial queue of size 42? </p> <p>Success</p> <ul> <li>\\(2^1 + 2^3 + 2^5 = 42\\)</li> </ul> <p>Question</p> <p>For a binomial queue, __ takes a constant time on average.</p> <p>A.merging B.find-max C.delete-min D.insertion</p> <p>Success</p> <ul> <li>D</li> </ul> <p>Question</p> <p></p> <p>Success</p> <ul> <li>\u5982\u679c2\u662f4\u7684parent\uff0c\u5219\u8bf4\u660e\\(H_1\\)\u7684\\(B_2\\)\u672a\u53c2\u4e0e\u8fd0\u7b97</li> </ul> <p>Question</p> <p></p> <p>Question</p> <pre><code>        BinTree BinQueue_Find( BinQueue H, ElementType X )\n    {\n        BinTree T, result = NULL;\n        int i, j; \n\n        for( i=0, j=1; j&lt;=H-&gt;CurrentSize; i++, j*=2) {  /* for each tree in H */\n            T= H-&gt;TheTrees[i];\n            if ( T &amp;&amp; X |&gt;=T-&gt;Element| ){  /* if need to search inside this tree */\n                result = Recur_Find(T, X);\n                if ( result != NULL ) return result;\n            } \n        }\n        return result;\n    }\n\n    BinTree Recur_Find( BinTree T, ElementType X )\n    {\n        BinTree result = NULL;\n        if ( X==T-&gt;Element ) return T;\n        if ( T-&gt;LeftChild!=NULL ){\n            result = Recur_Find(T-&gt;LeftChild, X);\n            if ( result!=NULL ) return result;\n        } \n        if ( |T-&gt;NextSibling| )\n            result = Recur_Find(T-&gt;NextSibling, X);\n        return result;\n    }\n</code></pre>"},{"location":"ADS/HW/#week-6","title":"Week 6","text":"<p>Question</p> <p>In the Tic-tac-toe game, a \"goodness\" function of a position is defined as \\(f(P)=W_{computer}\u2212W_{human}\\)where W is the number of potential wins at position P. In the following figure, <code>O</code> represents the computer and X the human. What is the goodness of the position of the figure?</p> <p></p> <p>A. -1 B. 0 C. 4 D. 5</p> X O X X X X O X X O O O O X X O O O <p>Success</p> <ul> <li>B</li> <li>\u628a\u7a7a\u7684\u90fd\u586b\u4e0a\uff0c\u770b\u6709\u51e0\u79cd\u8d62\u6cd5</li> </ul> <p>Question</p> <p>Given the following game tree, the red node will be pruned with \\(\u03b1-\u03b2\\) pruning algorithm if and only if __.</p> <p></p>"},{"location":"ADS/HW/#week-7","title":"Week 7","text":"<p>Question</p> <p>When solving a problem with input size \\(N\\) by divide and conquer, if at each stage the problem is divided into \\(8\\) sub-problems of equal size \\(N/3\\), and the conquer step takes \\(O(N^ 2 \\log N)\\) to form the solution from the sub-solutions, then the overall time complexity is __</p> <p>Success</p> <ul> <li>\\(O(N^2 \\log N)\\)</li> </ul>"},{"location":"ADS/HW/#week-8","title":"Week 8","text":""},{"location":"ADS/HW/#minterm-summary","title":"Minterm summary","text":"<p>Question</p> <p></p> <p>Success</p> <ul> <li>\u5e94\u8be5\u662f\\(O(\\log N)\\)</li> </ul> <p>Question</p> <p></p> <p>Success</p> <ul> <li>\u8fd8\u771f\u6709</li> </ul> <p>Question</p> <p>\u4e00\u9053\u8003\u5bdf\u5bf9ppt\u719f\u6089\u7a0b\u5ea6\u7684\u7a0b\u5e8f\u586b\u7a7a</p> <pre><code>    BinQueue DeleteRoot( BinQueue H, int Ind )\n    {\n        BinTree OldRoot, SubTree;\n        BinQueue NewBinQ;\n        int i;\n\n        OldRoot = H-&gt;TheTrees[Ind];\n        SubTree = OldRoot-&gt;LeftChild;\n        free(OldRoot);\n        NewBinQ = Initialize();\n        NewBinQ-&gt;CurrentSize = |2^Ind - 1| ;\n        for (|i = Ind-1; i &gt;= 0; i--|) {\n            NewBinQ-&gt;TheTrees[i] = SubTree;\n            SubTree = SubTree-&gt;NextSibling;\n            NewBinQ-&gt;TheTrees[i]-&gt;NextSibling = NULL;\n        }\n        return NewBinQ;\n    }\n</code></pre> <p>Question</p> <pre><code>    static int order = DEFAULT_ORDER;\n    typedef struct BpTreeNode BpTreeNode;\n    struct BpTreeNode {\n        BpTreeNode** childrens;  /* Pointers to childrens. This field is not used by leaf nodes. */\n        ElementType* keys;\n        BpTreeNode* parent;\n        bool isLeaf;  /* 1 if this node is a leaf, or 0 if not */\n        int numKeys;  /* This field is used to keep track of the number of valid keys. \n        In an internal node, the number of valid pointers is always numKeys + 1. */\n    };\n</code></pre> <pre><code>bool FindKey(BpTreeNode * const root, ElementType key){\n    if (root == NULL) {\n            return false;\n    }\n    int i = 0;\n    BpTreeNode * node = root;\n    while (|!node-&gt;isLeaf|) {\n        i = 0;\n        while (i &lt; node-&gt;numKeys) {\n            if (|key&gt;=node-&gt;keys[i]|) i++;\n            else break;\n        }\n        node = node-&gt;childrens[i];\n    }\n    for(i = 0; i &lt; node-&gt;numKeys; i++){\n        if(node-&gt;keys[i] == key)\n            return true;\n    }\n    return false;\n}\n</code></pre> <p>```</p> <p>Question</p> <p></p> <p>Question</p> <p> </p> <p>\u200b    </p>"},{"location":"CO/","title":"\u8ba1\u7b97\u673a\u7ec4\u6210","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u8ba1\u7b97\u673a\u7ec4\u6210\u201d \u8bfe\u7a0b\u53ca\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <ul> <li>Prof:\u5218\u6d77\u98ce</li> <li>TA\uff1a\u79e6\u5609\u4fca/\u90ed\u5bb6\u8c6a</li> </ul> <p>Success</p> <ul> <li> Computer Abstractions and Technology</li> <li> Arithmetic for Computer</li> <li> Instructions : Language of the Computer </li> </ul> <p>Lab</p> Lab \u5185\u5bb9 Lab00:Vivado\u7684\u4ecb\u7ecd\u4e0e\u4f7f\u7528 Vivado\u4ecb\u7ecd\u4e0e\u4f7f\u7528\uff0cMUX\u6a21\u5757\u5c01\u88c5 Lab01:Warmup ALU\u548cRegfile\u8bbe\u8ba1 Lab02:CPU\u5b9e\u9a8c\u73af\u5883\u642d\u5efa IP\u6838\u96c6\u6210SOC\u8bbe\u8ba1\uff0c\u5b8c\u6210CPU\u6d4b\u8bd5\u73af\u5883\u642d\u5efa Lab03:\u590d\u6742\u64cd\u4f5c\u5b9e\u73b0 \u4e58\u9664\u6cd5\u3001\u6d6e\u70b9\u52a0\u6cd5\u5b9e\u73b0 Lab04:\u5355\u5468\u671fCPU\u8bbe\u8ba1 CPU\u6838\u96c6\u6210\u7b49 Lab05:\u6d41\u6c34\u7ebfCPU\u8bbe\u8ba1 \u6d41\u6c34\u7ebf\u5904\u7406\u5668\u96c6\u6210\u7b49 Lab06:Data Cache \u6570\u636e\u9ad8\u901f\u7f13\u5b58\u7684\u8bbe\u8ba1"},{"location":"CO/CO1/","title":"Chapter 1 Computer Abstractions and Technology","text":"<p>Abstract</p> <ul> <li>8 Ideas in Computer Architecture</li> <li>Performance</li> <li>Incredible performance improvement</li> </ul>"},{"location":"CO/CO1/#8-ideas-in-computer-architecture","title":"8 Ideas in Computer Architecture","text":"<ul> <li>Moore's Law The integrate circuit resource double every 18-24 months.</li> <li>User abstraction to simplify design(\u4f7f\u7528\u62bd\u8c61\u7b80\u5316\u8bbe\u8ba1)<ul> <li>Lower-level details are hidden to higher levels</li> <li>Instruction set architecture -- the interface between HW and SW.</li> </ul> </li> <li>Make the common cases fast(\u52a0\u901f\u7ecf\u5e38\u6027\u4e8b\u4ef6)</li> <li>Performance via Parallelism(\u901a\u8fc7\u5e76\u884c\u63d0\u9ad8\u6027\u80fd)</li> <li>Performance via Pipelining (\u901a\u8fc7\u6d41\u6c34\u7ebf\u63d0\u9ad8\u6027\u80fd)</li> <li>Performance via Prediction(\u901a\u8fc7\u9884\u6d4b\u63d0\u9ad8\u6027\u80fd)</li> <li>Hierarchy of memory(\u5b58\u50a8\u5c42\u6b21)</li> <li>Dependability via redundancy(\u901a\u8fc7\u5197\u4f59\u63d0\u9ad8\u53ef\u9760\u6027)</li> </ul>"},{"location":"CO/CO1/#performance","title":"Performance(\u6027\u80fd)","text":"<ul> <li>Response time\uff08\u54cd\u5e94\u65f6\u95f4\uff09: How long it takes to do a task. (\u4e2a\u4f53\u7528\u6237\u5728\u610f) </li> <li>Throughput (\u541e\u5410\u91cf): Total work done per unit time.  \uff08\u670d\u52a1\u5668\u91cd\u89c6)</li> </ul> <p>Define \\(Performance = \\dfrac{1}{Execution\\ Time}\\) </p>"},{"location":"CO/CO1/#execution-time","title":"Execution time(\u6267\u884c\u65f6\u95f4)","text":"<ul> <li> <p>Elapsed Time (\u548c\u54cd\u5e94\u65f6\u95f4\u4e00\u56de\u4e8b) Total response time, including all aspects e.g. Processing, I/O, OS overhead, idle time.  </p> </li> <li> <p>CPU Time (CPU \u6267\u884c\u65f6\u95f4)</p> <ul> <li>\u7528\u6237CPU\u65f6\u95f4(user CPU time)</li> <li>\u7cfb\u7edfCPU\u65f6\u95f4(system CPU time)</li> <li>\u4e3a\u4e86\u4fdd\u6301\u4e00\u81f4\uff0c\u6211\u4eec\u4fdd\u6301\u533a\u5206\u57fa\u4e8e\u65f6\u95f4\u7684\u6027\u80fd\u548c\u57fa\u4e8eCPU\u6267\u884c\u65f6\u95f4\u7684\u6027\u80fd\uff0c\u524d\u8005\u53eb\u505a\u7cfb\u7edf\u6027\u80fd(system performance),\u540e\u8005\u53eb\u505aCPU\u6027\u80fd(CPU performance).</li> <li>Discounts I/O time, other jobs\u2019 shares  </li> <li>\u8fd9\u91cc\u6211\u4eec\u53ea\u8003\u8651CPU\u65f6\u95f4</li> </ul> </li> </ul>"},{"location":"CO/CO1/#cpu-clockingcpu","title":"CPU Clocking(CPU \u65f6\u949f)","text":"<ul> <li>Clock period: duration of a clock cycle.(\u5468\u671f\u957f\u5ea6) \u7528\u65f6\u949f\u5468\u671f\u4ee3\u66ff\u5177\u4f53\u7684\u79d2\u6570\u3002 </li> <li>Clock frequency(rate): cycles per second. (\u5468\u671f\u9891\u7387)</li> </ul> <p>CPI</p> <ul> <li>\u6307\u4ee4\u5e73\u5747\u65f6\u949f\u5468\u671f\u6570(clock cycle per instruction)\u8868\u793a\u6267\u884c\u6bcf\u6761\u6307\u4ee4\u6240\u9700\u7684\u65f6\u949f\u5468\u671f\u5e73\u5747\u6570\uff0c\u7f29\u5199\u4e3aCPI\u3002</li> <li>CPI is determined by CPU hardware.  </li> <li>\u5982\u679c\u4e0d\u540c\u6307\u4ee4\u6709\u4e0d\u540c\u7684 CPI, \u6211\u4eec\u53ef\u4ee5\u7528 Average CPI. </li> </ul> \\[ \\begin{align*}  CPU\\ Time &amp;= CPU\\ Clock\\ Cycles \\times Clock\\ Cycle\\ Time \\\\ &amp;=\\dfrac{ CPU\\ Clock\\ Cycles}{Clock\\ Rates} \\end{align*} \\] <p>Performance improved by * Reducing number of clock cycles * Increasing clock rate * Hardware designer must often trade off clock rate against cycle count</p> \\[ \\begin{align*} Clock\\ Cycles &amp;= Instruction\\ Count \\times Cycles\\ per\\ Instruction(CPI)\\\\ CPU\\ Time &amp; = Instruction\\ Count \\times CPI\\times CPI\\ Cycle\\ Time\\\\ &amp; = \\dfrac{Instruction\\ Count \\times CPI}{Clock\\ Rate} \\end{align*} \\] <p>\u7efc\u4e0a, \\(CPU\\ Time = \\dfrac{Instructions}{Program}\\times \\dfrac{Clock\\ Cycles}{Instruction}\\times \\dfrac{Seconds}{Clock Cycle}\\) </p> <p>Performance depends on  </p> <ul> <li>Algorithm: affects IC, possibly CPI</li> <li>Programming language: affects IC, CPI</li> <li>Compiler: affects IC, CPI</li> <li>Instruction set architecture \uff1aIC\uff0cCPI, \u65f6\u949f\u9891\u7387</li> </ul>"},{"location":"CO/CO1/#incredible-performance-improvement","title":"Incredible performance improvement","text":""},{"location":"CO/CO1/#uniprocessor","title":"Uniprocessor","text":"<p>Three Walls</p> <ul> <li>Power Wall \\(Power = Capactive\\ load \\times Voltage^2 \\times Frequency\\) </li> </ul> Example <p></p> <p>\u4e3b\u9891\u63d0\u9ad8\u4e86\u5f88\u591a\uff0c\u4f46\u529f\u8017\u5e76\u6ca1\u6709\u5f97\u5230\u8fd9\u4e48\u591a\u7684\u63d0\u5347\uff0c\u56e0\u4e3a\u6211\u4eec\u964d\u4f4e\u4e86\u5de5\u4f5c\u7535\u538b (5V-1V) \u73b0\u5728\u5de5\u4f5c\u7535\u538b\u4e0d\u80fd\u518d\u964d\u4f4e\u4e86\uff08\u5426\u5219\u6cc4\u6f0f\u7535\u6d41\u5360\u6bd4\u592a\u5927\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u80fd\u518d\u63d0\u9ad8\u529f\u7387\u4e86\u3002</p> <ul> <li>Memory Wall Memory \u7684\u6027\u80fd\u589e\u957f\u4e0d\u5982 CPU \u7684\u6027\u80fd\u589e\u957f\uff0c\u5927\u90e8\u5206\u65f6\u95f4\u82b1\u5728\u8bfb\u5199\u5185\u5b58\u4e86\uff0c\u5f71\u54cd\u6574\u4f53\u6027\u80fd\u3002\u76ee\u524d\u4f7f\u7528\u591a\u7ea7Cache</li> <li>ITP Wall difficulty to find enough parallelism in the instructions stream of a single process to keep higher performance processor cores busy. \u6307\u4ee4\u96c6\u5e76\u884c\u7a0b\u5ea6</li> </ul>"},{"location":"CO/CO1/#multiprocessors","title":"Multiprocessors","text":"<p>requires explicitly parallel programming.  </p> <p>Amdahl's Law</p> <p>Improve an aspect of a computer and expecting improvement in overall performance.  \\(T_{\\textbf{improved}}=\\dfrac{T_{\\textbf{affected}}}{\\textbf{improvement factor}}+T_{\\textbf{unaffected}}\\). </p> Example <p></p> <p>Corollary: make the common case fast.  </p> <ul> <li>Low Power Not at Idle.\u673a\u5668\u5728\u6ca1\u6709\u5de5\u4f5c\u65f6\u4e5f\u6709\u529f\u8017\u635f\u5931\u3002</li> <li> <p>MIPS as a Performance Metric</p> <ul> <li>MIPS: Millions of Instructions Per Second  </li> <li>\u8fd9\u4e2a\u53c2\u6570\u9700\u8981\u5728\u5176\u4ed6\u53c2\u6570\u4e00\u81f4\u65f6\uff0c\u624d\u6709\u6bd4\u8f83\u610f\u4e49\u3002\u4e0d\u540c\u7684 ISA \u4e4b\u95f4\u4e0d\u80fd\u4ec5\u51ed MIPS \u6bd4\u8f83\u3002</li> </ul> </li> </ul> <p>SPEC Power Benchmark</p> <ul> <li>Power consumption of server at different workload levels<ul> <li>Performance: ssj_ops/sec</li> <li>Power: Watts (Joules/sec)</li> </ul> </li> <li>Overall ssj_ops per Watt = \\(\\frac{\\sum\\limits_{i=0}^{10}{ssj\\_ops}_i}{\\sum\\limits_{i=0}^{10}{power}_i}\\)</li> </ul>"},{"location":"CO/CO2/","title":"chapter 2 Arithmetic for Computer","text":"<p>Quote</p> <p>\u672c\u5468\u8ba1\u7ec4\u662f\u5bf9\u7740HobbitQia\u7684\u7b14\u8bb0\u672c\u548c\u9a6c\u5fb7\u8001\u5e08\u7684\u667a\u4e91\u81ea\u5df1\u8865\u7684XD</p> <p>Abstract</p> <ul> <li>Introduction</li> <li>Signed and Unsigned Numbers-Possible Representations</li> <li>Arithmetic--Addition &amp; subtraction and ALU</li> <li>Multiplication</li> <li>Division</li> <li>Floating point numbers</li> </ul> <p>Warning</p> <p>\u672c\u5468\u8ba1\u7ec4\u6d89\u53ca\u5230\u4e86\u8ba1\u903b\u4e2d\u7684ALU\uff0cCLA\u7b49\u6982\u5ff5</p>"},{"location":"CO/CO2/#introduction","title":"Introduction","text":"<p>Instructions can be divided into 3 categories</p> <ul> <li>memory-reference instructions e.g. <code>lw, sw</code> \u9700\u8981 ALU \u8ba1\u7b97\u5185\u5b58\u5730\u5740</li> <li>arithmetic-logical instructions e.g. <code>add, sub, and, or, xor, slt</code> \u9700\u8981 ALU \u8fdb\u884c\u8ba1\u7b97</li> <li>control flow instructions e.g. <code>beq, bne, jal</code> \u9700\u8981 ALU \u8fdb\u884c\u6761\u4ef6\u5224\u65ad</li> </ul>"},{"location":"CO/CO2/#signed-number-formats","title":"Signed Number Formats","text":"<ul> <li>Sign and magnitude</li> <li>2's Complement</li> <li>1's Complement</li> <li> <p>Biased notation  </p> <p>Why we need biased notation</p> <p> </p> <p>\u4e0a\u56fe\u662f 32 \u4f4d\u7684\u4e8c\u8fdb\u5236\u8865\u7801\u8868\u793a\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5de6\u4fa7\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u5982\u679c\u770b\u4f5c\u65e0\u7b26\u53f7\u6570\uff0c\u90a3\u4ed6\u4eec\u662f\u4ece\u5c0f\u5230\u5927\u6392\u5217\u7684\uff1b\u4f46\u53f3\u4fa7\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u6574\u6570\u786e\u5b9e\u5206\u6bb5\u5355\u589e\u7684\u3002 \u6211\u4eec\u5e0c\u671b\u6709\u4e00\u79cd\u8fd9\u6837\u7684\u8868\u793a\uff0c\u80fd\u591f\u8ba9\u53f3\u4fa7\u7684\u5bf9\u5e94\u7684\u503c\u4e5f\u5355\u8c03\u9012\u589e\u3002 \u4e00\u4e2a\u60f3\u6cd5\u662f\u5bf9\u53f3\u4fa7\u6570\u52a0\u4e0a \\(2^{31}\\), \u76f8\u5f53\u4e8e\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u4e0b\u6700\u9ad8\u4f4d\u7ffb\u8f6c\u3002  </p> <p>\\([X]_b = 2^n + X\\)  \u4ece\u4e8c\u8fdb\u5236\u8865\u7801\u5230\u79fb\u7801\uff0c\u53ea\u9700\u8981\u7ffb\u8f6c\u7b26\u53f7\u4f4d\u5373\u53ef\u3002</p> </li> </ul>"},{"location":"CO/CO2/#overflow","title":"Overflow","text":"<p>\u51fa\u73b0Overflow\u65f6\u5019\uff0c\u8bb0\u5f55\u5f53\u524d\u6307\u4ee4\u5730\u5740\uff0c\u7136\u540e\u8df3\u8f6c\u4e13\u95e8\u5904\u7406\u5f02\u5e38\u6307\u4ee4\u7684\u5730\u65b9</p> <ul> <li>The sum of two numbers can exceed any representation</li> <li>The difference of two numbers can exceed any representation</li> <li>2's complement:Numbers change sign and size</li> </ul> <p>Example</p> <p> </p> <p></p>"},{"location":"CO/CO2/#reaction-of-overflow","title":"Reaction of Overflow","text":"<ul> <li>An exception (interrupt) occurs<ul> <li>Control jumps to predefined address for exception</li> <li>Interrupted address is saved for possible resumption</li> </ul> </li> <li>Signaling to application (Ada, Fortran) </li> <li>Ignore, don't always want to detect overflow</li> <li>note: <code>sltu, sltiu</code> for unsigned comparisons</li> </ul>"},{"location":"CO/CO2/#overflow-process","title":"Overflow process","text":"<ul> <li>Hardware detection in the ALU<ul> <li>Generation of an exception (interrupt)</li> </ul> </li> <li>Save the instruction address (not PC) in special register SEPC</li> <li>Jump to specific routine in OS<ul> <li>Correct &amp; return to program</li> <li>Return to program with error code</li> <li>Abort program</li> </ul> </li> </ul>"},{"location":"CO/CO2/#logical-operation","title":"Logical Operation","text":""},{"location":"CO/CO2/#logical-operations","title":"Logical operations","text":"<ul> <li>Logical shift operation</li> <li>right (srl)</li> <li>left (sll)  </li> </ul>"},{"location":"CO/CO2/#the-machine-instruction-for-the-instruction","title":"The machine instruction for the instruction","text":"<ul> <li>slli x11, x9, 3 </li> </ul>"},{"location":"CO/CO2/#constructing-an-alu","title":"Constructing an ALU","text":""},{"location":"CO/CO2/#alu-symbol-control","title":"ALU symbol &amp; Control","text":""},{"location":"CO/CO2/#carry-skip-adder","title":"Carry skip adder(\u8df3\u8dc3\u52a0\u6cd5\u5668)","text":"<ul> <li>Accelerating the carry by skipping the interior blocks</li> <li>Optimal speed with no-equal distribution of block length</li> </ul>"},{"location":"CO/CO2/#arithmetic","title":"Arithmetic","text":"<ul> <li>Substraction  </li> <li>Overflow detection: \\(C_n \\oplus C_{n-1}\\)</li> </ul> <p>\u6ce8: RISC-V \u4e0d\u652f\u6301 nor \u6307\u4ee4\u3002</p>"},{"location":"CO/CO2/#multiplication","title":"Multiplication","text":""},{"location":"CO/CO2/#unsigned-multiplication","title":"Unsigned multiplication","text":"<p>Multiplicand (\u88ab\u4e58\u6570) \\(\\times\\) Multiplier (\u4e58\u6570)  </p> <ul> <li> <p>\u5982\u679c\u4e58\u6570\u672b\u4f4d\u662f 1, \u52a0\u88ab\u4e58\u6570\uff0c\u5426\u5219\u52a0 0. \u968f\u540e\u5c06\u88ab\u4e58\u6570\u5de6\u79fb 1 \u4f4d\u3002      </p> <p>\u9700\u8981 128+128+64 bit \u7684\u5bc4\u5b58\u5668\uff0c\u548c\u4e00\u4e2a 128 bit ALU.  </p> </li> <li> <p>\u4e0d\u79fb\u88ab\u4e58\u6570\uff0c\u800c\u662f\u79fb\u79ef (product). \u8fd9\u6837 ALU \u53ea\u9700\u8981 64 \u4f4d\u3002      </p> Example <p></p> </li> <li> <p>\u8fd9\u91cc\u79ef\u6700\u5f00\u59cb\u53ea\u4fdd\u5b58\u5728\u5de6\u534a\u90e8\u5206\uff0c\u53f3\u534a\u90e8\u5206\u4e3a\u7a7a\u3002\u800c\u4e58\u6570\u4e5f\u8981\u53f3\u79fb\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u628a\u4e24\u4e2a\u6570\u62fc\u5230\u4e00\u8d77\uff0c\u540c\u65f6\u53f3\u79fb\u3002 </p> </li> </ul>"},{"location":"CO/CO2/#signed-multiplication","title":"Signed multiplication","text":"<p>\u6709\u7b26\u53f7\u76f8\u4e58\u4e0d\u80fd\u76f4\u63a5\u4e58\uff0c\u53ef\u4ee5\u5148\u7528\u7b26\u53f7\u4f4d\u51b3\u5b9a\u7ed3\u679c\u7b26\u53f7\uff0c\u518d\u5bf9\u7edd\u5bf9\u503c\u8fdb\u884c\u4e58\u6cd5\u3002 </p> <p>Booth's Algorithm</p> <p>  \u601d\u60f3\uff1a\u5982\u679c\u6709\u4e00\u4e32\\(1\\) - \u51cf\u6389\u4e58\u6570\u7684\u7b2c\u4e00\u4e2a1 - \u540e\u9762\u76841\u7684\u5e8f\u5217\u8fdb\u884c\u79fb\u4f4d - \u5f53\u4e0a\u4e00\u6b65\u662f\u6700\u540e\u4e00\u4e2a1\u65f6\u52a0 \u6700\u5f00\u59cb\u628a\u79ef\u653e\u5728\u9ad8\u4f4d\uff0c\u88ab\u4e58\u6570\u653e\u5728\u4f4e\u4f4d\u3002\uff08\u6570\u636e\u4fdd\u5b58\u65b9\u6cd5\u540c 2.1.1\uff09\u9ed8\u8ba4 \\(bit_{-1}=0\\)</p> <ul> <li> <p>Action</p> <ul> <li>10 - subtract multiplicand from left</li> <li>11 - nop</li> <li>01 - add multiplicand to left half</li> <li>00 - nop</li> </ul> <p>\u6bcf\u4e2a\u64cd\u4f5c\u7ed3\u675f\u540e\u90fd\u8981\u79fb\u4f4d\uff0c\u548c 2.1.1 \u4e2d\u7c7b\u4f3c</p> </li> </ul> <p>\u6ce8\u610f\u79fb\u4f4d\u65f6\u4e0d\u8981\u6539\u53d8\u7b26\u53f7\u4f4d\u3002</p> <p>Example</p> <p> </p> <p>\u88ab\u4e58\u6570 Multiplicand \u662f 0010,  \u4e58\u6570 Multiplier \u662f 1101. \u6700\u5f00\u59cb\u5c06\u79ef 0000 \u653e\u5728\u9ad8\u56db\u4f4d, 1101 \u4f5c\u4e3a\u4e58\u6570\u653e\u5728\u4f4e\u56db\u4f4d\u3002 \u6700\u5f00\u59cb 10, \u5373\u6267\u884c\u51cf\u64cd\u4f5c, \\(0000-0010=1110\\). \u7b54\u6848\u4f9d\u7136\u653e\u5728\u9ad8\u56db\u4f4d\uff0c\u968f\u540e\u53f3\u79fb\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u6ce8\u610f\u53f3\u79fb\u7684\u65f6\u5019\u662f\u7b97\u672f\u53f3\u79fb, \\(bit_{-1}\\) \u4e5f\u53ef\u80fd\u4f1a\u6539\u53d8\u3002</p>"},{"location":"CO/CO2/#faster-multiplication","title":"Faster Multiplication","text":"<p>32 \u4f4d\u6570\u4e58 32 \u4f4d\u6570\uff0c\u76f8\u5f53\u4e8e 32 \u4e2a 32 \u4f4d\u6570\u76f8\u52a0\u3002\uff08\u5e76\u884c\u52a0\u901f\uff09  </p>"},{"location":"CO/CO2/#division","title":"Division","text":"<p>Dividend (\u88ab\u9664\u6570) \\(\\div\\) Divisor (\u9664\u6570)</p> <ul> <li>\u5c06\u9664\u6570\u653e\u5230\u9ad8\u4f4d\u3002\u4ece\u9ad8\u4f4d\u5f00\u59cb\u51cf\uff0c\u51cf\u5b8c\u5c06\u9664\u6570\u53f3\u79fb\u3002\u5546\u4e5f\u968f\u4e4b\u4e0d\u65ad\u5de6\u79fb\u3002\u5982\u679c\u51cf\u5b8c\u4e4b\u540e\u662f\u8d1f\u6570\uff0c\u9700\u8981\u8fd8\u56de\u53bb\u3002      </li> </ul> 7\u00f72 <p></p> <ul> <li>\u9664\u6570\u4e0d\u52a8\uff0c\u88ab\u9664\u6570\u4e0d\u505c\u5730\u5f80\u5de6\u79fb\u3002\u51cf\u5230\u6700\u540e\u4e00\u6b21\uff0c\u5982\u679c\u662f\u5c0f\u4e8e 0 \u7684\uff0c\u8bf4\u660e\u4e0d\u7528\u51cf\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u4f59\u6570\uff0c\u9700\u8981\u53f3\u79fb\u79fb\u56de\u6765\u3002\uff08\u5373\u5c06\u5de6\u534a\u90e8\u5206\u53f3\u79fb\u4e00\u4f4d)\u56e0\u4e3a\u6bcf\u6b21\u90fd\u662f\u5c06\u9664\u6570\u548c\u88ab\u9664\u6570\u6700\u9ad8\u4f4d\u51cf\uff0c\u51cf\u4e86\u4e4b\u540e\u9ad8\u4f4d\u5c31\u6ca1\u7528\u4e86\uff0c\u53ef\u4ee5\u79fb\u51fa\u53bb\u3002</li> </ul> <p></p> <p>\u5b9e\u9645\u4e0a\u8fd9\u91cc\u7ed3\u679c\u662f 129 \u4f4d\uff0c\u9632\u6b62 carry \u4e22\u5931</p> Example <p> \u8fd9\u91cc\u6700\u5f00\u59cb\u4f59\u6570\u5c31\u662f\u6574\u4e2a\u88ab\u9664\u6570\u3002  \u7c7b\u4f3c\u4e58\u6cd5\uff0c\u8fd9\u91cc\u7684\u9664\u6570\u53ea\u548c\u88ab\u9664\u6570\u7684\u9ad8\u4f4d\u76f8\u51cf\u3002\u5982\u679c\u51cf\u51fa\u6765\u662f\u8d1f\u6570\uff0c\u9700\u8981\u52a0\u56de\u53bb\u3002\u6bcf\u6b21\u51cf\u5b8c\u4e4b\u540e\u5148\u5de6\u79fb\uff0c\u7136\u540e\u6700\u53f3\u8fb9\u7684\u4e00\u4f4d\u653e\u5546\u30024.1 \u65f6\u5176\u5b9e\u6211\u4eec\u5df2\u7ecf\u7ed3\u675f\u4e86\u9664\u6cd5\u64cd\u4f5c\uff0c\u6b64\u65f6\u7684\u9ad8\u4f4d\u5c31\u662f\u6211\u4eec\u7684\u4f59\u6570\uff0c\u4f46\u662f\u8fd9\u6700\u540e\u4e00\u6b21\u7684\u7ed3\u679c\u8fd8\u6ca1\u6709\u653e\u56de\u5230 Reminder \u4e2d\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u518d\u5f80\u5de6\u79fb\u4e00\u4f4d\u4e3a\u5546\u7559\u51fa\u7a7a\u95f4\uff0c\u653e\u5165\u540e\uff0c\u518d\u628a\u9ad8\u4f4d\u4f59\u6570\u5f80\u53f3\u79fb\u52a8\u4ee5\u62b5\u6d88\u5f71\u54cd\u3002</p>"},{"location":"CO/CO2/#signed-division","title":"signed division","text":"<ul> <li>\u5e26\u7b26\u53f7\u7684\u9664\u6cd5\uff1a\u8981\u6c42\u4f59\u6570\u548c\u88ab\u9664\u6570\u7b26\u53f7\u76f8\u540c\u3002   </li> <li>\u9664\u96f6\u4f1a\u4ea7\u751f\u6ea2\u51fa\uff0c\u7531\u8f6f\u4ef6\u68c0\u6d4b\u3002</li> </ul>"},{"location":"CO/CO2/#risc-v-division","title":"RISC-V Division","text":"<ul> <li>Four instructions:<ul> <li>div, rem: signed divide, remainder</li> <li>divu, remu: unsigned divide, remainder</li> </ul> </li> <li>Overflow and division-by-zero don\u2019t produce errors<ul> <li>Just return defined results</li> <li>Faster for the common case of no error</li> </ul> </li> </ul>"},{"location":"CO/CO2/#float","title":"Float","text":"<ul> <li>Reasoning<ul> <li>Larger number range than integer rage</li> <li>Fractions</li> <li>Numbers like e (2.71828) and \u03c0(3.14159265....)</li> </ul> </li> <li>Representation for non-integral numbers <ul> <li>Including very small and very large numbers</li> </ul> </li> <li>Like scientific notation<ul> <li>\\(\u20132.34 \u00d7 10^{56}\\)\u89c4\u8303\u7684\u79d1\u5b66\u8ba1\u6570\u6cd5</li> <li>\\(+0.002 \u00d7 10^{\u20134}\\)\u9996\u4f4d\u4e3a0</li> <li>\\(+987.02 \u00d7 10^{9}\\)</li> </ul> </li> </ul>"},{"location":"CO/CO2/#ieee-floating-point-format","title":"IEEE Floating-Point Format","text":"<ul> <li>S: sign bit (0 \\(\\rightarrow\\) non-negative, 1 \\(\\rightarrow\\) negative)</li> <li>Normalize significand: \\(1.0 \u2264 |\\textbf{significand}| &lt; 2.0\\)<ul> <li>Always has a leading pre-binary-point 1 bit, so no need to represent it  explicitly (hidden bit)</li> <li>Significand is Fraction with the \u201c1.\u201d restored</li> </ul> </li> <li>Exponent: excess representation: actual exponent + Bias<ul> <li>Ensures exponent is unsigned</li> <li>\u504f\u79fb\u91cf\uff1aSingle: Bias = 127; Double: Bias = 1023</li> </ul> </li> </ul>"},{"location":"CO/CO2/#range","title":"Range","text":"<ul> <li>\u5355\u7cbe\u5ea6\u8303\u56f4</li> </ul> <ul> <li>\u53cc\u7cbe\u5ea6\u8303\u56f4</li> </ul> <ul> <li>Relative precision<ul> <li>all fraction bits are significant</li> <li>Single: approx \\(2^{\u201323}\\)<ul> <li>Equivalent to $23 \u00d7 \\log_{10}2 \u2248 23 \u00d7 0.3 \u2248 7 $decimal digits of precision</li> </ul> </li> <li>Double: approx 2\u201352<ul> <li>Equivalent to $52 \u00d7 \\log_{10}2 \u2248 52 \u00d7 0.3 \u2248 16 $decimal digits of precision</li> </ul> </li> </ul> </li> </ul>"},{"location":"CO/CO2/#denormal-numbers","title":"Denormal Numbers","text":"<ul> <li>\\(Exponent=000\\ldots 0\\)  \u975e\u89c4\u683c\u5316\u6570\uff0c\u8ba9\u6570\u5728\u8f83\u5c0f\u65f6\u80fd\u9010\u6e10\u4e0b\u6ea2\u51fa\u3002   \\(x=(-1)^s\\times((0+Fraction)\\times 2^{1-Bias})\\) \u6ce8\u610f\u6b64\u65f6\u6307\u6570\u662f \\(1-Bias=-126/-1022\\).   <ul> <li>Denormal with \\(Fraction = 000...0\\) we define \\(x=0\\)</li> </ul> </li> <li>\\(Exponent=111\\ldots 1, Fraction=000\\ldots 0\\)  \u8868\u793a \\(\\pm \\inf\\) </li> <li>\\(Exponent=111\\ldots 1, Fraction\\neq 000\\ldots 0\\)  \u8868\u793a NaN (Not-a-Number) </li> </ul>"},{"location":"CO/CO2/#addition","title":"addition","text":"<p>\u5c06\u6307\u6570\u66f4\u5c0f\u7684\u6d6e\u70b9\u6570\u7684\u6709\u6548\u90e8\u5206\u53f3\u79fb\u5bf9\u9f50(Truncation)</p> <p>Example</p> <p></p>"},{"location":"CO/CO2/#fp-adder-hardware","title":"FP Adder Hardware","text":"<p>\u84dd\u8272\u7ebf\u4e3a\u63a7\u5236\u901a\u8def\uff0c\u9ed1\u8272\u7ebf\u4e3a\u6570\u636e\u901a\u8def</p> <ul> <li>Much more complex than integer adder</li> <li>Doing it in one clock cycle would take too long<ul> <li>Much longer than integer operations</li> <li>Slower clock would penalize all instructions</li> </ul> </li> <li>FP adder usually takes several cycles<ul> <li>Can be pipelined</li> </ul> </li> </ul>"},{"location":"CO/CO2/#floating-point-multiplication","title":"Floating-Point Multiplication","text":"<p>\\((s1\\cdot 2^{e1}) \\cdot (s2\\cdot 2^{s2}) = (s1\\cdot s2)\\cdot 2^{e1+e2}\\)</p> <ul> <li>Add exponents</li> <li>Multiply the significands</li> <li>Normalize</li> <li>Over/Underflow? \u6709\u7684\u8bdd\u8981\u629b\u51fa\u5f02\u5e38\uff0c\u901a\u8fc7\u7ed3\u679c\u7684\u6307\u6570\u5224\u65ad\u3002</li> <li>Rounding</li> <li>Sign</li> </ul> <p>\u6ce8\u610f Exponet \u4e2d\u662f\u6709 Bias \u7684\uff0c\u4e24\u4e2a\u6570\u7684 exp \u90e8\u5206\u76f8\u52a0\u540e\u8fd8\u8981\u518d\u51cf\u53bb Bias. </p> Example <p></p> <p>Data Flow </p> <ul> <li>\u53f3\u8fb9\u5f80\u56de\u7684\u7bad\u5934: Rounding \u540e\u53ef\u80fd\u4f1a\u8fdb\u4f4d\u3002</li> <li>Incr \u7528\u4e8e\u6807\u51c6\u5316\u7ed3\u679c\uff0c\u4e0e\u53f3\u4fa7 Shift Right \u914d\u5408\u3002</li> </ul>"},{"location":"CO/CO2/#parallelism-and-computer-arithmetic-associativity","title":"Parallelism and Computer Arithmetic: Associativity","text":"<ul> <li>\u6d6e\u70b9\u6570\u8fd0\u7b97\u53d7\u8fd0\u7b97\u987a\u5e8f\u5f71\u54cd</li> </ul>"},{"location":"CO/CO2/#fp-instructions-in-risc-v","title":"FP Instructions in RISC-V","text":"<ul> <li>Separate FP registers: f0, \u2026, f31<ul> <li>double-precision</li> <li>single-precision values stored in the lower 32 bits</li> </ul> </li> <li>FP instructions operate only on FP registers <ul> <li>Programs generally don\u2019t do integer ops on FP data, or vice versa</li> <li>More registers with minimal code-size impact</li> </ul> </li> <li>FP load and store instructions<ul> <li>flw, fld</li> <li>fsw, fsd</li> </ul> </li> <li>Single-precision arithmetic<ul> <li>fadd.s, fsub.s, fmul.s, fdiv.s, fsqrt.s<ul> <li>e.g., fadds.s f2, f4, f6</li> </ul> </li> </ul> </li> <li>Double-precision arithmetic<ul> <li>fadd.d, fsub.d, fmul.d, fdiv.d, fsqrt.d<ul> <li>e.g., fadd.d f2, f4, f6</li> </ul> </li> </ul> </li> <li>Single- and double-precision comparison<ul> <li>feq.s, flt.s, fle.s</li> <li>feq.d, flt.d, fle.d</li> <li>Result is 0 or 1 in integer destination register<ul> <li>Use beq, bne to branch on comparison result</li> </ul> </li> </ul> </li> <li>Branch on FP condition code true or false<ul> <li>B.cond</li> </ul> </li> </ul>"},{"location":"CO/CO3/","title":"Chapter 3 Instructions : Language of the Computer","text":"<p>\u56de\u5fc6\u8d77\u4e86\u88abbhh\u652f\u914d\u7684\u6050\u60e7</p> <p>Abstract</p> <ul> <li>Introduction</li> <li>Operations of the Computer Hardware</li> <li>Operands of the Computer Hardware</li> <li>Representing Instructions in the Computer</li> <li>Logical Operation</li> <li>Instructions for Making Decisions</li> <li>Supporting Procedures in Computer Hardware</li> <li>Communicating with People</li> <li>MIPS Addressing for 32 Bit Immediates and Addresses</li> </ul>"},{"location":"CO/CO3/#introduction","title":"Introduction","text":"<p>Instruction Characteristics</p> <ul> <li>Language of the machine<ul> <li>Instructions (Statement)</li> <li>Instruction Set (Syntax)</li> </ul> </li> </ul> <p>\u6307\u4ee4\u96c6\u57fa\u672c\u7684\u7ed3\u6784\uff1aOperation \u64cd\u4f5c; Operand \u64cd\u4f5c\u6570</p> <ul> <li>\u4e0d\u540c\u6307\u4ee4\u96c6\uff0c\u6307\u4ee4\u7684\u7f16\u7801\u53ef\u4ee5\u4e0d\u540c\u3002\u5982 000 \u8868\u793a\u52a0\u6cd5\uff0c\u8fd9\u4e5f\u53eb\u6307\u4ee4\u7684 Encoding.  </li> <li>\u64cd\u4f5c\u6570\u4f4d\u5bbd\u53ef\u4ee5\u4e0d\u540c\uff0c\u53ef\u4ee5\u662f\u7acb\u5373\u6570/\u5bc4\u5b58\u5668/\u5185\u5b58\u3002 </li> </ul> <p>\u51af\u8bfa\u4f9d\u66fc\u67b6\u6784\uff1a\u6307\u4ee4\u7531\u6570\u5b57\u65b9\u5f0f\u88ab\u5b58\u50a8\uff0c\u53ef\u4ee5\u8fdb\u884c\u8bfb\u5199\u3002</p>"},{"location":"CO/CO3/#operations-of-the-computer-hardware","title":"Operations of the Computer Hardware","text":"<p>Design Principle</p> <ul> <li>\u7b80\u5355\u6e90\u4e8e\u89c4\u6574</li> <li>\u66f4\u5c11\u5219\u66f4\u5feb</li> <li>\u52a0\u5feb\u5e38\u7528\u6307\u4ee4</li> <li>\u4f18\u79c0\u7684\u8bbe\u8ba1\u9700\u8981\u9002\u5f53\u7684\u6298\u4e2d</li> </ul>"},{"location":"CO/CO3/#operands-of-the-computer-hardware","title":"Operands of the Computer Hardware","text":"<ul> <li>Arithmetic instructions operands must be registers or immediate<ul> <li>32 registers in RISC-V</li> <li>64 bits for each register in RISC-V</li> </ul> </li> <li>Design Principle 2<ul> <li>Smaller is faster\uff08\u8d8a\u5c11\u8d8a\u5feb\uff0c\u5bc4\u5b58\u5668\u4e2a\u6570\u4e00\u822c\u4e0d\u8d85\u8fc732\u4e2a\uff09</li> </ul> </li> <li> <p>RISC-v register operand</p> <ul> <li>Size is 64 bits, which named doubleword</li> </ul> Name Register Name Usage Preserved or call? x0 0 The constant value 0\u5e38\u91cf0 n.a. x1(ra) 1 Return address(link register)\u8fd4\u56de\u5730\u5740 yes x2(sp) 2 Stack pointer\u6808\u6307\u9488 yes x3(gp) 3 Global pointer\u5168\u5c40\u6307\u9488(\u53ef\u4ee5\u4efb\u610f\u6307\u5411\u6808\u4e0a\u5b58\u50a8\u7684\u53d8\u91cf) yes x4(tp) 4 Thread pointer yes x5-x7 5-7 Temporaries no x8-x9 8-9 Saved yes x10-x17 10-17 Arguments/results no x18-x27 18-27 Saved yes x28-x31 28-31 Temporaries now </li> </ul> <p>\u4e3a\u4ec0\u4e48\u5bc4\u5b58\u5668 <code>x0</code> \u4e00\u76f4\u4e3a 0</p> <p>Make the common fast. \u56e0\u4e3a\u7ecf\u5e38\u6709 0 \u53c2\u4e0e\u8ba1\u7b97\uff0c\u5c06\u5176\u5b58\u5728\u4e00\u4e2a\u5bc4\u5b58\u5668\u4e2d\uff0c\u4fbf\u4e8e\u8ba1\u7b97\u3002</p> <p></p>"},{"location":"CO/CO3/#memory-operands","title":"Memory Operands","text":"<ul> <li>Advantage<ul> <li>Could save much more data</li> <li>Save complex data structures<ul> <li>Arrays and structures</li> </ul> </li> </ul> </li> <li> <p>Data transfer instructions</p> <ul> <li>Load: from memory to register;  load doubleword ( ld )</li> <li>Store: from register to memory; store doubleword( sd ) </li> </ul> </li> <li> <p>Memory is byte addressed.   </p> </li> <li>RISC-V is Little Endian </li> <li>RISC-V dose not require words to be aligned in memory  (\u8282\u7701\u7a7a\u95f4)<ul> <li>words align: \u4e00\u4e2a\u5b57\u662f 4 \u5b57\u8282\uff0c\u6211\u4eec\u8981\u6c42\u5b57\u7684\u8d77\u59cb\u5730\u5740\u4e00\u5b9a\u8981\u662f 4 \u7684\u500d\u6570\u3002</li> </ul> </li> </ul> <p>Big/Little endian</p> <ul> <li>Big endian\uff1a<ul> <li>\u6570\u636e\u7684\u9ad8\u5b57\u8282\u5b58\u653e\u5728\u4f4e\u5730\u5740</li> <li>\u6570\u636e\u7684\u4f4e\u5b57\u8282\u5b58\u653e\u5728\u9ad8\u5730\u5740  </li> <li>PowerPC</li> </ul> </li> <li>Little endian:<ul> <li>\u6570\u636e\u7684\u9ad8\u5b57\u8282\u5b58\u653e\u5728\u9ad8\u5730\u5740</li> <li>\u6570\u636e\u7684\u4f4e\u5b57\u8282\u5b58\u653e\u5728\u4f4e\u5730\u5740 </li> <li>RISC-V</li> </ul> </li> </ul> <p> </p> <p>Little vs Big Endian</p> <p></p> Memory Alignment <p> </p> <p>\u200b    \u7b2c\u4e00\u4e2a\u662f\u5bf9\u9f50\u7684\uff0c\u7b2c\u4e8c\u4e2a\u662f\u4e0d\u5bf9\u9f50\u7684\u3002</p> <p>Memory Operand Example</p> <p><pre><code>A[12] = h + A[8];\n</code></pre> (\u9ed8\u8ba4\u6570\u7ec4\u662f\u53cc\u5b57\u7684, h in <code>x21</code>, base address of A in <code>x22</code>) \u7ffb\u8bd1\u4e3a RISC-V \u4ee3\u7801\u5f97\u5230 <pre><code>ld x9, 64(x22)\nadd x9, x21, x9\nsd x9, 96(x22)\n</code></pre> \u5730\u5740\u662f\u4ee5 byte \u4e3a\u5355\u4f4d\uff0c\u6240\u4ee5\u8981\u504f\u79fb \\(8\\times 8=64\\)\u200b bytes. <code>load</code> \u548c <code>store</code> \u662f\u552f\u4e8c\u53ef\u4ee5\u8bbf\u95ee\u5b58\u50a8\u5668\u7684\u6307\u4ee4\u3002 </p> <p>how to represent <code>g  =  h  +  A[i]</code></p> <pre><code>add    x5, x4, x4      #  temp reg x5 = 2 * i\nadd    x5, x5, x5        #  temp reg x5 = 4 * i\nadd    x5, x5, x5        #  temp reg x5 = 8 * i\nadd    x5, x5, x3      #  x5 = address of A[i] (8 * i + x3)\nld      x6, 0(x5)        #  temp reg x6 = A[i]\nadd    x1, x2, x6     #  g = h + A[i]\n</code></pre>"},{"location":"CO/CO3/#registers-vs-memory","title":"Registers vs. Memory","text":"<ul> <li>Registers are faster to access than memory  </li> <li>Operating on memory data requires loads and stores  </li> <li>Compiler must use registers for variables as much as possible \u7f16\u8bd1\u5668\u5c3d\u91cf\u4f7f\u7528\u5bc4\u5b58\u5668\u5b58\u53d8\u91cf\u3002\u53ea\u6709\u5728\u5bc4\u5b58\u5668\u4e0d\u591f\u7528\u65f6\uff0c\u624d\u4f1a\u628a\u4e0d\u592a\u7528\u7684\u503c\u653e\u56de\u5185\u5b58\u3002 </li> </ul>"},{"location":"CO/CO3/#constant-or-immediate-operands","title":"Constant or Immediate Operands(\u7acb\u5373\u6570)","text":"<p>Immediate: Other method for adding constant  </p> <ul> <li>Avoids the load instruction  </li> <li>Offer versions of the instruction  e.g. <code>addi x22, x22, 4</code></li> </ul> <p>Summary</p> <p> </p> <ul> <li>\u4e3a\u4ec0\u4e48\u5185\u5b58\u662f \\(2^{61}\\) \u4e2a doublewords? \u53ef\u4ee5\u8868\u793a\u7684\u5730\u5740\u6709\u8fd9\u4e48\u591a\uff0c\u56e0\u4e3a\u6211\u4eec\u4ee5 64 \u4f4d\u5bc4\u5b58\u5668\u4e3a\u57fa\u5740\uff0c\u53ef\u4ee5\u8868\u793a\u7684\u53cc\u5b57\u5c31\u662f \\(2^{64}/2^3=2^{61}\\) (\u8fd9\u91cc \\(2^3\\) \u8868\u793a 8 \u4e2a\u5b57\u8282\uff0c\u5373\u53cc\u5b57). \u5373\u6211\u4eec\u7684 <code>load</code> \u6307\u4ee4\u53ef\u4ee5\u8bbf\u95ee\u7684\u8303\u56f4\u6709\u8fd9\u4e48\u5927\u3002   </li> </ul>"},{"location":"CO/CO3/#non-leaf-procedures","title":"Non-Leaf Procedures","text":"<ul> <li>Procedures that call other procedures</li> <li>For nested call, caller needs to save on the stack:<ul> <li>Its return address</li> <li>Any arguments and temporaries needed after the call</li> </ul> </li> <li>Restore from the stack after the call</li> </ul>"},{"location":"CO/CO3/#signed-and-unsigned-number","title":"Signed and Unsigned Number","text":"<p>\u672c\u90e8\u5206\u5df2\u5728chapter 2\u4e2d\u8bb0\u5f55\uff0c\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0</p>"},{"location":"CO/CO3/#representing-instructions-in-the-computer","title":"Representing Instructions in the Computer","text":"<ul> <li>All information in computer consists of binary bits.</li> <li>Instructions are encoded in binary called machine code (\u673a\u5668\u7801) </li> <li>Mapping registers into numbers 0 for register <code>x0</code>, 31 for register <code>x31</code>. e.t.c. </li> <li>RISC-V instructions  32 \u4f4d\u6307\u4ee4\u7f16\u7801\u3002\u6240\u6709\u6307\u4ee4\u90fd\u662f\u89c4\u5219\u5316\u7684\uff0c\u5373\u4e00\u90e8\u5206\u662f opcode, \u4e00\u90e8\u5206\u662f operands \u7b49\u7b49\u3002  </li> </ul> <p>Translating assembly into machine instruction</p> <p></p> <p>Summary of RISC-V architecture</p> <p> </p>"},{"location":"CO/CO3/#r-format","title":"R-format","text":"<ul> <li>opcode: operaion code\u64cd\u4f5c\u7801</li> <li>rd: destination register number\u76ee\u7684\u64cd\u4f5c\u6570\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u5b58\u50a8\u64cd\u4f5c\u7ed3\u679c</li> <li>funct3: 3-bit function code(additional opcode)\u989d\u5916\u7684\u64cd\u4f5c\u7801\u5b57\u6bb5 \u4f8b\u5982\uff0c\u6211\u4eec\u52a0\u6cd5\u51cf\u6cd5\u53ef\u4ee5\u505a\u6210\u4e00\u4e2a opcode, \u7136\u540e\u5229\u7528 funct \u8fdb\u884c\u9009\u62e9\u3002</li> <li>rs1/rs2: the first/second source register number</li> <li> <p>funct7: 7-bit function code(additional opcode)\u989d\u5916\u7684\u64cd\u4f5c\u7801\u5b57\u6bb5</p> </li> <li> <p>All instructions in RISC-V have the same length</p> <ul> <li>Conflict:same length\u2190--\u2192single instruction</li> </ul> </li> </ul>"},{"location":"CO/CO3/#i-format","title":"I-format","text":"<ul> <li>Immediate arithmetic and load instructions e.g. <code>addi</code>, <code>ld</code> </li> <li>rs1: source or base address register number</li> <li>immediate: constant operand, or offset added to base  address \u5c06 rs2, funct7 \u5408\u5e76\u4e86\uff0c\u5f97\u5230 12 \u4f4d\u7acb\u5373\u6570</li> </ul>"},{"location":"CO/CO3/#s-format","title":"S-format","text":"<ul> <li>rs1: base address register number</li> <li>rs2: source opearand register number</li> <li>immediate:  <ul> <li>Split so that rs1 and rs2 fields always in the same place.  </li> </ul> </li> </ul> Example <p>Stored Program Computer  </p> <ul> <li>Instructions represented in binary, like data.  </li> <li>Instructions and data stored in memory.  </li> <li>Programs can operate on programs. e.g. compiplers, linkers. </li> <li>Binary compatibility allows compiled programs to work on different computers</li> </ul>"},{"location":"CO/CO3/#summary-of-r-i-s-type-instruction-format","title":"summary of R-, I-, S-type instruction format","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u5f88\u6e05\u695a\u7684\u770b\u5230\u4e09\u79cd\u4e0d\u540c\u7684\u6307\u4ee4\u5c3d\u91cf\u628a\u5171\u6027\u7684\u90e8\u5206\u90fd\u5bf9\u9f50\u4e86</p>"},{"location":"CO/CO3/#logical-operations","title":"Logical Operations","text":"<p>\u903b\u8f91\u64cd\u4f5c\u53ef\u4ee5\u7528\u4e8e\u63d0\u53d6\u5b57\u5185\u7684\u5b57\u6bb5</p> Operation C Java RISC-V Shift left &lt;&lt; &lt;&lt; <code>slli</code> Shift right &gt;&gt; &gt;&gt;&gt; <code>srli</code> Bit-by-by AND &amp; &amp; <code>and, andi</code> Bit-by-by OR | | <code>or, ori</code> Bit-by-by XOR ^ ^ <code>xor, xori</code> Bit-by-by NOT ~ ~ - <p>bitwise NOT \u8981\u7528\u5f02\u6216\u5b9e\u73b0\uff08\u4e0e\u5168 F \u5f02\u6216\uff09  </p>"},{"location":"CO/CO3/#shift","title":"Shift","text":"<ul> <li>I \u578b\u6307\u4ee4</li> <li>\u4e3a\u4ec0\u4e48\u8fd8\u6709 <code>funct6</code> \u79fb\u4f4d\u4e0d\u9700\u8981\u8fd9\u4e48\u591a\u7acb\u5373\u6570\uff0c\u53ea\u8981\u516d\u4f4d (\\(2^6=64\\)) \u5373\u53ef\u3002</li> <li>\u5de6\u79fb i \u4f4d\u76f8\u5f53\u4e8e\u4e58 \\(2^i\\), \u53f3\u79fb i \u4f4d\u76f8\u5f53\u4e8e\u9664 \\(2^i\\).  </li> </ul>"},{"location":"CO/CO3/#and","title":"AND","text":""},{"location":"CO/CO3/#or","title":"OR","text":""},{"location":"CO/CO3/#xor","title":"XOR","text":""},{"location":"CO/CO3/#instructions-for-making-decisions","title":"Instructions for making decisions(\u7528\u4e8e\u51b3\u7b56\u7684\u6307\u4ee4)","text":""},{"location":"CO/CO3/#branch-instructions","title":"Branch instructions","text":"<ul> <li><code>beq reg1, reg2, Label</code> \u76f8\u7b49\u5219\u8df3\u8f6c</li> <li><code>bne reg1, reg2, Label</code> \u4e0d\u76f8\u7b49\u5219\u8df3\u8f6c</li> </ul> Example <p>store \u7684\u7acb\u5373\u6570\u662f\u4f5c\u4e3a\u6570\u636e\u7684\u5730\u5740, beq \u7684\u7acb\u5373\u6570\u662f\u4f5c\u4e3a\u8fd0\u7b97\u7684\u5730\u5740\uff08\u52a0\u5230 PC \u4e0a\uff09\u56e0\u6b64\u4e8c\u8005\u7684\u6307\u4ee4\u7c7b\u578b\u4e0d\u540c\u3002</p> <p>\u8df3\u8f6c\u7684\u8303\u56f4\u6709\u9650\u5236\uff0c\u56e0\u4e3a\u7acb\u5373\u6570\u53ea\u6709 12 \u4f4d\u3002\uff08PC \u76f8\u5bf9\u5bfb\u5740\uff0c\u4ee5\u5f53\u524d\u7a0b\u5e8f\u4f4d\u7f6e\u4e3a\u57fa\u51c6\u524d\u540e\u8df3\uff09  </p> Loop <p> </p>"},{"location":"CO/CO3/#slt-instruction","title":"slt instruction","text":"<p>set on if less than.   <code>slt x2, x3, x4 # x2=1 if x3 &lt; x4</code> R \u578b\u6307\u4ee4</p> Example <p> </p>"},{"location":"CO/CO3/#more-conditional-operations","title":"More Conditional Operations","text":"<ul> <li><code>blt rs1, rs2, L1</code> \u82e5 <code>rs1&lt;rs2</code> \u5219\u8df3\u5230 L1</li> <li><code>bge rs1, rs2, L1</code> \u82e5 <code>rs1&gt;=rs2</code> \u5219\u8df3\u5230 L1</li> </ul>"},{"location":"CO/CO3/#sltset-on-less-thaninstruction","title":"slt\uff08Set on less than\uff09instruction","text":"<ul> <li>set on less than -slt<ul> <li>If the first reg. is less than second reg. then sets third reg to 1 </li> <li><code>slt x2, x3, x4</code> : <code>x2=1</code> if <code>x3 &lt; x4</code></li> </ul> </li> <li>Example: Compiling a less than test</li> </ul>"},{"location":"CO/CO3/#signed-vs-unsigned","title":"Signed vs. Unsigned","text":"<p>\u9ed8\u8ba4\u662f\u6709\u7b26\u53f7\u6570\u8fdb\u884c\u6bd4\u8f83  </p> <ul> <li>Signed comparison: <code>blt</code>, <code>bge</code></li> <li>Unsigned comparison: <code>bltu</code>, <code>bgeu</code></li> </ul>"},{"location":"CO/CO3/#caseswitch","title":"Case/Switch","text":"<p>Compiling a switch using jump address table</p> <p> </p> <p>\\(x_6\\) \u662f\u8df3\u8f6c\u8868\u7684\u57fa\u5730\u5740\uff0c\\(x_7\\leftarrow x_6+8*k\\) <code>jalr x1, 0(x7)</code>  \u628a\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740 PC+4<code>\u653e\u5165</code>x1<code>\u5bc4\u5b58\u5668\uff0c\u968f\u540e\u8df3\u5411</code>[x7] + 0<code>\u7684\u5730\u65b9\u3002   \u8fd9\u91cc\u6211\u4eec</code>jalr x0, ...<code>\u56e0\u4e3a\u6211\u4eec\u4e0d\u80fd\u6539\u53d8</code>x0` \u5bc4\u5b58\u5668\uff0c\u6240\u4ee5\u8fd9\u91cc\u4ec5\u7528\u4f5c\u5360\u4f4d\uff0c\u5e76\u6ca1\u6709\u5b9e\u9645\u5b58\u50a8\u8fd4\u56de\u5730\u5740\u3002</p> <p>I \u578b\u6307\u4ee4</p> <p>A basic block is a sequence of instructions with</p> <ul> <li>No embedded branches (except at end)</li> <li>No branch targets (except at beginning)</li> </ul>"},{"location":"CO/CO3/#supporting-procedures-in-computer-hardware","title":"Supporting Procedures in Computer Hardware","text":"<p>Procedure/function --- be used to structure programs \u4e3a\u4e86\u5b8c\u6210\u7279\u5b9a\u4efb\u52a1\u3002\u6613\u4e8e\u7406\u89e3\uff0c\u53ef\u4ee5\u590d\u7528\u3002</p> <p>\u8c03\u7528\u51fd\u6570\u7684\u6b65\u9aa4</p> <ol> <li>Place Parameters in a place where the procedure can access them (in registers <code>x10~x17</code>) \u4f20\u53c2</li> <li>Transfer control to the procedure \u63a7\u5236\u6743\u7ed9\u5b50\u7a0b\u5e8f</li> <li>Acquire the storage resources needed for the procedure</li> <li>Perform the desired task</li> <li>Place the result value in a place where the calling program can access it  </li> <li>Return control to the point of origin (address in <code>x1</code>)</li> </ol>"},{"location":"CO/CO3/#procedure-call-instructions","title":"Procedure Call Instructions","text":"<ul> <li>Procedure call: jump and link <code>jal x1, ProcedureLabel</code><ul> <li>Address of following instruction put in <code>x1</code></li> <li>Jumps to target address</li> </ul> </li> <li>Procedure return: jump and link register <code>jalr x0, 0(x1)</code><ul> <li>Like jal, but jumps to <code>0 + address in x1</code></li> <li>Use <code>x0</code> as rd (<code>x0</code> cannot be changed)</li> <li>Can also be used for computed jump</li> </ul> </li> </ul> <p>\u4e0d\u80fd\u7528 <code>jal</code> \u8df3\u56de\u6765\uff0c\u8df3\u8fdb\u51fd\u6570\u7684\u5730\u5740\u7684\u662f\u56fa\u5b9a\u7684, Label \u4e00\u5b9a\u3002\u4f46\u662f\u8df3\u56de\u6765\u7684\u5730\u5740\u4e0d\u4e00\u5b9a\uff0c\u8981\u7528 <code>x1</code> \u5b58\u50a8\u624d\u80fd\u8df3\u56de\u3002  </p>"},{"location":"CO/CO3/#using-more-registers","title":"Using More Registers","text":"<ul> <li>Registers for procedure calling<ul> <li><code>x10~x17</code>(<code>a0~a7</code>): eight argument registers to pass parameters or return values \u7528\u6765\u4f20\u53c2\u7684</li> <li><code>x1</code>: one return address register to return to origin point  </li> </ul> </li> <li>Stack\uff1aIdeal data structure for spilling registers<ul> <li>Push, pop</li> <li>Stack pointer (<code>sp</code>): <code>x2</code> \u6307\u5411\u6700\u6808\u9876\uff0c\u5373\u6700\u540e\u4e00\u4e2a\u6709\u6548\u6570\u636e\u6240\u5728\u7684\u4f4d\u7f6e</li> </ul> </li> <li>Stack grow from higher address to lower address  <ul> <li>Push: <code>sp = sp - 8</code></li> <li>Pop: <code>sp = sp + 8</code> </li> </ul> </li> </ul> Compiling a leaf procedure Name Register Name Usage Preserved or call? x0(zero) 0 The constant value 0 n.a. x1(ra) 1 Return address(link register) yes x2(sp) 2 Stack pointer yes x3(gp) 3 Global pointer yes x4(tp) 4 Thread pointer yes x5-x7(t0-t2) 5-7 Temporaries no x8(s0/fp) 8 Saved/frame pointer yes x9(s1) 9 Saved yes x10-x17(a0-a7) 10-17 Arguments/results no x18-x27(s2-s11) 18-27 Saved yes x28-x31(t3-t6) 28-31 Temporaries no PC - Auipc(Add Upper Immediate to PC) yes <ul> <li><code>t0~t7</code> \u4e34\u65f6\u5bc4\u5b58\u5668\uff0c\u4e0d\u9700\u8981\u5728\u51fd\u6570\u4e2d\u4fdd\u5b58 \u7f16\u8bd1\u5668\u4f1a\u4f18\u5148\u8c03\u7528</li> <li><code>s0~s11</code> saved registers \u6807\u6709 Preserved \u8868\u660e\u6211\u4eec\u9700\u8981\u5728\u51fd\u6570\u5f00\u59cb\u65f6\u4fdd\u5b58\u8be5\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u5e76\u5728\u79bb\u5f00\u51fd\u6570\u524d\u6062\u590d\u5bc4\u5b58\u5668\u7684\u503c\u3002  </li> </ul> <ul> <li>\u4e00\u4e9b\u7f16\u8bd1\u5668\u4f7f\u7528<code>fp</code>\u548c<code>x8</code>\u6307\u5411\u8fc7\u7a0b\u5e27\u7684\u7b2c\u4e00\u4e2a\u5b57</li> <li>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4\u7a33\u5b9a\u7684<code>sp</code>\u6765\u51cf\u5c11\u5bf9<code>fp</code>\u7684\u4f7f\u7528\uff0c\u4ec5\u5728\u8fdb\u5165\u548c\u9000\u51fa\u624d\u8c03\u6574\u6808\u3002</li> </ul>"},{"location":"CO/CO3/#nested-procedure","title":"Nested Procedure(\u5d4c\u5957\u8fc7\u7a0b)","text":"<ul> <li>\u4e0d\u8c03\u7528\u5176\u4ed6\u8fc7\u7a0b\u7684\u8fc7\u7a0b\u79f0\u4e3a\u53f6\u5b50\u8fc7\u7a0b(leaf)</li> </ul> Example <p>Preserved or not</p> <p> </p> <p>\u5bc4\u5b58\u5668\u4e00\u822c\u9760\u5806\u6808\u4fdd\u5b58, sp \u9760\u52a0\u51cf\u4fdd\u5b58\u3002 </p> <p>Local Data on the Stack</p>"},{"location":"CO/CO3/#communicating-with-people","title":"Communicating with People","text":"<ul> <li>Byte-encoded character sets e.g. ASCII, Latin-1</li> <li>Unicode: 32-bit character set e.g. UTF-8, UTF-16 </li> </ul> <p>\u7f16\u7801\u4e2d\u6709\u4e0d\u540c\u957f\u5ea6\u7684\u6570\u636e\uff0c\u56e0\u6b64\u4e5f\u9700\u8981\u6709\u4e0d\u540c\u957f\u5ea6\u7684 load \u548c store.  </p> <ul> <li> <p>Load byte/halfword/word: Sign extend to 64 bits in rd   \u6211\u4eec\u7684\u5bc4\u5b58\u5668\u662f 64 \u4f4d\u7684\uff0c\u56e0\u6b64\u9700\u8981\u6269\u5145\u3002</p> <ul> <li><code>lb rd, offset(rs1)</code></li> <li><code>lh rd, offset(rs1)</code></li> <li><code>lw rd, offset(rs1)</code> </li> <li><code>ld rd, offset(rs1)</code> </li> </ul> Example <p>\u540c\u6837\u662f\u53d6 A[4] \u7684\u503c\uff0c\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b offset \u4e0d\u540c\u3002<code>char</code> \u4e3a 4, <code>short int</code> \u4e3a 8, <code>int</code> \u4e3a 16.  </p> </li> <li> <p>Load byte/halfword/word unsigned: 0 extend to 64 bits in rd</p> <ul> <li><code>lbu rd, offset(rs1)</code></li> <li><code>lhu rd, offset(rs1)</code></li> <li><code>lwu rd, offset(rs1)</code></li> </ul> </li> <li>Store byte/halfword/word: Store rightmost 8/16/32 bits  <ul> <li><code>sb rs2, offset(rs1)</code></li> <li><code>sh rs2, offset(rs1)</code></li> <li><code>sw rs2, offset(rs1)</code> \u5b58\u50a8\u5c31\u4e0d\u9700\u8981\u8003\u8651\u6269\u5145\u95ee\u9898\uff0c\u6211\u4eec\u4e0d\u505a\u8fd0\u7b97\uff0c\u53ea\u662f\u628a\u5bf9\u5e94\u90e8\u5206\u653e\u5230\u5bf9\u5e94\u4f4d\u7f6e\u3002 offset \u53ef\u4ee5\u662f 3. \u56e0\u4e3a RISC-V \u662f\u53ef\u4ee5\u4e0d\u5bf9\u9f50\u7684\u3002\uff08\u5b9e\u9645\u4e0a sh offset \u4e00\u822c\u662f 2 \u7684\u500d\u6570, sw \u662f 4 \u7684\u500d\u6570)</li> </ul> </li> </ul> <p>Compiling a string copy procedure</p> <p> </p> <p>i \u4e0d\u5e94\u8be5\u5206\u914d\u7ed9 s3, \u5206\u914d\u7ed9\u4e00\u4e2a\u4e34\u65f6\u5bc4\u5b58\u5668\uff0c\u5c31\u53ef\u4ee5\u4e0d\u7528\u5806\u6808\u4fdd\u5b58 s3 \u4e86\u3002 \u5bf9\u4e8e\u4e00\u4e2a leaf procedure(\u4e0d\u518d\u8c03\u7528\u5176\u4ed6 procedure) \u7f16\u8bd1\u5668\u8981\u5c3d\u53ef\u80fd\u7528\u5b8c\u6240\u6709\u7684\u4e34\u65f6\u5bc4\u5b58\u5668\uff0c\u518d\u53bb\u7528\u5176\u4ed6\u7684\u5bc4\u5b58\u5668\u3002 \u4e3a\u4ec0\u4e48\u5f3a\u8c03 leaf procedure? - \u56e0\u4e3a\u5bf9\u4e8e\u975e leaf \u7684\u51fd\u6570\uff0c\u53ef\u80fd\u4e34\u65f6\u53d8\u91cf\u4f1a\u88ab\u8c03\u7528\u540e\u7684\u51fd\u6570\u6539\u53d8\uff0c\u8fd9\u6837\u5c31\u4e0d\u80fd\u7ee7\u7eed\u7528\u4e86\u3002</p>"},{"location":"CO/CO3/#risc-v-addressing-for-32-bit-immediate-and-addresses","title":"RISC-V Addressing for 32-Bit Immediate and Addresses","text":""},{"location":"CO/CO3/#wide-bit-immediate-addressing","title":"Wide Bit Immediate addressing","text":"<p>\u5982\u4f55\u5c06\u4e00\u4e2a\u5bc4\u5b58\u5668\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u4efb\u610f\u7684\u7acb\u5373\u6570\u3002</p> <p><code>lui reg, imm</code> \u53ef\u4ee5\u628a 20 \u4f4d\u7684\u5e38\u6570\u653e\u5230\u5bc4\u5b58\u5668\u4e2d\u3002(U-type)</p> <p>\u6ce8\u610f\u8fd9\u91cc\uff0c\u6211\u4eec\u4f1a\u628a\u7acb\u5373\u6570\u653e\u5165\u5bc4\u5b58\u5668\u7684 [31:12] \u4f4d\uff0c\u4f4e\u4f4d\u4f1a\u586b\u5145\u4e3a 0.  </p> <p>Loading a 32-bit constant</p> <p> </p> <p>\u6211\u4eec\u6700\u7ec8\u60f3\u653e\u5165\u5bc4\u5b58\u5668\u7684\u503c\u662f 32 \u4f4d\u5e38\u6570 <code>0x003D0</code>. \u5148\u5229\u7528 <code>lui</code> \u5c06\u9ad8 20 \u4f4d 976 \u653e\u5165\u5bc4\u5b58\u5668\u4e2d\uff0c\u968f\u540e\u5229\u7528\u52a0\u6cd5\u6307\u4ee4\u52a0\u4e0a \u4f4e 12 \u4f4d\uff0c\u5373 2304.  </p> <p>\u8df3\u8f6c\u6307\u4ee4\u7684\u590d\u6742\u9a6c\u5fb7\u8001\u5e08\u8ba4\u4e3a\u65e0\u6cd5\u89e3\u91ca\uff0c\u5728\u7b2c\u4e09\u7ae0\u5148\u8bb0\u5fc6\u4e86\u5316\u7b80\u7684</p>"},{"location":"CO/CO3/#branch-addressing","title":"Branch Addressing(\u5206\u652f\u5bfb\u5740)","text":"<p>SB-type</p> <ul> <li>PC-relative addressing \\(Target\\ address = PC + Branch\\ offset = PC + immediate \\times 2\\) \u8fd9\u91cc\u4f4e\u4f4d\u4f1a\u9ed8\u8ba4\u8865 0. \u8fd9\u6837\u53ef\u4ee5\u628a\u5730\u5740\u8303\u56f4\u6269\u5927\u4e00\u500d\u3002</li> </ul>"},{"location":"CO/CO3/#jump-addressing","title":"Jump Addressing(\u8df3\u8f6c\u5bfb\u5740)","text":"<p>UJ-type(\u53ea\u6709 <code>jal</code> \u6307\u4ee4) 20-bit immediate for larger range, \u4f4e\u4f4d\u9ed8\u8ba4\u8865 0, \u6545\u5b9e\u9645\u8868\u793a\u7acb\u5373\u6570\u4e3a [20:0] \u5171 21 \u4f4d\u3002</p> <p>Example</p> <p> </p> <p>RISC-V \u76f4\u63a5\u7528 PC \u7b97 offset, \u800c\u975e PC+4.</p> <p><code>bne</code>\u7b49\u8df3\u8f6c\u7684\u8303\u56f4\u662f4k,<code>jal</code>\u662f\\(2^20\\)\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4ecd\u7136\u4e0d\u591f</p> <ul> <li>All RISC-V instructions are 4 bytes long</li> <li>PC-relative addressing refers to the number of halfwords</li> </ul> <p>While branch target is far away * Inserts an unconditional jump to target Invert the condition so that the branch decides whether to skip the jump.  </p> Branching far away <p> </p>"},{"location":"CO/CO3/#risc-v-addressing-summary","title":"RISC-V Addressing Summary","text":"<p>\u5bfb\u5740\u65b9\u5f0f\u662f\u6307\u4ee4\u96c6\u7684\u6838\u5fc3\u533a\u522b\u3002</p> <ul> <li>\u7acb\u5373\u6570\u5bfb\u5740 <code>addi x5, x6, 4</code></li> <li>\u5bc4\u5b58\u5668\u5bfb\u5740 <code>add x5, x6, x7</code></li> <li>\u57fa\u5740\u5bfb\u5740 <code>ld x5,100(x6)</code></li> <li>PC\u76f8\u5bf9\u5bfb\u5740 <code>beq x5,x6,L1</code></li> </ul> Example <p> </p>"},{"location":"CO/CO3/#risc-v-disassembly","title":"RISC-V Disassembly","text":"<p>\u628a\u673a\u5668\u7801\u7ffb\u8bd1\u4e3a\u6c47\u7f16\u6307\u4ee4\u3002</p> <ul> <li>opcode \u5148\u770b opcode, \u786e\u5b9a\u662f\u54ea\u7c7b\u6307\u4ee4\uff0c\u968f\u540e\u5c31\u53ef\u4ee5\u8fdb\u884c\u5177\u4f53\u5212\u5206\u4e86\u3002</li> </ul> Example <p> </p>"},{"location":"CO/CO3/#synchronization-in-risc-v","title":"Synchronization in RISC-V","text":"<ul> <li>Two processors sharing an area of memory<ul> <li>P1 writes, then P2 reads</li> <li>Data race if P1 and P2 don\u2019t synchronize<ul> <li>Result depends of order of accesses</li> </ul> </li> </ul> </li> <li>Hardware support required<ul> <li>Atomic read/write memory operation</li> <li>No other access to the location allowed between the read and  write</li> </ul> </li> <li>Could be a single instruction<ul> <li>e.g. atomic swap* of register \u2194 memory</li> <li>Or an atomic pair of instructions</li> </ul> </li> </ul> <p>Load reserved: <code>lr.d rd,(rs1)</code> \u628a\u5730\u5740 rs1 \u7684\u503c\u653e\u5230\u5bc4\u5b58\u5668 rd \u4e2d\uff0c\u540c\u65f6</p> <p>Store conditional: <code>sc.d rd,(rs1),rs2</code> \u628a\u5bc4\u5b58\u5668 rs2 \u7684\u503c\u653e\u5165\u5730\u5740 rs1. \u5982\u679c\u6210\u529f\u90a3\u4e48 rd \u91cc\u9762\u662f 0. \u5982\u679c\u4e0a\u6761\u6307\u4ee4 load \u540e\uff0c\u8fd9\u4e2a\u5730\u65b9\u7684\u503c\u88ab\u6539\u53d8\u4e86\uff0c\u90a3\u4e48\u5c31\u5931\u8d25\u4e86\uff0c\u8fd4\u56de 0. </p> <p>atomic swap</p> <p> </p> <p>lock</p> <p> </p> <p>\u5730\u5740 x20 \u653e\u7684\u662f\u9501\uff0c\u5982\u679c\u9501\u4e3a 0, \u8bf4\u660e\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5b58\u5165\u6570\u636e\uff0c\u5219\u6211\u4eec\u83b7\u5f97\u9501\u968f\u540e\u5b58\u5165\uff0c\u5e76\u91ca\u653e\u9501\u3002\u5426\u5219\u9700\u8981\u7b49\u9501\u91ca\u653e\u4e86\u624d\u80fd\u5b58\u3002</p>"},{"location":"CO/CO3/#translating-and-starting-a-program","title":"Translating and starting a program","text":""},{"location":"CO/CO3/#object-file","title":"Object file","text":"<ul> <li>\u5bf9\u8c61\u6587\u4ef6\u5934(\u5176\u5b83\u90e8\u5206\u7684\u5927\u5c0f\u548c\u4f4d\u7f6e)</li> <li>\u6587\u672c\u6bb5</li> <li>\u9759\u6001\u6570\u636e\u6bb5\u548c\u52a8\u6001\u53d8\u91cf</li> <li>\u5f53\u7a0b\u5e8f\u52a0\u8f7d\u5230\u5b58\u50a8\u5668\u4e2d\u65f6\uff0c\u91cd\u5b9a\u4f4d\u4fe1\u606f\u6307\u4ee4\u548c\u6570\u636e\u5b57\u7684\u7edd\u5bf9\u5730\u5740</li> <li>\u7b26\u53f7\u8868</li> <li>\u8c03\u8bd5\u4fe1\u606f</li> </ul>"},{"location":"CO/CO3/#producing-an-object-module","title":"Producing an Object Module","text":"<p>Provides information for building a complete program from the pieces(Header).  </p> <ul> <li>Text segment: translated instructions</li> <li>Static data segment: data allocated for the life of the program</li> <li>Relocation info: for contents that depend on absolute location of loaded program</li> <li>Symbol table: global definitions and external refs</li> <li>Debug info: for associating with source cod</li> </ul>"},{"location":"CO/CO3/#link","title":"Link","text":"<p>Object modules(including library routine) \\(\\rightarrow\\) executable program</p> <ul> <li>Place code and data modules symbolically in memory</li> <li>Determine the addresses of data and instruction labels</li> <li>Patch both the internal and external references (Address of invoke)</li> </ul>"},{"location":"CO/CO3/#loading-a-program","title":"Loading a Program","text":"<p>Load from image file on disk into memory</p> <ol> <li>Read header to determine segment sizes</li> <li>Create virtual address space</li> <li>Copy text and initialized data into memory Or set page table entries so they can be faulted in</li> <li>Set up arguments on stack</li> <li>Initialize registers (including sp, fp, gp)</li> <li>Jump to startup routine Copies arguments to x10, \u2026 and calls main pWhen main returns, do exit syscall</li> </ol>"},{"location":"CO/CO3/#dynamic-linking","title":"Dynamic Linking","text":"<p>Only link/load library procedure when it is called. \u9759\u6001\u94fe\u63a5\u5df2\u7ecf\u7f16\u5165\u6587\u4ef6\u4e86\uff0c\u52a8\u6001\u94fe\u63a5\u662f\u5728\u8fd0\u884c\u65f6\u94fe\u63a5\uff0c\u53ef\u4ee5\u7528\u5230\u6700\u65b0\u7684\u4ee3\u7801  </p> <ul> <li>Requires procedure code to be relocatable</li> <li>Avoids image bloat caused by static linking of all  (transitively) referenced libraries</li> <li>Automatically picks up new library versions</li> </ul>"},{"location":"CO/CO3/#arrays-versus-pointers","title":"Arrays versus Pointers","text":"<p>\u6307\u9488\u662f\u53ef\u4ee5\u6539\u53d8\u7684\uff0c\u4f46\u662f\u6570\u7ec4\u9996\u5730\u5740\u4e0d\u80fd\u6539\u53d8\uff0c\u56e0\u6b64\u7ffb\u8bd1\u6210\u6c47\u7f16\u7684\u7ed3\u679c\u4e5f\u6709\u6240\u4e0d\u540c\u3002</p> Clearing an Array <p> </p>"},{"location":"CO/CO3/#real-stuff-mips-instructions","title":"Real Stuff: MIPS Instructions","text":"<p>MIPS: commercial predecessor to RISC-V</p> <ul> <li>Similar basic set of instructions</li> <li>32-bit instructions</li> <li>32 general purpose registers, register 0 is always 0</li> <li>32 floating-point registers</li> <li>Memory accessed only by load/store instructions<ul> <li>Consistent use of addressing modes for all data sizes</li> </ul> </li> </ul> <p>Different conditional branches</p> <ul> <li>For &lt;, &lt;=, &gt;, &gt;=</li> <li>RISC-V: <code>blt, bge, bltu, bgeu</code></li> <li>MIPS: <code>slt, sltu</code> (set less than, result is 0 or 1)</li> <li>Then use <code>beq</code>, bne to complete the branch</li> </ul> <p>Real Stuff: The Intel x86 ISA \u53d1\u5c55\u5386\u53f2 \u4e86\u89e3\u5373\u53ef</p>"},{"location":"CO/CO3/#other-risc-v-instructions","title":"Other RISC-V Instructions","text":"<ul> <li>Base integer instructions (RV64I)  <ul> <li>Those previously described, plus</li> <li><code>auipc rd, immed</code> // rd = (imm&lt;&lt;12) + pc</li> <li>follow by <code>jalr</code> (adds 12-bit immed) for long jump</li> <li><code>slt, sltu, slti, sltui</code>: set less than (like MIPS)</li> <li><code>addw, subw, addiw</code>: 32-bit add/sub</li> <li><code>sllw, srlw, srlw, slliw, srliw, sraiw</code>: 32-bit shift</li> </ul> </li> <li>32-bit variant: RV32I   registers are 32-bits wide, 32-bit operations</li> </ul> <p>RV64I \u662f\u6700\u57fa\u672c\u7684\u3002\u7f16\u8bd1\u5668\u9700\u8981\u77e5\u9053\u5f53\u524d\u6267\u884c\u662f\u57fa\u4e8e\u591a\u5c11\u4f4d\u7684\u5904\u7406\u5668\u3002</p> <p>Instruction Set Extensions</p> <ul> <li>M: integer multiply, divide, remainder</li> <li>A: atomic memory operations</li> <li>F: single-precision floating point</li> <li>D: double-precision floating point</li> <li>C: compressed instructions 16 \u4f4d\u7684\u6307\u4ee4\uff0c\u7528\u4e8e\u4f4e\u6210\u672c\u4ea7\u54c1\uff08\u5d4c\u5165\u5f0f\uff09</li> </ul> <p>Fallacies (\u8c2c\u8bef)</p> <ul> <li>Powerful instruction \\(\\Rightarrow\\) higher performance</li> <li>Use assembly code for high performance</li> <li>Backward compatibility \\(\\Rightarrow\\) instruction set doesn\u2019t change  </li> </ul> <p>Pifalls (\u9677\u9631) </p> <ul> <li>Sequential words are not at sequential addresses (\u5e94\u8be5 +4)</li> <li>Keeping a pointer to an automatic variable after procedure returns  </li> </ul>"},{"location":"CO/CO4/","title":"Chapter 4 The processor","text":""},{"location":"CO/CO4/#introduction","title":"Introduction","text":""},{"location":"CO/CO4/#instruction-execution-overview","title":"Instruction Execution Overview","text":"<p>CPU performance factors</p> <ul> <li>Instruction count Determined by ISA and compiler \u5982\u540c\u6837\u7684\u529f\u80fd\u7528 Intel \u548c RISC-V \u7684\u5904\u7406\u5668\u5b9e\u73b0\uff0c\u82f1\u7279\u5c14\u7684\u6307\u4ee4\u7528\u7684\u66f4\u5c11\uff08\u56e0\u4e3a\u66f4\u590d\u6742\uff09</li> <li>CPI and Cycle time Determined by CPU hardware</li> </ul> <p>For every instruction, the first two steps are identical</p> <ul> <li>Fetch the instruction from the memory</li> <li>Decode and read the registers</li> </ul> <p>Next steps depend on the instruction class  </p> <ul> <li>Memory-reference <code>load, store</code></li> <li>Arithmetic-logical  </li> <li>branches  </li> </ul>"},{"location":"CO/CO4/#cpu-overview","title":"CPU Overview","text":"<ul> <li>Use ALU to calculate<ul> <li>Arithmetic result</li> <li>Memory address for load/store</li> <li>Branch comparison \u56e0\u4e3a\u6211\u4eec\u662f\u5355\u5468\u671f\uff0c\u56e0\u6b64 ALU \u53ea\u80fd\u505a\u6bd4\u8f83\uff0c\u5177\u4f53\u8df3\u8f6c\u7684\u5730\u5740\u7531\u5355\u72ec\u7684 Adder \u8ba1\u7b97\u3002</li> </ul> </li> <li>Access data memory for load/store</li> <li>PC \\(\\leftarrow\\) target address or PC + 4  </li> </ul> Question <p>\u4e3a\u4ec0\u4e48\u6307\u4ee4\u8981\u548c\u5185\u5b58\u5206\u5f00\uff1f \u56e0\u4e3a\u6211\u4eec\u662f\u5355\u5468\u671f\uff0c\u6211\u4eec\u65e0\u6cd5\u5728\u540c\u4e00\u4e2a\u5468\u671f\u5185\u65e2\u8bfb\u6307\u4ee4\u53c8\u8bfb\u6570\u636e\u3002</p> <p>Can\u2019t just join wires together -- Use multiplexers.  </p>"},{"location":"CO/CO4/#control","title":"Control","text":"<ul> <li>different sources for unit</li> <li>read/write memory</li> </ul>"},{"location":"CO/CO4/#logical-design-convention","title":"Logical Design Convention","text":"<ul> <li>Information encoded in binary<ul> <li>Low voltage = 0, High voltage = 1</li> <li>One wire per bit</li> <li>Multi-bit data encoded on multi-wire buses </li> </ul> </li> <li>Combinational element<ul> <li>Operate on data</li> <li>Output is a function of input</li> </ul> </li> <li>State (sequential) elements Store information</li> </ul> \u903b\u8f91\u7535\u8def\u5185\u5bb9\u7b80\u8981\u590d\u4e60"},{"location":"CO/CO4/#building-a-datapath","title":"Building a datapath","text":"<p>Elements that process data and addresses in the CPU.  </p> <p>\u540c\u7c7b\u6307\u4ee4\u7684 opcode \u662f\u4e00\u6837\u7684\uff08I \u578b\u6307\u4ee4\u7684\u91cc\u903b\u8f91\u8fd0\u7b97\u3001load \u6307\u4ee4\u3001jal \u4e0d\u540c\uff09\uff0c\u5177\u4f53\u529f\u80fd\u7531 Func \u51b3\u5b9a\u3002\uff08\u56e0\u6b64\u4e0d\u628a\u6240\u6709\u64cd\u4f5c\u7f16\u5230 opcode \u5185\uff09</p>"},{"location":"CO/CO4/#instruction-execution-in-risc-v","title":"Instruction execution in RISC-V","text":"<ul> <li>Fetch:<ul> <li>Take instructions from the instruction memory </li> <li>Modify PC to point the next instruction</li> </ul> </li> <li>Instruction decoding &amp; Read Operand: <ul> <li>Will be translated into machine control command </li> <li>Reading Register Operands, whether or not to use </li> </ul> </li> <li>Executive Control:<ul> <li>Control the implementation of the corresponding ALU operation </li> </ul> </li> <li>Memory access:<ul> <li>Write or Read data from memory </li> <li>Only ld/sd</li> </ul> </li> <li>Write results to register:<ul> <li>If it is R-type instructions, ALU results are written to rd</li> <li>If it is I-type instructions, memory data are written to rd</li> </ul> </li> <li>Modify PC for branch instructions</li> </ul>"},{"location":"CO/CO4/#instruction-fetching","title":"Instruction fetching","text":"<ul> <li>R-format Instructions  <ul> <li>Read 2 register operands</li> <li>Perform arithmetic/logical operation</li> <li>Write register result</li> </ul> </li> <li>Load/Store Instructions<ul> <li>Read register operands</li> <li>Calculate address using 12-bit offset Use ALU, but sign-extend offset</li> <li>Load: Read memory and update register</li> <li>Store: Write register value to memory</li> </ul> </li> <li>Branch Instructions<ul> <li>Read 2 register operands</li> <li>Compare operands use ALU, substract and check Zero output</li> <li>Calculate target address <ul> <li>Sign-extend displacement</li> <li>Shift left 1 place (halfword displacement)</li> <li>Add to PC value</li> </ul> </li> </ul> </li> </ul> <p>First-cut data path does an instruction in one clock cycle</p> <ul> <li>Each datapath element can only do one function at a time</li> <li>Hence, we need separate instruction and data memories</li> </ul>"},{"location":"CO/CO4/#path-built-using-multiplexer","title":"Path Built using Multiplexer","text":"<ul> <li> <p>R-type instruction Datapath       </p> </li> <li> <p>I-type instruction Datapath</p> <ul> <li>For ALU</li> <li>For load </li> </ul> </li> <li> <p>S-type (store) instruction Datapath</p> </li> </ul> <ul> <li>SB-type (branch) instruction Datapath</li> </ul> <ul> <li>UJ-type instruction Datapath</li> </ul> <p>Full datapath</p>"},{"location":"CO/CO4/#a-simple-implementation-scheme","title":"A simple Implementation Scheme","text":"<p>Analyse for cause and effect</p> <ul> <li>Information comes from the 32 bits of the instruction</li> <li>Selecting the operations to perform (ALU, read/write, etc.)</li> <li>Controlling the flow of data (multiplexor inputs)</li> <li>ALU's operation based on instruction type and function code</li> </ul> <ul> <li>7 \u4e2a\u63a7\u5236\u4fe1\u53f7\u548c\u4e00\u4e2a 4 \u4f4d\u7684 <code>ALU_operation</code>.  </li> <li>MemToReg \u6709\u4e09\u4e2a\u6e90\uff0c\u5206\u522b\u662f <code>load</code> \u6307\u4ee4\uff0cPC \u6765\u7684(<code>jal, jalr</code> \u5b58 PC+4), ALU \u51fa\u6765\u7684\uff08R \u578b\uff0cI \u578b\uff09</li> </ul>"},{"location":"CO/CO4/#alu-symbol-control","title":"ALU symbol &amp; Control","text":"<p>ALU used for</p> <ul> <li>Load/Store: F = add</li> <li>Branch: F = subtract</li> <li>R-type: F depends on opcode</li> </ul> <p>\u56e0\u6b64\u6211\u4eec\u8fdb\u884c\u4e24\u7ea7\u89e3\u7801 2-level decode. </p>"},{"location":"CO/CO4/#first-level","title":"First level","text":"<ul> <li>\u4e00\u7ea7\u89e3\u7801\u540e\uff0c\u53ef\u4ee5\u51b3\u5b9a\u9664\u4e86 <code>ALU_opration</code> \u4ee5\u5916\u7684\u63a7\u5236\u4fe1\u53f7</li> <li>\u540c\u65f6\u6211\u4eec\u4f1a\u89e3\u7801\u51fa 2 \u4f4d\u7684 <code>ALU_op</code>. </li> </ul>"},{"location":"CO/CO4/#second-level","title":"second level","text":"<p>ALU operation is decided by 2-bit ALUOp derived  from opcode, and funct7 &amp; funct3 fields of the  instruction.  </p>"},{"location":"CO/CO4/#datapath-with-control","title":"Datapath with Control","text":"<p>\u84dd\u7ebf\u4e3a\u63a7\u5236\u901a\u8def\uff0c\u4f1a\u51b3\u5b9a\u6570\u636e\u7684\u6d41\u5411\u3002</p>"},{"location":"CO/CO4/#an-overview-of-pipelining","title":"An overview of pipelining","text":""},{"location":"CO/CO4/#performance","title":"Performance","text":"<p>\u5bf9\u4e8e\u5355\u5468\u671f CPU, CPI \u662f 1, \u4f46\u65f6\u949f\u5468\u671f\u4f1a\u5f88\u957f\u3002   \u5047\u8bbe\u53d6\u6307\u4ee4 200ps, \u5bc4\u5b58\u5668\u8bfb 100ps, ALU \u8ba1\u7b97 200ps, \u5185\u5b58\u8bbf\u95ee 200ps, \u5bc4\u5b58\u5668\u5199 100ps. \u90a3\u4e48 <code>add</code> \u9700\u8981 600ps, <code>ld</code> \u9700\u8981 800ps, <code>sd</code> \u9700\u8981 700ps, <code>beq</code> \u9700\u8981 500ps.   </p> <p>Longest delay determines clock period. (<code>ld</code>) We will improve performance by pipelining.  </p>"},{"location":"CO/CO4/#pipelining","title":"Pipelining","text":"<p>\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u6761\u6307\u4ee4\u90fd\u5212\u5206\u4e3a\u8fd9\u4e48\u51e0\u6b65\uff1a</p> <ol> <li>IF: Instruction fetch from memory</li> <li>ID: Instruction decode &amp; register read</li> <li>EX: Execute operation or calculate address</li> <li>MEM: Access memory operand</li> <li>WB: Write result back to register</li> </ol> <p>\\(CPI \\approx 1\\)</p> <ul> <li>One instruction will be issued (or finished) each cycle.  </li> <li>During any cycle, one instruction is present in each stage.  </li> </ul>"},{"location":"CO/CO4/#pipeline-performance","title":"Pipeline Performance","text":"<p>\u4e0d\u540c\u64cd\u4f5c\u7684\u65f6\u95f4\u4e5f\u4e0d\u540c\uff0c\u6d41\u6c34\u7ebf CPU \u7684\u65f6\u949f\u5468\u671f\u4e3a\u6700\u957f\u7684\u64cd\u4f5c\u65f6\u95f4\u3002</p> <p>\u6d41\u6c34\u7ebf\u53ef\u4ee5\u63d0\u9ad8\u541e\u5410\u91cf(throughput) \u4f46\u5e76\u6ca1\u6709\u6539\u53d8\u6bcf\u6761\u6307\u4ee4\u7684\u6267\u884c\u65f6\u95f4(Latency)\u3002  </p>"},{"location":"CO/CO4/#risc-v-isa-designed-for-pipelining","title":"RISC-V ISA designed for pipelining","text":"<p>RISC-V \u9002\u5408\u6d41\u6c34\u7ebf\u8bbe\u8ba1\u3002  </p> <ul> <li>All instructions are 32-bits Easier to fetch and decode in one cycle</li> <li>Few and regular instruction formats Can decode and read registers in one step</li> <li>Load/store addressing  Can calculate address in 3<sup>rd</sup> stage, access memory in 4<sup>th</sup> stage</li> </ul>"},{"location":"CO/CO4/#hazards","title":"Hazards","text":"<p>\u5192\u9669/\u7ade\u4e89 \u5f53\u524d\u8fd9\u6761\u6307\u4ee4\u4e0d\u80fd\u8fdb\u5165\u4e0b\u4e00\u4e2a\u9636\u6bb5\uff0c\u8981\u7b49\u5f85\u3002  </p> <ul> <li>Structure hazards  A required resource is busy.  </li> <li>Data hazard Need to wait for previous instruction to complete  its data read/write.  </li> <li>Control hazard Deciding on control action depends on previous  instruction.  </li> </ul>"},{"location":"CO/CO4/#structure-hazards","title":"Structure Hazards","text":"<p>\u5982\u679c\u53ea\u6709\u4e00\u5757\u5185\u5b58\uff0c\u4f46 IF \u548c MEM \u9636\u6bb5\u90fd\u9700\u8981\u4f7f\u7528\u8fd9\u5757\u5185\u5b58\uff0c\u90a3\u4e48 IF \u5c31\u4f1a\u88ab stall \u6682\u505c\uff0c\u9020\u6210\u4e00\u4e2a bubble. (\u5373\u6d41\u6c34\u7ebf\u5185\u6709\u4e00\u4e2a\u65f6\u523b\u662f\u6e05\u7a7a\u7684\uff0c\u56e0\u4e3a\u6ca1\u6709\u6211\u4eec\u6ca1\u6709\u53bb\u53d6\u6307\u4ee4)</p> <p>Pipelined datapaths require separate instruction/data memories. (Or separate instruction/data caches)</p>"},{"location":"CO/CO4/#data-hazards","title":"Data Hazards","text":"<p>An instruction depends on completion of data access by a previous instruction.  </p> <p>Example</p> <p> </p> <p>\u6ce8\u610f\u8fd9\u91cc WB \u662f\u5728\u524d\u534a\u4e2a\u5468\u671f\u5c06\u6570\u636e\u5199\u5165\u5bc4\u5b58\u5668, ID \u662f\u5728\u540e\u534a\u4e2a\u5468\u671f\u5c06\u6570\u636e\u4ece\u5bc4\u5b58\u5668\u4e2d\u53d6\u51fa\u3002 \u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u8981\u7528\u7684\u7ed3\u679c\u5728 EX \u65f6\u5df2\u7ecf\u4ea7\u751f\u4e86\u3002</p> <ul> <li> <p>Forwarding(Bypassing)   Use result when it is computed  </p> <ul> <li>Don\u2019t wait for it to be stored in a register</li> <li>Requires extra connections in the datapath</li> </ul> Example <p> </p> </li> </ul> <p>Load-Use Data Hazard</p> Example <p> </p> <p>\u6d41\u6c34\u7ebf\u7684 CPI \u4e0d\u53ef\u80fd\u7b49\u4e8e 1, \u56e0\u4e3a\u4e0a\u56fe\u8fd9\u79cd\u60c5\u51b5\u4e00\u5b9a\u4f1a\u53d1\u751f(<code>ld</code> \u65e0\u6cd5\u907f\u514d)\u3002 \u53ef\u4ee5\u628a\u540e\u7eed\u4e0e\u8fd9\u4e9b\u5bc4\u5b58\u5668\u65e0\u5173\u7684\u6307\u4ee4\u5148\u62ff\u5230\u8fd9\u91cc\u6267\u884c\u3002\uff08\u4e71\u5e8f\u6267\u884c\uff09</p> Example <p> </p> <p>\u4fee\u6539\u540e, <code>ld x2, 8(x0)</code> \u5df2\u7ecf\u4ece\u5185\u5b58\u4e2d\u8bfb\u51fa\u6570\u636e\u8fd8\u6ca1\u6709\u5199\u56de\u5bc4\u5b58\u5668\uff0c\u53ef\u4ee5\u76f4\u63a5\u9001\u5230 <code>add x3, x1, x2</code> \u4e2d\u53bb\u3002</p>"},{"location":"CO/CO4/#control-hazards","title":"Control Hazards","text":"<p>Branch determines flow of control</p> <ul> <li>Fetching next instruction depends on branch outcome</li> <li>Pipeline can\u2019t always fetch correct instruction</li> </ul> <p>\u53ef\u4ee5\u9884\u6d4b\uff0c\u6216\u8005\u5c06\u6bd4\u8f83\u653e\u5728 ID \u7ea7\u3002</p> Example <p> </p> <p>Branch Prediction \u66f4\u957f\u7684\u6d41\u6c34\u7ebf\u4e0d\u80fd\u5f88\u65e9\u5730\u51b3\u5b9a\u5206\u652f\u7ed3\u679c\u3002 \u53ef\u4ee5\u9884\u6d4b branch \u547d\u4e2d\u6216\u8005\u4e0d\u547d\u4e2d\u3002  </p> <ul> <li>Static branch prediction \u5047\u8bbe\u603b\u662f\u547d\u4e2d/\u4e0d\u547d\u4e2d</li> <li>Dynamic branch prediction \u8bb0\u5f55\u4e0a\u6b21\u8dd1\u5230\u8fd9\u91cc\u662f\u5426\u547d\u4e2d\uff0c\u7136\u540e\u4e0b\u6b21\u6309\u7167\u4e4b\u524d\u7684\u7ed3\u679c\u9884\u6d4b\u3002  </li> </ul> <p>Summary</p> <ul> <li>Pipelining improves performance by increasing instruction throughput  <ul> <li>Executes multiple instructions in parallel</li> <li>Each instruction has the same latency</li> </ul> </li> <li>Subject to hazards(Structure, data, control)</li> <li>Instruction set design affects complexity of pipeline implementation</li> </ul>"},{"location":"CO/CO4/#risc-v-pipelined-datapath","title":"RISC-V Pipelined Datapath","text":"<p>\u4e0d\u540c\u9636\u6bb5\u4e4b\u95f4\uff0c\u6211\u4eec\u9700\u8981\u5bc4\u5b58\u5668\u6765\u4fdd\u5b58\u4e4b\u524d\u9636\u6bb5\u5f97\u5230\u7684\u503c\u3002 \u7ade\u4e89\u53ea\u4f1a\u53d1\u751f\u5728\u4ece\u53f3\u5f80\u5de6\u7684\u9636\u6bb5\u3002</p> <p>\u6ce8\u610f\u5230\uff0c\u7b2c\u4e94\u4e2a\u9636\u6bb5\u5199\u56de\u65f6\uff0c\u5199\u5bc4\u5b58\u5668\u53f7\u5e94\u8be5\u662f\u4ece MEM/WB \u4e2d\u7684\uff0c\u800c\u4e0d\u662f IF \u51fa\u7684\u5bc4\u5b58\u5668\u53f7\u3002</p> <ul> <li>Single-clock-cycle pipeline diagram: Shows pipeline usage in a single cycle; Highlight resources used</li> <li>multi-clock-cycle diagram: Graph of operation over time</li> </ul>"},{"location":"CO/CO4/#pipelined-control","title":"Pipelined Control","text":"<p>\u63a7\u5236\u4fe1\u53f7 ID \u9636\u6bb5\u5168\u90e8\u8bd1\u51fa\uff0c\u968f\u540e\u901a\u8fc7\u5bc4\u5b58\u5668\u4f20\u5230\u540e\u7eed\u9636\u6bb5\u4e2d\u53bb\u3002 \u6709\u4e9b\u4fe1\u53f7\u5728 WB \u9636\u6bb5\u7528\uff0c\u6709\u4e9b\u5728 M \u9636\u6bb5\u7528\uff0c\u6709\u4e9b\u5728 EX. \u4f7f\u7528\u4e4b\u540e\u5c31\u4e0d\u518d\u9700\u8981\u628a\u4fe1\u53f7\u4f20\u9012\u4e0b\u53bb\u3002</p>"},{"location":"CO/CO4/#data-hazards_1","title":"Data Hazards","text":""},{"location":"CO/CO4/#forwarding","title":"Forwarding","text":"Example <p><code>and</code> \u8bed\u53e5\u4e2d\u5c06 EX \u7684\u7ed3\u679c\u524d\u9012, <code>or</code> \u8bed\u53e5\u4e2d\u8981\u5c06 DM \u7684\u7ed3\u679c\u524d\u9012\uff08\u6b64\u65f6 EX \u7684\u503c\u5df2\u7ecf\u4e0d\u662f\u7b2c\u4e00\u6761\u6307\u4ee4\u7684\u7ed3\u679c\u4e86\uff09</p> <p>\u5982\u4f55\u5224\u65ad\u662f\u5426\u9700\u8981\u524d\u9012\uff1f  Rd \u8981\u4e00\u76f4\u4f20\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u501f\u6b64\u5224\u65ad\u8981\u8bfb\u51fa\u7684\u5bc4\u5b58\u5668\u662f\u5426\u662f\u4e4b\u524d\u6307\u4ee4\u8981\u5199\u56de\u7684\u5bc4\u5b58\u5668\u3002 Data hazards when</p> <ul> <li><code>EX/MEM.RegisterRd = ID/EX.RegisterRs1</code> \u5728\u7b2c\u56db\u4e2a\u65f6\u949f\u5468\u671f\u65f6\u628a EX/MEM \u7684\u5bc4\u5b58\u5668\u503c\u9001\u5230 ALU. </li> <li><code>EX/MEM.RegisterRd = ID/EX.RegisterRs2</code></li> <li><code>MEM/WB.RegisterRd = ID/EX.RegisterRs1</code></li> <li><code>MEM/WB.RegisterRd = ID/EX.RegisterRs2</code></li> </ul> <p>\u53ea\u6709\u5728\u6211\u4eec\u8981\u6539\u53d8\u5bc4\u5b58\u5668\u7684\u503c\u7684\u65f6\u5019\u624d\u80fd\u7528\u524d\u9012\u7684\u503c\uff08\u6709\u4e9b\u6307\u4ee4\u53ef\u80fd\u6839\u672c\u5c31\u4e0d\u4f1a\u5199\u56de\u5bc4\u5b58\u5668\uff0c\u6ca1\u6709\u6709\u6548\u7684 Rd\uff09  <code>EX/MEM.RegWrite, MEM/WB.RegWrite</code> \u4e0d\u4e3a 0. \u6b64\u5916 <code>EX/MEM.RegisterRd, MEM/WB.RegisterRd</code> \u4e5f\u4e0d\u80fd\u4e3a 0. </p> Mux control Source Explanation <code>ForwardA = 00</code> ID/EX The first ALU operand comes from the register file. <code>ForwardA = 10</code> EX/MEM The first ALU operand is forwarded from the prior ALU result. <code>ForwardA = 01</code> MEM/WB The first ALU operand is forwarded from data memory or an earlier ALU result. <p>Double Data Hazard</p> <p> </p> <p>\u6211\u4eec\u524d\u9012\u65f6\u8981\u52a0\u4e00\u4e2a\u6761\u4ef6\uff0c\u53ea\u6709\u5728 EX/MEM \u7684\u6761\u4ef6\u4e0d\u6210\u7acb\u65f6\uff0c\u624d\u80fd\u67e5\u770b MEM/WB \u7684\u6761\u4ef6\u3002</p>"},{"location":"CO/CO4/#load-use-hazard-detection","title":"Load-Use Hazard Detection","text":"<p>\u5982\u679c\u6211\u4eec\u5728 ld \u6307\u4ee4 EX/MEM \u65f6\u6682\u505c\uff0c\u6b64\u65f6 ld \u540e\u9762\u6709\u4e24\u6761\u6307\u4ee4\u9700\u8981\u6682\u505c\uff0c\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u66f4\u65e9\u7684\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>Load-use hazard when</p> <ul> <li><code>ID/EX.MemRead and ((ID/EX.RegisterRd = IF/ID.RegisterRs1) or (ID/EX.RegisterRd = IF/ID.RegisterRs2))</code></li> </ul> <p>If detected, stall and insert bubble</p>"},{"location":"CO/CO4/#stall","title":"Stall","text":"<p>\u5728 ld \u540e\u9762 stall\uff0c\u4f7f\u5f97\u8fd9\u7ea7\u7684\u63a7\u5236\u4fe1\u53f7\u4e3a 0, \u540c\u65f6\u963b\u6b62 PC, IF/ID \u5bc4\u5b58\u5668\u7684\u66f4\u65b0\u3002 \u76f8\u5f53\u4e8e\u53c8\u8fdb\u884c\u4e86\u4e00\u6b21 decode. </p> Example <p> </p> <ul> <li>Stalls reduce performance<ul> <li>But are required to get correct results</li> </ul> </li> <li>Compiler can arrange code to avoid hazards and stalls</li> </ul>"},{"location":"CO/CO4/#branch-hazards","title":"Branch Hazards","text":"<p>\u662f\u5426\u8df3\u8f6c\u5728 MEM \u9636\u6bb5\u51b3\u5b9a\u3002  </p> <p>\u6700\u6734\u7d20\u7684\u65b9\u6cd5\u662f\u65e0\u89c6\u8fd9\u79cd\u60c5\u51b5\uff0c\u56e0\u4e3a\u524d\u4e09\u4e2a\u9636\u6bb5\u5e76\u4e0d\u6d89\u53ca\u5bf9\u5bc4\u5b58\u5668\u548c\u5185\u5b58\u4fee\u6539\uff0c\u5373\u4f7f\u6211\u4eec\u9884\u6d4b\u540e\u7eed\u4e0d\u6267\u884c\u8fd9\u4e9b\u6307\u4ee4\u4e5f\u4e0d\u4f1a\u5e26\u6765\u5f71\u54cd\u3002\u4f46\u8fd9\u6837\u53ef\u80fd\u5e26\u6765 CPI \u7684\u663e\u8457\u964d\u4f4e\u3002</p> <p>\u4e00\u79cd\u65b9\u6cd5\u662f\u5728 ID \u7ea7\u51b3\u5b9a\u662f\u5426\u8df3\u8f6c\uff08\u6b64\u65f6\u5df2\u7ecf\u6709\u4e86\u4e24\u4e2a\u6e90\u64cd\u4f5c\u6570\u548c\u7acb\u5373\u6570\uff09</p> Example <p> </p> <p>\u8fd9\u6837\u6211\u4eec\u53ea\u53ef\u80fd\u591a\u4f59\u4e00\u6761\u6307\u4ee4\uff0c\u63d2\u5165 bubble \u5373\u53ef\u3002\u4f46\u662f\u8fd9\u6837\u4e5f\u4e0d\u53ef\u63a5\u53d7\u3002</p>"},{"location":"CO/CO4/#dynamic-branch-prediction","title":"Dynamic Branch Prediction","text":"<p>In deeper and superscalar(\u591a\u53d1\u5c04) pipelines, branch penalty is more significant.  </p> <p>Use dynamic prediction.  </p> <ul> <li>Branch prediction buffer (aka branch history table)  \u8bb0\u5f55\u524d\u51e0\u6b21\u662f\u5426\u547d\u4e2d</li> <li>Indexed by recent branch instruction addresses</li> <li>Stores outcome (taken/not taken)</li> <li>To execute a branch<ul> <li>Check table, expect the same outcome</li> <li>Start fetching from fall-through or target</li> <li>If wrong, flush pipeline and flip prediction</li> </ul> </li> </ul> <p>\u53ef\u4ee5\u5904\u7406 for \u5faa\u73af\u7684\u9884\u6d4b\u3002  </p> <p>1-Bit Predictor</p> <p>\u4f46\u4e5f\u5b58\u5728\u95ee\u9898\uff0c\u5bf9\u4e8e\u53cc\u5c42\u5faa\u73af\uff0c\u5f53\u5185\u5c42\u5faa\u73af\u8981\u7ed3\u675f\u65f6\u4f1a\u9519\u4e24\u6b21\u3002  </p> <ul> <li>Mispredict as taken on last iteration of inner loop</li> <li>Then mispredict as not taken on first iteration of inner loop next time around</li> </ul> <p>\u53ef\u4ee5\u4fee\u6539\u9884\u6d4b\u65b9\u5f0f\uff1a\u53ea\u6709\u8fde\u7eed\u9519\u8bef\u4e24\u6b21\u624d\u4f1a\u4fee\u6539\u6211\u4eec\u7684\u9884\u6d4b\u3002\u5373 2-Bit Predictor. </p>"},{"location":"CO/CO4/#calculating-the-branch-target","title":"Calculating the Branch Target","text":"<p>\u5373\u4f7f branch \u547d\u4e2d\u4e86\uff0c\u6211\u4eec\u4e5f\u6709\u4e00\u4e2a\u65f6\u949f\u7684 bubble \u6765\u8ba1\u7b97\u5730\u5740\u3002 \u4f46 branch \u8981\u8df3\u8f6c\u7684\u5730\u5740\u5176\u5b9e\u662f\u53ef\u4ee5\u5b58\u4e0b\u6765\u7684\u3002  </p> <p>Branch target buffer</p> <ul> <li>Cache of target addresses</li> <li>Indexed by PC when instruction fetched If hit and instruction is branch predicted taken, can fetch target immediately</li> </ul>"},{"location":"CO/CO4/#exceptions-and-interrupts","title":"Exceptions and Interrupts","text":"<p>\u201cUnexpected\u201d events requiring change in flow of control.</p> <ul> <li>Exception \u5f02\u5e38 Arises within the CPU e.g. undefined opcode, syscall, \u2026</li> <li>Interrupt \u4e2d\u65ad From an external I/O controller</li> </ul>"},{"location":"CO/CO4/#risc-v-privileged","title":"RISC-V Privileged","text":"<ul> <li>The machine level has the highest privileges</li> </ul>"},{"location":"CO/CO4/#control-and-status-registers-csrs","title":"Control and Status Registers (CSRs)","text":"<ul> <li>\u6bcf\u4e2a\u6a21\u5f0f\u4e0b\u7684\u5f02\u5e38\u4e2d\u65ad\u90fd\u6709\u4ed6\u4eec\u81ea\u5df1\u5bf9\u5e94\u7684<code>csr</code>\u5bc4\u5b58\u5668\u4ee5\u53ca\u4e2d\u65ad\u6307\u4ee4\u3002</li> </ul> <p>Warning</p> <p>CSR Instruction\u7684\u7279\u6b8a\u4e4b\u5904\u5728\u4e8e\u4ed6\u4eec\u53ef\u4ee5\u540c\u65f6\u5b8c\u6210\u5bf9\u540c\u4e00\u4e2a\u5bc4\u5b58\u5668\u7684\u8bfb\u5199</p> <ul> <li><code>MIE</code>\u53ef\u4ee5\u5c4f\u853d\u6240\u6709\u7684\u4e2d\u65ad</li> </ul> <p></p>"},{"location":"CO/CO4/#handling-exceptions","title":"Handling Exceptions","text":"<ul> <li>Save PC of offending (or interrupted) instruction In RISC-V: Supervisor Exception Program Counter(SEPC)</li> <li>Save indication of the problem In RISC-V: Supervisor Exception Cause Register(SCAUSE) 64 bits, but most bits unused e.g. Exception code field: 2 for undefined opcode, 12 for hardware malfunction...</li> <li>Jump to handler   \u5fc5\u987b\u7531\u786c\u4ef6\u8df3\u5230\u8fd9\u4e2a\u5730\u5740\u3002<ul> <li>Direct   \u6240\u6709\u5f02\u5e38\u8df3\u5230\u56fa\u5b9a\u5730\u5740\u3002  </li> <li>Vectored Interrupts   \u4e2d\u65ad\u5411\u91cf   Handler address determined by the cause.   Exception vector address to be added to a vector table base register  </li> </ul> </li> </ul> <p>\u5f53\u591a\u4e2a\u5f02\u5e38/\u4e2d\u65ad\u540c\u65f6\u6765\u65f6\uff0c\u5982\u4f55\u5904\u7406\uff1f</p>"},{"location":"CO/CO4/#handler-actions","title":"Handler Actions","text":"<p>\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f</p> <ul> <li>Read cause, and transfer to relevant handler</li> <li>Determine action required  </li> <li>If restartable  <ul> <li>Take corrective action</li> <li>use SEPC to return to program</li> </ul> </li> <li>Otherwise<ul> <li>Terminate program</li> <li>Report error using SEPC, SCAUSE, ...</li> </ul> </li> </ul>"},{"location":"CO/CO4/#exceptions-in-a-pipeline","title":"Exceptions in a Pipeline","text":"<p>Another form of control hazard.  </p> <p>Consider malfunction on add in EX stage.  <code>add x1, x2, x1</code> </p> <ul> <li>Prevent x1 from being clobbered</li> <li>Complete previous instructions</li> <li>Flush add and subsequent instructions</li> <li>Set SEPC and SCAUSE register values</li> <li>Transfer control to handler</li> </ul>"},{"location":"CO/CO4/#instruction-level-parallelism-ilp","title":"Instruction-Level Parallelism (ILP)","text":"<p>Pipelining: executing multiple instructions in parallel \u6307\u4ee4\u7ea7\u5e76\u884c</p> <p>To increase ILP</p> <ul> <li>Deeper pipeline \u8ba9\u6bcf\u4e00\u7ea7\u6d41\u6c34\u7ebf\u505a\u66f4\u5c11\u7684\u4e8b\u60c5\uff0c\u8fd9\u6837\u4e5f\u53ef\u4ee5\u63d0\u9ad8\u5de5\u4f5c\u9891\u7387\u3002 \u4f46\u6d41\u6c34\u7ebf\u4e0d\u80fd\u65e0\u9650\u7ec6\u5206\uff0c\u56e0\u4e3a\u6d41\u6c34\u7ebf\u5bc4\u5b58\u5668\u4e5f\u4f1a\u5e26\u6765\u5f00\u9500\u3002  </li> <li>Multiple issue  \u591a\u53d1\u5c04 \u8fd9\u6837\u53ef\u4ee5\u505a\u5230 CPI &lt; 1. \u4f7f\u7528 Instructions Per Cycle (IPC) </li> </ul>"},{"location":"CO/CO4/#multiple-issue","title":"Multiple issue","text":"<ul> <li>Static multiple issue \u7f16\u8bd1\u5668\u628a\u80fd\u591f\u540c\u65f6\u653e\u5230\u6d41\u6c34\u7ebf\u7684\u6307\u4ee4\u6392\u597d \u7f16\u8bd1\u5668\u8981\u80fd\u68c0\u6d4b\uff0c\u907f\u514d\u7ade\u4e89</li> <li>Dynamic multiple issue CPU \u81ea\u5df1\u51b3\u5b9a\u6267\u884c\u90a3\u4e9b\u6307\u4ee4\uff0c\u7f16\u8bd1\u5668\u4f1a\u5e2e\u5fd9\u91cd\u6392\u6307\u4ee4\uff0c\u4f46\u8fd8\u662f\u7531 CPU \u89e3\u51b3\u7ade\u4e89\u3002</li> </ul>"},{"location":"CO/CO4/#static-multiple-issue","title":"Static multiple issue","text":"RISC-V with Static Dual Issue <p>ALU/branch \u6307\u4ee4\u4e0d\u7528\u8bbf\u95ee\u5185\u5b58\u3002  </p> <p>\u6240\u4ee5\u8fd9\u4e24\u6761\u4e0d\u80fd\u540c\u65f6\u53d1\u51fa\uff0c\u56e0\u4e3a\u5b58\u5728\u7ade\u4e89\u5173\u7cfb\u3002  </p> <p>Loop Unrolling \u5faa\u73af\u5c55\u5f00\uff08\u4f46\u6ce8\u610f\u6307\u4ee4\u95f4\u8981\u5c3d\u91cf\u51cf\u5c11\u76f8\u540c\u5bc4\u5b58\u5668\u7684\u4f9d\u8d56\uff09</p> <p>Use different registers per replication</p> <ul> <li>Called \u201cregister renaming\u201d</li> <li>Avoid loop-carried \u201canti-dependencies\u201d</li> </ul> Loop Unrolling Example <p> </p>"},{"location":"CS61A/","title":"CS61A","text":"<p>Abstract</p> <p>CS61A\u8bfe\u7a0b\u53ca\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p>"},{"location":"CS61A/61a1/","title":"1 \u4f7f\u7528\u51fd\u6570\u6784\u9020\u62bd\u8c61","text":""},{"location":"CS61A/61a1/#11","title":"1.1 \u7b2c\u4e00\u4e2a\u4f8b\u5b50","text":"<pre><code>from urllib.request import urlopen\nshakespeare = urlopen('https://www.composingprograms.com/shakespeare.txt')\nwords = set(shakespeare.read().decode().split())\nprint({w for w in words if len(w) == 6 and w[::-1] in words})\n# {'drawer', 'redder', 'diaper', 'reward', 'repaid'}\n</code></pre> <ul> <li> <p>\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f\uff1aPython \u4ee3\u7801\u7531\u8868\u8fbe\u5f0f\u548c\u8bed\u53e5\u7ec4\u6210\uff0c\u4ece\u5e7f\u4e49\u4e0a\u8bb2\uff0c\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7531\u4ee5\u4e0b\u6307\u4ee4\u7ec4\u6210   1. \u8ba1\u7b97\u4e00\u4e9b\u503c   2. \u6267\u884c\u4e00\u4e9b\u64cd\u4f5c</p> </li> <li> <p>\u51fd\u6570\uff1a\u51fd\u6570\u5c01\u88c5\u4e86\u64cd\u4f5c\u6570\u636e\u7684\u903b\u8f91\u3002<code>urlopen</code> \u5c31\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u800c\u7f51\u5740\u662f\u4e00\u4e2a\u6570\u636e\uff0c\u838e\u58eb\u6bd4\u4e9a\u7684\u620f\u5267\u662f\u53e6\u4e00\u4e2a\u6570\u636e\u3002\u4ece\u524d\u8005\u5230\u540e\u8005\u7684\u8f6c\u6362\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u5f88\u590d\u6742\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u79cd\u590d\u6742\u6027\u9690\u85cf\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\uff0c\u4ece\u800c\u80fd\u591f\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u8868\u8fbe\u5f0f\u6765\u8df3\u8fc7\u8be5\u8fc7\u7a0b\u3002\u51fd\u6570\u662f\u672c\u7ae0\u7684\u4e3b\u9898\u3002</p> </li> <li>\u5bf9\u8c61\uff1a<code>set</code> \u5c31\u662f\u4e00\u79cd\u5bf9\u8c61\uff0c\u652f\u6301\u5982\u8ba1\u7b97\u4ea4\u96c6\u548c\u96c6\u5408\u5173\u7cfb\uff08membership\uff09\u7b49\u8fd0\u7b97\u3002\u5bf9\u8c61\u65e0\u7f1d\u6574\u5408\u4e86\u6570\u636e\u4ee5\u53ca\u7528\u4e8e\u64cd\u4f5c\u8be5\u6570\u636e\u7684\u903b\u8f91\uff0c\u5e76\u9690\u85cf\u4e86\u4e8c\u8005\u7684\u590d\u6742\u6027\u3002\u5bf9\u8c61\u662f\u7b2c\u4e8c\u7ae0\u7684\u4e3b\u9898\u3002</li> <li>\u89e3\u91ca\u5668\uff1a\u590d\u5408\u8868\u8fbe\u5f0f\u7684\u6c42\u89e3\u9700\u8981\u4ee5\u4e00\u4e2a\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u6765\u7cbe\u786e\u89e3\u91ca\u4ee3\u7801\u7684\u8fc7\u7a0b\u3002\u5b9e\u73b0\u8fd9\u6837\u7684\u8fc7\u7a0b\uff0c\u7528\u4e8e\u8ba1\u7b97\u590d\u5408\u8868\u8fbe\u5f0f\u7684\u7a0b\u5e8f\u5c31\u79f0\u4e3a\u89e3\u91ca\u5668\u3002\u89e3\u91ca\u5668\u7684\u8bbe\u8ba1\u548c\u5b9e\u73b0\u662f\u7b2c\u4e09\u7ae0\u7684\u4e3b\u9898\u3002</li> </ul>"},{"location":"CS61A/61a1/#12","title":"1.2 \u7f16\u7a0b\u8981\u7d20","text":"<p>\u8fd9\u6837\uff0c\u5f53\u6211\u4eec\u63cf\u8ff0\u4e00\u79cd\u8bed\u8a00\u65f6\uff0c\u5c31\u9700\u8981\u7279\u522b\u6ce8\u610f\u8be5\u8bed\u8a00\u6240\u63d0\u4f9b\u7684\u80fd\u591f\u5c06\u7b80\u5355\u601d\u60f3\u7ec4\u5408\u6210\u590d\u6742\u601d\u60f3\u7684\u5de5\u5177\u3002\u6bcf\u4e00\u79cd\u5f3a\u5927\u7684\u8bed\u8a00\u90fd\u6709\u8fd9\u6837\u4e09\u79cd\u673a\u5236\uff1a</p> <ul> <li>\u539f\u59cb\u8868\u8fbe\u5f0f\u548c\u8bed\u53e5\uff1a\u8bed\u8a00\u6240\u5173\u5fc3\u7684\u6700\u7b80\u5355\u7684\u4e2a\u4f53</li> <li>\u7ec4\u5408\u65b9\u6cd5\uff1a\u7531\u7b80\u5355\u5143\u7d20\u7ec4\u5408\u6784\u5efa\u590d\u5408\u5143\u7d20</li> <li>\u62bd\u8c61\u65b9\u6cd5\uff1a\u547d\u540d\u590d\u5408\u5143\u7d20\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u5355\u5143\u8fdb\u884c\u64cd\u4f5c</li> </ul>"},{"location":"CS61A/61a1/#121","title":"1.2.1 \u51fd\u6570\u7c7b\u578b","text":"<ul> <li> <p>\u7eaf\u51fd\u6570\uff08Pure functions\uff09\uff1a\u51fd\u6570\u6709\u4e00\u4e9b\u8f93\u5165\uff08\u53c2\u6570\uff09\u5e76\u8fd4\u56de\u4e00\u4e9b\u8f93\u51fa\uff08\u8c03\u7528\u8fd4\u56de\u7ed3\u679c\uff09\u3002</p> </li> <li> <p>\u975e\u7eaf\u51fd\u6570\uff08Non-pure functions\uff09\uff1a\u9664\u4e86\u8fd4\u56de\u503c\u5916\uff0c\u8c03\u7528\u4e00\u4e2a\u975e\u7eaf\u51fd\u6570\u8fd8\u4f1a\u4ea7\u751f\u5176\u4ed6\u6539\u53d8\u89e3\u91ca\u5668\u548c\u8ba1\u7b97\u673a\u7684\u72b6\u6001\u7684\u526f\u4f5c\u7528\uff08side effect\uff09\u3002\u4e00\u4e2a\u5e38\u89c1\u7684\u526f\u4f5c\u7528\u5c31\u662f\u4f7f\u7528 <code>print</code> \u51fd\u6570\u4ea7\u751f\uff08\u975e\u8fd4\u56de\u503c\u7684\uff09\u989d\u5916\u8f93\u51fa\u3002</p> </li> </ul> <p>\u5982\u4f55\u7406\u89e3\u73af\u5883\uff1a</p> <ul> <li> <p>\u6c42\u89e3\u8868\u8fbe\u5f0f\u7684\u73af\u5883\u7531 \u5e27 \u5e8f\u5217\u7ec4\u6210\uff0c\u5b83\u4eec\u53ef\u4ee5\u88ab\u63cf\u8ff0\u4e3a\u4e00\u4e9b\u76d2\u5b50\u3002\u6bcf\u4e2a\u5e27\u90fd\u5305\u542b\u4e86\u4e00\u4e9b \u7ed1\u5b9a\uff0c\u5b83\u4eec\u5c06\u540d\u79f0\u4e0e\u5bf9\u5e94\u7684\u503c\u76f8\u5173\u8054\u3002\u5168\u5c40 \u5e27\uff08global frame\uff09\u53ea\u6709\u4e00\u4e2a\u3002\u8d4b\u503c\u548c\u5bfc\u5165\u8bed\u53e5\u4f1a\u5c06\u6761\u76ee\u6dfb\u52a0\u5230\u5f53\u524d\u73af\u5883\u7684\u7b2c\u4e00\u5e27\u3002\u76ee\u524d\uff0c\u6211\u4eec\u7684\u73af\u5883\u4ec5\u7531\u5168\u5c40\u5e27\u7ec4\u6210\u3002</p> </li> <li> <p>\u51fd\u6570\u540d\u79f0\u91cd\u590d\u4e24\u6b21\uff0c\u4e00\u6b21\u5728\u73af\u5883\u5e27\u4e2d\uff0c\u53e6\u4e00\u6b21\u662f\u4f5c\u4e3a\u51fd\u6570\u5b9a\u4e49\u7684\u4e00\u90e8\u5206\u3002\u51fd\u6570\u5b9a\u4e49\u4e2d\u51fa\u73b0\u7684\u540d\u79f0\u53eb\u505a \u5185\u5728\u540d\u79f0\uff08intrinsic name\uff09\uff0c\u5e27\u4e2d\u7684\u540d\u79f0\u53eb\u505a \u7ed1\u5b9a\u540d\u79f0\uff08bound name\uff09\u3002\u4e24\u8005\u4e4b\u95f4\u6709\u4e00\u4e2a\u533a\u522b\uff1a\u4e0d\u540c\u7684\u540d\u79f0\u53ef\u80fd\u6307\u7684\u662f\u540c\u4e00\u4e2a\u51fd\u6570\uff0c\u4f46\u8be5\u51fd\u6570\u672c\u8eab\u53ea\u6709\u4e00\u4e2a\u5185\u5728\u540d\u79f0</p> </li> <li> <p>\u8fd9\u91cc\u7684\u201c\u5e27\u201d\u53ef\u4ee5\u7406\u89e3\u4e3aC\u8bed\u8a00\u63d0\u5230\u7684\u5c40\u90e8\u53d8\u91cf\u4e0e\u5168\u5c40\u53d8\u91cf</p> </li> </ul> <p>\u51fd\u6570\u662f\u6240\u6709\u7a0b\u5e8f\uff08\u65e0\u8bba\u5927\u5c0f\uff09\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\uff0c\u5e76\u4e14\u662f\u6211\u4eec\u4f7f\u7528\u7f16\u7a0b\u8bed\u8a00\u6765\u8868\u8fbe\u8ba1\u7b97\u8fc7\u7a0b\u7684\u4e3b\u8981\u5a92\u4ecb\u3002</p> <ul> <li>\u6bcf\u4e2a\u51fd\u6570\u5e94\u8be5\u53ea\u8d1f\u8d23\u4e00\u4e2a\u4efb\u52a1\uff0c\u4e14\u8be5\u4efb\u52a1\u8981\u7528\u4e00\u4e2a\u7b80\u77ed\u7684\u540d\u79f0\u6765\u8bc6\u522b\uff0c\u5e76\u5728\u4e00\u884c\u6587\u672c\u4e2d\u8fdb\u884c\u63cf\u8ff0\u3002\u6309\u987a\u5e8f\u6267\u884c\u591a\u4e2a\u4efb\u52a1\u7684\u51fd\u6570\u5e94\u8be5\u5206\u4e3a\u591a\u4e2a\u51fd\u6570\u3002</li> <li>\u4e0d\u8981\u91cd\u590d\u81ea\u5df1<code>\uff08Don't repeat yourself\uff09</code>\u662f\u8f6f\u4ef6\u5de5\u7a0b\u7684\u6838\u5fc3\u539f\u5219\u3002\u8fd9\u4e2a\u6240\u8c13\u7684 DRY \u539f\u5219\u6307\u51fa\uff0c\u591a\u4e2a\u4ee3\u7801\u7247\u6bb5\u4e0d\u5e94\u8be5\u63cf\u8ff0\u91cd\u590d\u7684\u903b\u8f91\u3002\u76f8\u53cd\uff0c\u903b\u8f91\u5e94\u8be5\u53ea\u5b9e\u73b0\u4e00\u6b21\uff0c\u4e3a\u5176\u6307\u5b9a\u4e00\u4e2a\u540d\u79f0\u540e\u591a\u6b21\u4f7f\u7528\u3002\u5982\u679c\u4f60\u53d1\u73b0\u81ea\u5df1\u6b63\u5728\u590d\u5236\u7c98\u8d34\u4e00\u6bb5\u4ee3\u7801\uff0c\u90a3\u4e48\u4f60\u53ef\u80fd\u5df2\u7ecf\u627e\u5230\u4e86\u8fdb\u884c\u51fd\u6570\u62bd\u8c61\u7684\u673a\u4f1a\u3002</li> <li>\u5b9a\u4e49\u901a\u7528\u7684\u51fd\u6570\u3002\u6bd4\u5982\u4f5c\u4e3a <code>pow</code> \u51fd\u6570\u7684\u4e00\u4e2a\u7279\u4f8b\u7684\u5e73\u65b9\u51fd\u6570\u5c31\u4e0d\u5728 Python \u5e93\u4e2d\uff0c\u56e0\u4e3a <code>pow</code> \u51fd\u6570\u53ef\u4ee5\u5c06\u6570\u5b57\u8ba1\u7b97\u4e3a\u4efb\u610f\u6b21\u65b9\u3002</li> </ul>"},{"location":"CS61A/61a1/#13","title":"1.3 \u51fd\u6570\u6784\u9020","text":""},{"location":"CS61A/61a1/#higher-order-function","title":"Higher-Order Function","text":"<pre><code>def area_square(r):\n    return r * r\ndef area_circle(r):\n    return r * r * pi\ndef area_hexagon(r):\n    return r * r * 3 * sqrt(3)/2\n</code></pre> <ul> <li>\u6211\u4eec\u5bf9\u8fd9\u4e09\u4e2a\u51fd\u6570\u8fdb\u884c\u6574\u5408</li> </ul> <pre><code>def area(r, shape_constant):\n    assert r &gt; 0, 'A lenght must be positive'\n    return r * r * shape_constant\n\ndef area_square(r):\n    return area(r,1)\n\ndef area_circle(r):\n    return area(r,pi)\n\ndef area_hexagon(r):\n    return area(r, 3 * sqrt(3) / 2)\n</code></pre>"},{"location":"CS61A/61a1/#14-function-as-return-values","title":"1.4 Function as Return Values","text":"<pre><code>def make_adder(n):\n    def adder(k):\n        return k + n\n    return adder\n</code></pre> <ul> <li>Functions  defined within other function bodies are bound to names in a local frame</li> </ul> <pre><code>&gt;&gt;&gt; make_adder(2000)(13)\n2013\n&gt;&gt;&gt; f = make_adder(2000)\n&gt;&gt;&gt; f(13)\n2013\n</code></pre>"},{"location":"CS61A/61a1/#15-lambda","title":"1.5 Lambda \u8868\u8fbe\u5f0f","text":"<pre><code>square = lambda x: x * x\n</code></pre> <ul> <li><code>square = x * x</code> : <code>An expression: this one evaluates to a number</code></li> <li> <p><code>square = lambda x: x * x</code>: <code>Also an expression: evaluates to a function</code></p> </li> <li> <p><code>def square(x)</code>:<code>similar to lambda</code></p> </li> </ul> <ol> <li><code>both  create a function with the same domain, range, and behavior</code></li> <li><code>both bind that function to the square</code></li> <li><code>both functions have as their parent the frame in which they were defined</code></li> <li><code>only the def statement gives the function an intrinsic(\u56fa\u5b9a\u7684) name</code></li> </ol>"},{"location":"CS61A/61a1/#16-return","title":"1.6 Return\u51fd\u6570\u8fd4\u56de","text":"<pre><code>def search(f):\n    x = 0\n    while True:\n        if f(x):\n            return x\n        x += 1\n\ndef is_three(x):\n    return x == 3\n\ndef square(x):\n    return x*x\n\ndef inverse(f):\n    return lambda y:search(lambda x: f(x) == y)\n</code></pre>"},{"location":"CS61A/61a1/#17","title":"1.7 \u5206\u652f\u63a7\u5236","text":"<pre><code>def if_(c,f,t):\n    if c:\n        f\n    else:\n        t\n</code></pre> <p>\u8fd9\u6837\u662f\u884c\u4e0d\u901a\u7684\uff0c\u56e0\u4e3a\u5728\u4f20\u5165\u7684\u65f6\u5019\uff0c<code>if_</code>\u4f1a\u5bf9\u8fd9\u4e9b\u8fdb\u884c\u8bc4\u4f30\uff0c<code>f</code>\u548c<code>t</code>\u5982\u679c\u662f<code>invalid</code>\u7684\u5c31\u4f1a\u62a5\u9519\u3002</p>"},{"location":"CS61A/61a1/#18-self-reference","title":"1.8 Self-Reference","text":"<pre><code>def print_all(x)\n    print(x)\n    return print_all\n</code></pre> <pre><code>def print_sums(x):\n    print(x)\n    def next_sum(y):\n        return print_sums(x+y)\n    return next_sum\n</code></pre>"},{"location":"CS61A/61a1/#19-function-currying","title":"1.9 Function Currying","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9ad8\u9636\u51fd\u6570\u5c06\u4e00\u4e2a\u63a5\u53d7\u591a\u4e2a\u53c2\u6570\u7684\u51fd\u6570\u8f6c\u6362\u4e3a\u4e00\u4e2a\u51fd\u6570\u94fe\uff0c\u6bcf\u4e2a\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\u3002\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u51fd\u6570 <code>f(x, y)</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u53e6\u4e00\u4e2a\u51fd\u6570 <code>g</code> \u4f7f\u5f97 <code>g(x)(y)</code> \u7b49\u4ef7\u4e8e <code>f(x, y)</code>\u3002\u5728\u8fd9\u91cc\uff0c<code>g</code> \u662f\u4e00\u4e2a\u9ad8\u9636\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u5355\u4e2a\u53c2\u6570 <code>x</code> \u5e76\u8fd4\u56de\u53e6\u4e00\u4e2a\u63a5\u53d7\u5355\u4e2a\u53c2\u6570 <code>y</code> \u7684\u51fd\u6570\u3002\u8fd9\u79cd\u8f6c\u6362\u79f0\u4e3a\u67ef\u91cc\u5316\uff08Curring\uff09\u3002</p> <p>\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49 <code>pow</code> \u51fd\u6570\u7684\u67ef\u91cc\u5316\u7248\u672c\uff1a</p> <pre><code>&gt;&gt;&gt; def curried_pow(x):\n        def h(y):\n            return pow(x, y)\n        return h\n&gt;&gt;&gt; curried_pow(2)(3)\n8\n</code></pre>"},{"location":"CS61A/61a1/#110-decorator","title":"1.10 \u51fd\u6570\u88c5\u9970\u5668 Decorator","text":"<pre><code>def trace1(fn):\n    def traced(x):\n        print('Calling',fn,'on argument',x)\n        return fn(x)\n    return traced\n\n@trace1\ndef square(x):\n    return x*x\n\n@trace1\ndef sum_squares_up_to(n):\n    k = 1\n    total = 0\n    while k &lt;= n:\n        total, k = total + square(k), k+1\n    return total\n</code></pre>"},{"location":"CS61A/61a1/#111","title":"1.11 \u65ad\u8a00\u6d4b\u8bd5","text":"<p>\u65ad\u8a00\uff08Assertions\uff09\uff1a\u7a0b\u5e8f\u5458\u4f7f\u7528 assert \u8bed\u53e5\u6765\u9a8c\u8bc1\u662f\u5426\u7b26\u5408\u9884\u671f\uff0c\u4f8b\u5982\u9a8c\u8bc1\u88ab\u6d4b\u8bd5\u51fd\u6570\u7684\u8f93\u51fa\u3002assert \u8bed\u53e5\u5728\u5e03\u5c14\u4e0a\u4e0b\u6587\u4e2d\u6709\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u540e\u9762\u662f\u4e00\u4e2a\u5e26\u5f15\u53f7\u7684\u6587\u672c\u884c\uff08\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u90fd\u53ef\u4ee5\uff0c\u4f46\u8981\u4fdd\u6301\u4e00\u81f4\uff09\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u7ed3\u679c\u4e3a\u5047\u503c\uff0c\u5219\u663e\u793a\u8be5\u884c</p> <pre><code>&gt;&gt;&gt; def fib_test():\n\u00a0\u00a0\u00a0     assert fib(2) == 1, '\u7b2c\u4e8c\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5e94\u8be5\u662f 1'\n\u00a0\u00a0\u00a0     assert fib(3) == 1, '\u7b2c\u4e09\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5e94\u8be5\u662f 1'\n\u00a0\u00a0\u00a0     assert fib(50) == 7778742049, '\u5728\u7b2c\u4e94\u5341\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u53d1\u751f Error'\n</code></pre>"},{"location":"CS61A/61a2/","title":"2 \u4f7f\u7528\u6570\u636e\u7ed3\u6784\u6784\u9020\u62bd\u8c61","text":""},{"location":"CS61A/61a2/#21","title":"2.1 \u5e8f\u5217","text":"<pre><code>digits  = [1, 8, 2, 8]\n\nlen(digits) = 4\n\ndigits[3] = 8         # getitem(digits, 3)\n\n[2, 7] + digits * 2   # add([2, 7], mul(digits, 2))\n[2, 7, 1, 8, 2, 8, 1, 8, 2, 8]\n\npairs = [[10, 20], [30, 40]]\npairs[1] = [30, 40]\npairs[1][0] = 30\n</code></pre>"},{"location":"CS61A/61a2/#22-for","title":"2.2 For\u5faa\u73af","text":"<pre><code>for &lt;name&gt; in &lt;expression&gt;:\n    &lt;suite&gt;\n</code></pre>"},{"location":"CS61A/61a2/#23-sequence-unpacking-in-for-statements","title":"2.3 Sequence Unpacking in For Statements(\u5e8f\u5217\u89e3\u5305)","text":"<pre><code>pairs = [[1, 2], [2, 2], [3, 2], [4, 4]]\nsame_count = 0\n\nfor x, y in pairs:\n    if x == y:\n        same_count += 1\n</code></pre>"},{"location":"CS61A/61a2/#24-equal-and-same","title":"2.4 Equal and Same","text":"<pre><code>b = [10]\na = b\n&gt;&gt;&gt; a == b\nTrue\n&gt;&gt;&gt; b.append(20)\n&gt;&gt;&gt; a == b\nTrue\n</code></pre> <pre><code>b = [10]\na = [10]\na == b\n&gt;&gt;&gt; b.append(20)\n&gt;&gt;&gt; a == b\nFalse\n</code></pre> <pre><code>&gt;&gt;&gt; s = [3, 4]\n&gt;&gt;&gt; t = [5, 6]\n&gt;&gt;&gt; s.append(t)\n&gt;&gt;&gt; s\n[3, 4, [5, 6]]\n&gt;&gt;&gt; t = 0\n&gt;&gt;&gt; s\n[3, 4, [5, 6]]\n&gt;&gt;&gt; t\n0\n&gt;&gt;&gt; t = [5, 6]\n&gt;&gt;&gt; s.extend(t)\n&gt;&gt;&gt; s\n[3, 4, [5, 6], 5, 6]\n&gt;&gt;&gt; t = 0\n&gt;&gt;&gt; s\n[3, 4, [5, 6], 5, 6]\n</code></pre>"},{"location":"CS61A/61a3/","title":"3 \u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1","text":"<p>Abstract</p> <p>\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff08OOP\uff09\u662f\u4e00\u79cd\u7ec4\u7ec7\u7a0b\u5e8f\u7684\u65b9\u6cd5\uff0c\u5b83\u5c06\u672c\u7ae0\u4ecb\u7ecd\u7684\u8bb8\u591a\u601d\u60f3\u7ed3\u5408\u5728\u4e00\u8d77\u3002\u4e0e\u6570\u636e\u62bd\u8c61\u4e2d\u7684\u51fd\u6570\u4e00\u6837\uff0c\u7c7b\u521b\u5efa\u4e86\u5728\u4f7f\u7528\u548c\u5b9e\u73b0\u6570\u636e\u4e4b\u95f4\u7684\u62bd\u8c61\u5c4f\u969c\u3002\u4e0e\u8c03\u5ea6\u5b57\u5178\uff08dispatch dictionaries\uff09\u4e00\u6837\uff0c\u5bf9\u8c61\u54cd\u5e94\u884c\u4e3a\u8bf7\u6c42\u3002\u4e0e\u53ef\u53d8\u6570\u636e\u7ed3\u6784\u4e00\u6837\uff0c\u5bf9\u8c61\u5177\u6709\u65e0\u6cd5\u4ece\u5168\u5c40\u73af\u5883\u76f4\u63a5\u8bbf\u95ee\u7684\u672c\u5730\u72b6\u6001\u3002Python \u5bf9\u8c61\u7cfb\u7edf\u63d0\u4f9b\u4e86\u65b9\u4fbf\u7684\u8bed\u6cd5\u6765\u4fc3\u8fdb\u4f7f\u7528\u8fd9\u4e9b\u6280\u672f\u6765\u7ec4\u7ec7\u7a0b\u5e8f\u3002\u8fd9\u79cd\u8bed\u6cd5\u7684\u5927\u90e8\u5206\u5728\u5176\u4ed6\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00\u4e4b\u95f4\u5171\u4eab\u3002</p>"},{"location":"CS61A/61a3/#31-definition","title":"3.1 Definition(\u7c7b\u7684\u5b9a\u4e49)","text":"<pre><code>class Account:\n    def __init__(self, account_holder):\n        self.balance = 0\n        self.holder = account_holder\n    def deposit(self, amount):\n        self.balance = self.balance + amount\n        return self.balance\n    def withdraw(self, amount):\n        if amount &gt; self.balance:\n            return 'Insufficient funds'\n        self.balance = self.balance - amount\n        return self.balance\n</code></pre> <p>\u8fd9\u91cc\u5efa\u4e86\u4e00\u4e2a<code>Account</code>\u7c7b</p>"},{"location":"CS61A/61a3/#32-inheritance","title":"3.2 Inheritance(\u7ee7\u627f)","text":"<p>Abstract</p> <p>\u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8303\u5f0f\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u53d1\u73b0\u4e0d\u540c\u7c7b\u578b\u4e4b\u95f4\u5b58\u5728\u5173\u8054\uff0c\u5c24\u5176\u662f\u5728\u7c7b\u7684\u4e13\u4e1a\u5316\u7a0b\u5ea6\u4e0a\u3002\u5373\u4f7f\u4e24\u4e2a\u7c7b\u5177\u6709\u76f8\u4f3c\u7684\u5c5e\u6027\uff0c\u5b83\u4eec\u7684\u7279\u6b8a\u6027\u4e5f\u53ef\u80fd\u4e0d\u540c\u3002</p> <pre><code>class CheckingAccount(Account):\n        \"\"\"\u4ece\u8d26\u53f7\u53d6\u94b1\u4f1a\u6263\u51fa\u624b\u7eed\u8d39\u7684\u8d26\u53f7\"\"\"\n        withdraw_charge = 1\n        interest = 0.01\n        def withdraw(self, amount):\n            return Account.withdraw(self, amount + self.withdraw_charge)\n</code></pre> <p>Note</p> <p>Python \u652f\u6301\u5b50\u7c7b\u4ece\u591a\u4e2a\u57fa\u7c7b\u7ee7\u627f\u5c5e\u6027\u7684\u6982\u5ff5\uff0c\u8fd9\u79cd\u8bed\u8a00\u529f\u80fd\u79f0\u4e3a\u591a\u91cd\u7ee7\u627f\uff08multiple inheritance\uff09\u3002</p> <pre><code>&gt;&gt;&gt; class AsSeenOnTVAccount(CheckingAccount, SavingsAccount):\n        def __init__(self, account_holder):\n            self.holder = account_holder\n            self.balance = 1           # \u8d60\u9001\u7684 1 $!\n</code></pre> <ul> <li>\u5982\u679c\u6ca1\u6709\u975e\u6b67\u4e49\u5f15\u7528\uff0c\u5c31\u6309\u9884\u671f\u6b63\u786e\u89e3\u6790</li> <li>\u4f46\u662f\uff0c\u5f53\u5f15\u7528\u4e0d\u660e\u786e\u65f6\uff0c\u4f8b\u5982\u5bf9<code>Account</code>\u548c<code>CheckingAccount</code>\u4e2d\u5b9a\u4e49\u7684<code>withdraw</code>\u65b9\u6cd5\u7684\u5f15\u7528\u3002Python\u4f7f\u7528\u79f0\u4e3aC3\u65b9\u6cd5\u89e3\u6790\u6392\u5e8f\u7684\u9012\u5f52\u7b97\u6cd5\u89e3\u6790\u6b64\u540d\u79f0\u3002\u53ef\u4ee5\u5728\u6240\u6709\u7c7b\u4e0a\u4f7f\u7528mro\u65b9\u6cd5\u67e5\u8be2\u4efb\u4f55\u7c7b\u7684\u65b9\u6cd5\u89e3\u6790\u987a\u5e8f\u3002</li> </ul> <pre><code>&gt;&gt;&gt; [c.__name__ for c in AsSeenOnTVAccount.mro()]\n['AsSeenOnTVAccount', 'CheckingAccount', 'SavingsAccount', 'Account', 'object']\n</code></pre>"},{"location":"CS61A/61a3/#33","title":"3.3 \u5b9e\u4f8b","text":"<p>Abstract</p> <p>\u6211\u4eec\u770b\u5230\u7c7b\u548c\u5bf9\u8c61\u672c\u8eab\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u548c\u5b57\u5178\u6765\u8868\u793a\u3002\u901a\u8fc7\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5b9e\u73b0\u5bf9\u8c61\u7cfb\u7edf\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u8bf4\u660e\u4f7f\u7528\u5bf9\u8c61\u7684\u9690\u55bb\u5e76\u4e0d\u9700\u8981\u7279\u5b9a\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u5373\u4f7f\u5728\u6ca1\u6709\u5185\u7f6e\u5bf9\u8c61\u7cfb\u7edf\u7684\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u662f\u9762\u5411\u5bf9\u8c61\u7684\u3002\u4e3a\u4e86\u5b9e\u73b0\u5bf9\u8c61\uff0c\u6211\u4eec\u5c06\u653e\u5f03\u70b9\u8868\u793a\u6cd5\uff08\u5b83\u9700\u8981\u5185\u7f6e\u8bed\u8a00\u652f\u6301\uff09\uff0c\u800c\u662f\u521b\u5efa\u884c\u4e3a\u65b9\u5f0f\u4e0e\u5185\u7f6e\u5bf9\u8c61\u7cfb\u7edf\u7684\u5143\u7d20\u975e\u5e38\u76f8\u4f3c\u7684\u8c03\u5ea6\u5b57\u5178\u3002\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u5982\u4f55\u901a\u8fc7\u8c03\u5ea6\u5b57\u5178\u5b9e\u73b0\u6d88\u606f\u4f20\u9012\u7684\u884c\u4e3a\u3002\u4e3a\u4e86\u5b8c\u5168\u5b9e\u73b0\u5bf9\u8c61\u7cfb\u7edf\uff0c\u6211\u4eec\u5728\u5b9e\u4f8b\u3001\u7c7b\u548c\u57fa\u7c7b\u4e4b\u95f4\u53d1\u9001\u6d88\u606f\uff0c\u5b83\u4eec\u90fd\u662f\u5305\u542b\u5c5e\u6027\u7684\u5b57\u5178\u3002</p> <p>\u5728\u5f00\u59cb\u6211\u4eec\u7684\u5b9e\u73b0\u4e4b\u524d\uff0c\u5047\u5b9a\u6211\u4eec\u6709\u4e00\u4e2a\u7c7b\u7684\u5b9e\u73b0\uff0c\u5b83\u53ef\u4ee5\u67e5\u51fa\u4efb\u4f55\u4e0d\u5c5e\u4e8e\u5b9e\u4f8b\u7684\u540d\u79f0\u3002\u6211\u4eec\u5c06\u4e00\u4e2a\u7c7b\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 make_instance \u7684\u5f62\u53c2 cls</p> <pre><code>def make_instance(cls):\n    \"\"\"Return a new object instance, which is a dispatch dictionary.\"\"\"\n    def get_value(name):\n        if name in attributes:\n            return attributes[name]\n        else:\n            value = cls['get'](name)\n            return bind_method(value, instance)\n    def set_value(name, value):\n        attributes[name] = value\n    attributes = {}\n    instance = {'get': get_value, 'set': set_value}\n    return instance\n</code></pre> <p><code>instance</code>\u662f\u4e00\u4e2a\u80fd\u591f\u54cd\u5e94<code>get</code>\u548c<code>set</code>\u6d88\u606f\u7684\u8c03\u5ea6\u5b57\u5178\u3002<code>set</code>\u6d88\u606f\u548c<code>Python</code>\u5bf9\u8c61\u7cfb\u7edf\u4e2d\u7684\u5c5e\u6027\u8d4b\u503c\u64cd\u4f5c\u76f8\u5bf9\u5e94\uff1a\u6240\u6709\u5df2\u7ecf\u8d4b\u503c\u7684\u5c5e\u6027\u76f4\u63a5\u5b58\u50a8\u5728\u5bf9\u8c61\u7684\u672c\u5730\u5c5e\u6027\u5b57\u5178\u4e2d\u3002\u5728<code>get</code>\u6d88\u606f\u4e2d\uff0c\u5982\u679c<code>name</code>\u6ca1\u6709\u51fa\u73b0\u5728\u672c\u5730<code>attributes</code>\u5b57\u5178\u4e2d\uff0c\u5219\u4f1a\u5728\u7c7b\u4e2d\u67e5\u627e\u3002\u5982\u679c\u4ece\u7c7b\u4e2d\u67e5\u627e\u8fd4\u56de\u7684\u503c\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5219\u8fd9\u4e2a\u51fd\u6570\u5fc5\u987b\u88ab\u7ed1\u5b9a\u5230\u5b9e\u4f8b\u3002</p> <pre><code>def bind_method(value, instance):\n    \"\"\"Return a bound method if value is callable, or value otherwise.\"\"\"\n    if callable(value):\n        def method(*args):\n            return value(instance, *args)\n        return method\n    else:\n        return value\n</code></pre> <p>\u6211\u4eec\u57fa\u4e8e\u5b57\u5178\u6784\u5efa\u7684\u5bf9\u8c61\u7cfb\u7edf\u5728\u5b9e\u73b0\u4e0a\u4e0e<code>Python</code>\u4e2d\u7684\u5185\u7f6e\u5bf9\u8c61\u7cfb\u7edf\u975e\u5e38\u76f8\u4f3c\u3002\u5728 Python \u4e2d\uff0c\u4efb\u4f55\u7528\u6237\u5b9a\u4e49\u7684\u7c7b\u7684\u5b9e\u4f8b\u90fd\u6709\u4e00\u4e2a\u7279\u6b8a\u5c5e\u6027<code>__dict__</code>\uff0c\u5b83\u5c06\u8be5\u5bf9\u8c61\u7684\u672c\u5730\u5b9e\u4f8b\u5c5e\u6027\u5b58\u50a8\u5728\u4e00\u4e2a\u5b57\u5178\u4e2d\uff0c\u5c31\u50cf\u6211\u4eec\u7684<code>attribute</code>\u5b57\u5178\u4e00\u6837\u3002\u4f46<code>Python</code>\u4e0e\u6211\u4eec\u7684\u7cfb\u7edf\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u533a\u5206\u4e86\u4e00\u4e9b\u7279\u6b8a\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u4e0e\u5185\u7f6e\u51fd\u6570\u4ea4\u4e92\uff0c\u4ee5\u786e\u4fdd\u8fd9\u4e9b\u51fd\u6570\u5bf9\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u53c2\u6570\u90fd\u80fd\u6b63\u786e\u8fd0\u884c\u3002</p>"},{"location":"CS61A/61a3/#34","title":"3.4 \u6cdb\u578b\u7f16\u7a0b","text":"<p>Abstract</p> <p>\u5bf9\u8c61\u62bd\u8c61\u7684\u4e00\u4e2a\u6838\u5fc3\u6982\u5ff5\u5c31\u662f\u6cdb\u578b\u51fd\u6570\uff0c\u8fd9\u79cd\u51fd\u6570\u80fd\u591f\u63a5\u53d7\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u3002\u6211\u4eec\u5c06\u601d\u8003\u4e09\u79cd\u4e0d\u540c\u7684\u7528\u4e8e\u5b9e\u73b0\u6cdb\u578b\u51fd\u6570\u7684\u6280\u672f\uff1a\u5171\u4eab\u63a5\u53e3\uff0c\u7c7b\u578b\u6d3e\u53d1\u548c\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u3002\u5728\u5efa\u7acb\u8fd9\u4e9b\u6982\u5ff5\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e5f\u4f1a\u53d1\u73b0\u4e00\u4e9b\u7279\u6027\uff0c\u8fd9\u4e9b\u7279\u6027\u652f\u6301<code>Python</code>\u5bf9\u8c61\u7cfb\u7edf\u521b\u6cdb\u578b\u51fd\u6570</p> <p>\u5bf9\u6bd4\u51fd\u6570\u91cd\u8f7d(\u540c\u4e00\u4f5c\u7528\u57df\u5185\u51fd\u6570\u540d\u76f8\u540c\uff0c\u53c2\u6570\u5217\u8868\u4e0d\u540c\u7684\u51fd\u6570)\uff0c\u51fd\u6570\u6a21\u677f\u53ea\u9700\u8981\u4e00\u4e2a\u51fd\u6570\u5c31\u5b9e\u73b0\u4e86\u51fd\u6570\u91cd\u8f7d\u7684\u90e8\u5206\u529f\u80fd(\u53c2\u6570\u4e2a\u6570\u76f8\u540c\u7c7b\u578b\u4e0d\u540c\uff0c\u51fd\u6570\u91cd\u8f7d\u9700\u8981\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u53c2\u6570\u5217\u8868\u4e0d\u540c\u7684\u51fd\u6570)</p> <p>\u51fd\u6570\u6a21\u677f\u5177\u4f53\u5316\uff0c\u51fd\u6570\u6a21\u677f\u5177\u4f53\u5316\u5c31\u662f\u5c06\u67d0\u4e00(\u67d0\u51e0)\u4e2a\u8981\u5904\u7406\u7684\u7c7b\u578b\u5355\u72ec\u5904\u7406\uff0c\u9700\u8981\u5355\u72ec\u5199\u4e00\u4e2a\u5b9e\u73b0\uff0c\u5f62\u5f0f\u662f<code>template&lt;&gt; void fun(type&amp; t)</code>;\uff0c\u51fd\u6570\u6a21\u677f\u7684\u5177\u4f53\u5316\u548c\u666e\u901a\u51fd\u6570\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\uff0c\u8c03\u7528\u987a\u5e8f\u662f<code>\u666e\u901a\u51fd\u6570 &gt; \u51fd\u6570\u6a21\u677f\u5177\u4f53\u5316 &gt; \u6a21\u677f\u51fd\u6570</code></p> <p>\u4ee5CS61A\u4e2d\u7684Number\u7c7b\u4e3a\u4f8b\u7406\u89e3</p>"},{"location":"CS61A/Lab/","title":"Lab \u8bb0\u5f55","text":"<p>\u8fd9\u91cc\u653e\u4e00\u4e2a\u4e2d\u6587\u7ffb\u8bd1\u7248\u9898\u76ee\u7684blog</p>"},{"location":"CS61A/Lab/#lab-0","title":"Lab 0","text":"<ul> <li>\u4ee3\u7801\u586b\u5145</li> </ul> <pre><code>def twenty_twenty():\n    \"\"\"Come up with the most creative expression that evaluates to 2020,\n    using only numbers and the +, *, and - operators.\n\n    &gt;&gt;&gt; twenty_twenty()\n    2020\n    \"\"\"\n    return 2020\n</code></pre> <ul> <li>\u8fd0\u884c\u8fc7\u7a0b</li> </ul> <pre><code>root@localhost:/mnt/d/86134/Desktop/CS61A/lab00# python3\nPython 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; from lab00 import *\n&gt;&gt;&gt; twenty_twenty()\n2020\n&gt;&gt;&gt;\n</code></pre> <ul> <li>\u524d\u9762\u51e0\u4e2a\u8fd0\u7b97\u7684<code>lab</code>\u90fd\u662f\u57fa\u7840\u7684\u914d\u7f6e\u73af\u5883\uff0c\u8fd9\u91cc\u5c31\u4e0d\u4e00\u4e00\u7f57\u5217\u4e86</li> </ul>"},{"location":"CS61A/Lab/#project-1-hog","title":"Project 1:  Hog","text":"<pre><code>    # BEGIN PROBLEM 1\n    IsOne = 0\n    sum = 0\n    for i in range(num_rolls):\n        now = dice()\n        if now == 1:\n            IsOne = 1\n        sum += now\n    return sum if IsOne != 1 else 1\n    # END PROBLEM 1\n</code></pre> <p>\u82e5\u6b64\u8f6e\u672c\u4eba\u4e0d\u51fa\u724c\uff0c\u5219\u53d6\u5bf9\u624b\u7684\u5f97\u5206\u5bf9\u5e94\u7684<code>digit</code>+<code>3</code>\u4f5c\u4e3a\u5f97\u5206</p> <pre><code>    # BEGIN PROBLEM 2\n    pi = pi // pow(10, 100 - score)\n    # END PROBLEM 2\n    return pi % 10 + 3\n</code></pre> <p>\u8fd9\u91cc\u5229\u7528<code>if - else</code>\u6765\u5224\u65ad\u5206\u652f</p> <pre><code>    # BEGIN PROBLEM 3\n    if num_rolls == 0:\n        return free_bacon(opponent_score)\n    else:\n        return roll_dice(num_rolls, dice)\n    # END PROBLEM 3\n</code></pre> <p>\u6c42\u6700\u5927\u516c\u56e0\u6570\u5e76\u4f9d\u636e\u9898\u610f\u5224\u65ad</p> <pre><code>    # BEGIN PROBLEM 4a\n    a, b = player_score, opponent_score\n    while b &gt; 0:\n        a, b = b, a % b\n    return player_score &gt; 0 and opponent_score &gt; 0 and a &gt;= 10\n    # END PROBLEM 4a\n</code></pre> <ul> <li><code>Python</code>\u53ef\u4ee5\u5b9e\u73b0\u51fd\u6570\u7684\u5d4c\u5957\u5b9a\u4e49</li> </ul> <pre><code>    def say(score0, score1, last_score = last_score, running_high = running_high):\n        new = last_score - running_high\n        if who == 0:\n            if score0 - last_score &gt; running_high:\n                running_high = score0 - last_score\n                print(running_high, 'point(s)! The most yet for Player 0')\n            last_score_tmp = score0\n        else:\n            if score1 - last_score &gt; running_high:\n                running_high_tmp = score1 - last_score\n                print(running_high, 'point(s)! The most yet for Player 1')\n            last_score = score1\n        return announce_highest(who, last_score, running_high)\n    return say\n</code></pre> <ul> <li><code>*args</code>\u8868\u793a\u4f20\u5165\u7684\u8fd9\u4e2a\u51fd\u6570\u7684\u6240\u6709\u53c2\u6570\uff0c\u540e\u9762\u4f7f\u7528\u8fd9\u4e2a<code>*arg</code>\u53ef\u4ee5\u7528\u8fd9\u4e9b\u53c2\u6570\u8c03\u7528\u51fd\u6570</li> </ul> <pre><code>&gt;&gt;&gt; def printed(f):\n...     def print_and_return(*args):\n...         result = f(*args)\n...         print('Result:', result)\n...         return result\n...     return print_and_return\n&gt;&gt;&gt; printed_pow = printed(pow)\n&gt;&gt;&gt; printed_pow(2, 8)\nResult: 256\n256\n&gt;&gt;&gt; printed_abs = printed(abs)\n&gt;&gt;&gt; printed_abs(-10)\nResult: 10\n10\n</code></pre>"},{"location":"DB/","title":"\u6570\u636e\u5e93\u7cfb\u7edf","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u6570\u636e\u5e93\u7cfb\u7edf\u201d \u8bfe\u7a0b\u53ca\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <ul> <li>Prof:\u5b59\u5efa\u4f36</li> <li>TA:\u8042\u4fca\u54f2/\u77f3\u5b87\u65b0</li> </ul> <p>Success</p> <ul> <li> chapter 1 Introduction</li> <li> chapter 2 Relational Model</li> <li> chapter 3 Introduction to SQL</li> <li> chapter 4 Intermediate SQL</li> </ul>"},{"location":"DB/DB1/","title":"Chapter 1 Introduction","text":"Abstract <ul> <li>Database Systems</li> <li>Database Applications</li> <li>Purpose of Database Systems</li> <li>View of Data</li> <li>Data Models</li> <li>Database Languages</li> <li>Database Design</li> <li>Database Engine</li> <li>Database Users and Administrators</li> <li>History of Database Systems</li> </ul>"},{"location":"DB/DB1/#database-systems","title":"Database Systems","text":"DBMS <ul> <li>Database is a collection of interrelated data about a enterprise, which is managed by a DBMS(Database Management System).</li> <li>The primary goal of a DBMS is to provide a way to store and retrieve database information that is both convenient and efficient. </li> <li>Management of data involves both de\ufb01ning structures for storage of information and providing mechanisms for the manipulation of information. </li> <li>The database system must ensure the safety of the information stored, despite system crashes or attempts at unauthorized access. </li> <li>If data are to be shared among several users, the system must provide concurrency control mechanisms to avoid possible anomalous results. </li> </ul> <p>Difference Between File processor and DBMS</p> <ul> <li>A file-processing system can only coordinate physical access of data, while a DBMS can coordinate both phisical and logical access.</li> <li>A file-processing system only allow accessing data through the way determined in advance, while a DBMS allow doing this flexibly.</li> <li>A file-processing system allows multiple programs access diffrent data at the same time, or 2 programs access the same file at the same time if they both have read-only access to it. On the contrary, a DBMS allows multiple users accessing the same data at the same time.</li> <li>In a file-processing system, a file written by one program may be unreadable for another program. But in a DBMS, data duplications are reduced by make the data physically available  to all the programs possessing access to it.</li> </ul>"},{"location":"DB/DB1/#purpose-of-database-systems","title":"Purpose of Database Systems","text":"<p>In the early days, database applications were built directly on top of file systems\uff0cwhich leads to:</p> <ul> <li> <p>Data redundancy\uff08\u6570\u636e\u5197\u4f59\uff09and inconsistency\uff08\u4e0d\u4e00\u81f4\uff09</p> <ul> <li>Multiple file formats, duplication of information in different files</li> </ul> </li> <li> <p>Data isolation\uff08\u6570\u636e\u5b64\u7acb\uff0c\u6570\u636e\u5b64\u5c9b\uff09 \u2014 multiple files and formats</p> </li> <li> <p>Difficulty in accessing data (\u5b58\u53d6\u6570\u636e\u56f0\u96be\uff09</p> <ul> <li>Need to write a new program to carry out each new task</li> </ul> </li> <li> <p>Integrity Problem(\u5b8c\u6574\u6027\u95ee\u9898\uff09</p> </li> </ul> <p>Info</p> <ul> <li>Integrity constraints become \u201cburied\u201d in program code rather than being stated explicitly(\u663e\u5f0f\u7684),\u6570\u636e\u4e0e\u7ea6\u675f\u6761\u4ef6\u5b58\u50a8\u5728\u6b64\u7a0b\u5e8f\u4e2d\uff0c\u4e0d\u662f\u663e\u5f0f\u7684</li> <li>Example:  \u201caccount balance &gt;=1\u201d</li> <li>Hard to add new constraints or change existing ones</li> </ul> <ul> <li>Atomicity problems(\u539f\u5b50\u6027\u95ee\u9898)</li> </ul> <p>Example</p> <ul> <li>Transfer of funds from one to another(\u8f6c\u8d26\u95ee\u9898)</li> <li>Failures may leave database in an inconsistent state with partial updates carried out</li> </ul> <ul> <li>Concurrent access anomalies(\u5e76\u53d1\u8bbf\u95ee\u5f02\u5e38)</li> </ul> <p>Example</p> <ul> <li>Concurrent access needed for performance</li> <li>Uncontrolled concurrent accesses can lead to inconsistencies</li> <li>Example: Two people reading a balance (say 100) and updating it by saving money (say 50 each) at the same time</li> </ul> <ul> <li>Security Problems(\u5b89\u5168\u6027\u95ee\u9898)</li> </ul> <p>Example</p> <ul> <li>\u94f6\u884c\u5ba1\u8ba1(Audit)</li> <li>\u6743\u9650(Privilege)</li> </ul>"},{"location":"DB/DB1/#characteristics-of-databases","title":"Characteristics of DataBases","text":"Abstract <ul> <li>data persistence(\u6570\u636e\u6301\u4e45\u6027)</li> <li>convenience in accessing data(\u6570\u636e\u8bbf\u95ee\u4fbf\u5229\u6027)</li> <li>data integrity \uff08\u6570\u636e\u5b8c\u6574\u6027\uff09</li> <li>concurrency control for multiple users(\u591a\u7528\u6237\u5e76\u53d1\u63a7\u5236)</li> <li>failure recovery\uff08\u6545\u969c\u6062\u590d\uff09 </li> <li>security  control\uff08\u5b89\u5168\u63a7\u5236\uff09</li> </ul>"},{"location":"DB/DB1/#data-models","title":"Data Models","text":"<ul> <li> <p>A collection of tools for describing </p> <ul> <li>Data (\u6570\u636e)</li> <li>Data relationships(\u8054\u7cfb)</li> <li>Data semantics(\u8bed\u4e49)</li> <li>Data constraints(\u7ea6\u675f)</li> </ul> </li> <li> <p>Relational Model(\u5173\u7cfb\u6a21\u578b)</p> </li> <li>Object-based data models <ul> <li>Object-oriented  (\u9762\u5411\u5bf9\u8c61\u6570\u636e\u6a21\u578b)</li> <li>Object-relational(\u5bf9\u8c61-\u5173\u7cfb\u6a21\u578b\u6a21\u578b)</li> </ul> </li> <li>Semistructured data model  (XML)(\u534a\u7ed3\u6784\u5316\u6570\u636e\u6a21\u578b)</li> <li>Other older models:<ul> <li>Network model  (\u7f51\u72b6\u6a21\u578b)</li> <li>Hierarchical model(\u5c42\u6b21\u6a21\u578b)</li> </ul> </li> <li>Entity-Relationship Model(\u5b9e\u4f53\u8054\u7cfb\u6a21\u578b)</li> </ul> <p></p> <p>\u8fd9\u91ccID\u53ef\u4ee5\u786e\u5b9a\u4e00\u884c\uff0c\u79f0\u4e4b\u4e3akey</p>"},{"location":"DB/DB1/#view-of-data","title":"View of data","text":"<p>View of data</p> <ul> <li>\u7269\u7406\u6a21\u5f0f:\u63cf\u8ff0\u6570\u636e\u5982\u4f55\u5b58\u50a8</li> <li>\u903b\u8f91\u6a21\u5f0f:\u63cf\u8ff0\u4e86\u5b58\u50a8\u7684\u6570\u636e\u4ee5\u53ca\u4e4b\u95f4\u5173\u7cfb</li> <li>\u89c6\u56fe\u6a21\u5f0f:\u5e94\u7528\u7a0b\u5e8f\u51fa\u4e8e\u5b89\u5168\u7b49\u76ee\u7684\u9690\u85cf\u4e86\u5927\u91cf\u7ec6\u8282\uff0c\u4e14\u662f\u591a\u6837\u7684</li> </ul> <p>\u76ee\u7684</p> <ul> <li>Hide the complexities(\u9690\u85cf\u590d\u6742\u6027)</li> <li>Enhance the adaptation to changes(\u589e\u5f3a\u9002\u5e94\u6027)</li> </ul>"},{"location":"DB/DB1/#schema-and-instance","title":"Schema and Instance","text":"<ul> <li>Similar to types and variables in programming languages</li> <li>Logical Schema\uff08\u903b\u8f91\u6a21\u5f0f\uff09\u2013 the logical structure of the database <ul> <li>Example: The database consists of information about a set of customers and accounts and the relationship between them</li> <li>Analogous to type information of a variable in a program</li> </ul> </li> <li>Physical schema \uff08\u7269\u7406\u6a21\u5f0f\uff09 \u2013 the overall physical  structure of the database </li> <li>Instance\uff08\u5b9e\u4f8b\uff09 \u2013 the actual content of the database at a particular point in time Analogous to the value of a variable</li> </ul>"},{"location":"DB/DB1/#data-independence","title":"Data Independence","text":"<ul> <li> <p>Physical Data Independence\uff08\u7269\u7406\u6570\u636e\u72ec\u7acb\u6027\uff09\u2013 the ability to modify the physical schema without changing the logical schema</p> <ul> <li>Applications depend on the logical schema</li> <li>In general, the interfaces between the various levels and components should be well defined so that changes in some parts do not seriously influence others.</li> </ul> </li> <li> <p>Logical Data Independence(\u903b\u8f91\u6570\u636e\u72ec\u7acb\u6027) \u2013 the ability to modify the logical schema without changing the user view schema</p> </li> </ul>"},{"location":"DB/DB1/#database-languages","title":"Database Languages","text":"Abstract <ul> <li>Data Definition Language (DDL) </li> <li>Data Manipulation Language (DML) </li> <li>SQL Query Language</li> <li>Application Program Interface \uff08API\uff09</li> </ul>"},{"location":"DB/DB1/#data-definition-language-ddl","title":"Data Definition Language (DDL)\uff08\u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff09","text":"<p>Specification notation for defining the database schema Example:    </p> <pre><code>create table instructor (\n    ID         char(5),                           \n    name       varchar(20),\n    dept_name  varchar(20),\n    salary     numeric(8,2)\n);\n</code></pre> <ul> <li>DDL compiler generates a set of table templates stored in a data dictionary\uff08\u6570\u636e\u5b57\u5178\uff09</li> <li>Data dictionary contains metadata (\u5143\u6570\u636e\uff0c i.e., data about data)<ul> <li>Database schema </li> <li>Integrity constraints\uff08\u5b8c\u6574\u6027\u7ea6\u675f\uff09<ul> <li>Primary key (ID uniquely identifies instructors)\uff08\u4e3b\u5065\uff09</li> <li>Referential integrity (references constraint in SQL)\uff08\u53c2\u7167\u5b8c\u6574\u6027\uff09<ul> <li>e.g. dept_name value in any instructor tuple must appear in department relation</li> </ul> </li> </ul> </li> <li>Authorization\uff08\u6743\u9650\uff09</li> </ul> </li> <li>\u5e38\u7528\u7684\u8bed\u53e5\u5173\u952e\u5b57\u6709 CREATE\u3001DROP\u3001ALTER \u7b49</li> </ul> <p>Example</p> <pre><code>CREATE TABLE \u8868\u540d(\n\u5217\u540d1 \u6570\u636e\u7c7b\u578b,\n\u5217\u540d2 \u6570\u636e\u7c7b\u578b,\n\u5217\u540d3 \u6570\u636e\u7c7b\u578b,\n...\n)\n\nALTER TABLE \u8868\u540d;\neg\uff1aALTER TABLE \u8868\u540d ADD \u5217\u540d \u6570\u636e\u7c7b\u578b;\uff08\u6dfb\u52a0\u4e00\u4e2a\u5217\uff09\n    ALTER TABLE \u8868\u540d CHANGE \u5217\u540d \u65b0\u5217\u540d \u65b0\u6570\u636e\u7c7b\u578b;\uff08\u4fee\u6539\u5217\u540d\uff09\n    ALTER TABLE \u8868\u540d DROP \u5217\u540d;\n\nDROP TABLE \u8868\u540d;\nDROP DATABASE \u6570\u636e\u5e93\u540d;\n</code></pre>"},{"location":"DB/DB1/#data-manipulation-language-dml","title":"Data Manipulation Language (DML)\uff08\u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff09","text":"<ul> <li>Language for accessing and manipulating the data organized by the appropriate data model</li> <li>DML also known as query language</li> <li>Two classes of languages <ul> <li>Procedural\uff08\u8fc7\u7a0b\u5f0f\uff09 \u2013 user specifies what data is required and how to get those data </li> <li>Declarative (nonprocedural\uff0c \u9648\u8ff0\u5f0f\uff0c\u975e\u8fc7\u7a0b\u5f0f) \u2013 user specifies what data is required without specifying how to get those data</li> </ul> </li> <li>SQL is the most widely used query language</li> </ul> <p>Example</p> <pre><code>INSERT INTO \u8868\u540d (\u5b57\u6bb51,\u5b57\u6bb52,...) values (\u67d0\u503c,\u67d0\u503c,...),(\u67d0\u503c,\u67d0\u503c,...);\n\nUPDATE \u8868\u540d SET \u5217\u540d=\u65b0\u503c WHERE \u9650\u5b9a\u6761\u4ef6;\n\nDELETE FROM \u8868\u540d WHERE \u9650\u5b9a\u6761\u4ef6;\n</code></pre>"},{"location":"DB/DB1/#sql-query-language","title":"SQL Query Language","text":"<p>SQL: widely used non-procedural language</p> Example <p></p>"},{"location":"DB/DB1/#database-design","title":"DataBase Design","text":""},{"location":"DB/DB1/#database-engine","title":"DataBase Engine","text":"Abstract <ul> <li>The storage manager</li> <li>The query processor  </li> <li>The transaction management component. </li> </ul>"},{"location":"DB/DB1/#storage-manager","title":"Storage Manager","text":"<ul> <li>A program module that provides the interface between the low-level data stored in the database and the application programs and queries submitted to the system.</li> <li>The storage manager is responsible to the following tasks: <ul> <li>Interaction with the OS file manager </li> <li>Efficient storing, retrieving and updating of data</li> </ul> </li> <li>The storage manager components include:<ul> <li>File manager</li> <li>Buffer manager</li> <li>Authorization and integrity manager</li> <li>Transaction manager</li> </ul> </li> <li>Covered in Part five - Chapters 12 , 13, 14 </li> <li>The storage manager implements several data structures as part of the physical system implementation:<ul> <li>Data files -- store the database itself</li> <li>Data dictionary --  stores metadata about the structure of the database, in particular the schema of the database.</li> <li>Indices --  can provide fast access to data items.  A database index provides pointers to those data items that hold a particular value.  </li> <li>Statistical data</li> </ul> </li> </ul>"},{"location":"DB/DB1/#query-processor","title":"Query Processor","text":"<ul> <li>The query processor components include:<ul> <li>DDL interpreter --  interprets DDL statements and records the definitions in the data dictionary.</li> <li>DML compiler -- translates DML statements in a query language into an evaluation plan consisting of low-level instructions that the query evaluation engine understands.</li> <li>The DML compiler performs query optimization; that is, it picks the lowest cost evaluation plan from among the various alternatives.</li> <li>Query evaluation engine -- executes low-level instructions generated by the DML compiler.</li> </ul> </li> </ul>"},{"location":"DB/DB1/#transaction-management","title":"Transaction Management(\u4e8b\u52a1\u7ba1\u7406)","text":"<ul> <li>A transaction \uff08\u4e8b\u52a1\uff09is a collection of operations that performs a single logical function in a database application.</li> <li>Recover Manager (\u6062\u590d\u7ba1\u7406\u5668)ensures that the database remains in a consistent (correct) state despite system failures (e.g., power failures and operating system crashes) and transaction failures.</li> <li>Concurrency-control manager\uff08\u5e76\u53d1\u63a7\u5236\u7ba1\u7406\u5668\uff09 controls the interaction among the concurrent transactions, to ensure the consistency of the database.</li> </ul>"},{"location":"DB/DB1/#database-users","title":"Database Users","text":""},{"location":"DB/DB1/#turing-award","title":"Turing Award","text":"<ul> <li>Charles W. Bachman(1924-2017)</li> <li>Edgar F. Codd (1923-2003)</li> <li>Jim Gray(1944-2007)</li> <li>Michael Stonebraker (1943~ )</li> </ul>"},{"location":"DB/DB10/","title":"Chapter 10 Data Storage Structures","text":"<p>Abstract</p> <ul> <li>File Organization</li> <li>Fixed-Length Records</li> <li>Variable-Length Records</li> <li>Organization of Records in Files</li> <li>Heap File Organization</li> <li>Sequential File Organization</li> <li>Multitable Clustering File Organization</li> <li>Table Partition</li> <li>Data-Dictionary Storage</li> <li>Storage Access &amp; Buffer manager</li> <li>LRU strategy</li> <li>Clock algorithm</li> <li>Columnar Representation</li> </ul>"},{"location":"DB/DB10/#file-organization","title":"File Organization","text":"<ul> <li>The database is stored as a collection of files.</li> <li>Each file is a sequence of records.</li> <li>A record is a sequence of fields.</li> <li>One approach:<ul> <li>assume record size is fixed</li> <li>each file has records of one particular type only</li> <li>different files are used for different relations</li> </ul> </li> <li>This case is easiest to implement; will consider variable length records later.</li> <li>We assume that records are smaller than a disk block</li> </ul>"},{"location":"DB/DB10/#fixed-length-records","title":"Fixed-Length Records","text":"<ul> <li>Simple approach:<ul> <li>Store record i starting from byte n * (i \u2013 1), where n is the size of each record.</li> <li>Record access is simple but records may cross blocks<ul> <li>Modification: do not allow records to cross block boundaries(\u786c\u4ef6\u9650\u5236)</li> </ul> </li> </ul> </li> </ul>"},{"location":"DB/DB10/#deleltion","title":"Deleltion","text":"<ul> <li>Deletion of record i:  alternatives:<ul> <li>move records \\(i + 1, . . ., n\\)  to \\(i, . . . , n \u2013 1\\)</li> <li>move record n  to i</li> <li>do not move records, but link all free records on a free list</li> </ul> </li> </ul> <p>Record 3 deleted</p> <p></p> <p>Record 3 deleted and replaced by record 11</p> <p></p> <p>List</p> <p></p>"},{"location":"DB/DB10/#variable-length-records","title":"Variable-Length Records","text":"<ul> <li>Variable-length records arise in database systems in several ways:<ul> <li>Storage of multiple record types in a file.</li> <li>Record types that allow variable lengths for one or more fields such as strings (varchar)</li> <li>Record types that allow repeating fields (used in some older data models).</li> </ul> </li> <li>Attributes are stored in order</li> <li>Variable length attributes represented by fixed size (offset, length), with actual data stored after all fixed length attributes</li> <li>Null values represented by null-value bitmap\uff08\u7a7a\u4f4d\u56fe\uff09</li> <li>Instructor\uff08id\uff0cname, dept_name, salary) </li> </ul> <p>\u8fd9\u4e2a\u56fe\u8bf4\u660e\u4e86\u7a7a\u4f4d\u56fe\u7684\u4f7f\u7528\uff0c\u5b83\u7528\u6765\u8868\u793a\u8bb0\u5f55\u7684\u54ea\u4e2a\u5c5e\u6027\u662f\u7a7a\u503c\u3002\u5728\u8fd9\u4e2a\u7279\u5b9a\u7684\u8bb0\u5f55\u4e2d\uff0c\u5982\u679csalary\u662f\u7a7a\u503c\uff0c\u8be5\u4f4d\u56fe\u7684\u7b2c\u56db\u4f4d\u5c06\u7f6e1\uff0c\u5b58\u50a8\u572812-19\u5b57\u8282\u7684salary\u503c\u5c06\u88ab\u5ffd\u7565\u3002</p> <p>\u5728\u4e00\u4e9b\u8868\u793a\u4e2d\uff0c\u7a7a\u4f4d\u56fe\u5b58\u50a8\u5728\u8bb0\u5f55\u7684\u5f00\u5934\uff0c\u5e76\u4e14\u5bf9\u4e8e\u7a7a\u5c5e\u6027\u4e0d\u5b58\u50a8\u6570\u636e\uff08\u503c\u6216\u504f\u79fb\u91cf/\u957f\u5ea6\uff09\u3002\u8fd9\u79cd\u8868\u793a\u4ee5\u62bd\u53d6\u8bb0\u5f55\u5c5e\u6027\u7684\u989d\u5916\u5de5\u4f5c\u4e3a\u4ee3\u4ef7\u6765\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\uff0c\u5bf9\u4e8e\u62e5\u6709\u5927\u91cf\u5b57\u6bb5\uff0c\u5e76\u4e14\u5927\u591a\u6570\u90fd\u662f\u7a7a\u7684\u7279\u5b9a\u5e94\u7528\uff0c\u8fd9\u6837\u7684\u8868\u793a\u7279\u522b\u6709\u7528</p>"},{"location":"DB/DB10/#variable-length-records-slotted-page-structure","title":"Variable-Length Records: Slotted Page Structure(\u5206\u69fd\u7684\u9875\u7ed3\u6784)","text":"<ul> <li>Slotted page\uff08\u5206\u69fd\u9875\uff09 header contains:<ul> <li>number of record entries(\u5757\u5934\u4e2d\u8bb0\u5f55\u6761\u76ee\u7684\u4e2a\u6570)</li> <li>end of free space in the block(\u5757\u4e2d\u7a7a\u95f2\u7a7a\u95f4\u7684\u672b\u5c3e\u5904)</li> <li>location and size of each record(\u4e00\u4e2a\u7531\u5305\u542b\u8bb0\u5f55\u4f4d\u7f6e\u548c\u5927\u5c0f\u7684\u8bb0\u5f55\u6761\u76ee\u7ec4\u6210\u7684\u6570\u7ec4)</li> </ul> </li> <li>Records can be moved around within a page to keep them contiguous with no empty space between them; entry in the header must be updated.</li> <li>Record pointers should not point directly to record \u2014 instead they should point to the entry for the record in header.</li> </ul>"},{"location":"DB/DB10/#organization-of-records-in-files","title":"Organization of Records in Files","text":"<ul> <li>Heap \u2013 record can be placed anywhere in the file where there is space(\u5806\u6587\u4ef6\u7ec4\u7ec7)</li> <li>Sequential \u2013 store records in sequential order, based on the value of the search key of each record(\u987a\u5e8f\u6587\u4ef6\u7ec4\u7ec7)</li> <li>In a  multitable clustering file organization  records of several different relations can be stored in the same file(\u591a\u8868\u805a\u7c07\u6587\u4ef6\u7ec4\u7ec7)</li> <li>Motivation: store related records on the same block to minimize I/O</li> <li>B+-tree file organization<ul> <li>Ordered storage even with inserts/deletes</li> </ul> </li> <li>Hashing \u2013 a hash function computed on search key; the result specifies in which block of the file the record should be placed(\u6563\u5217\u6587\u4ef6\u7ec4\u7ec7)</li> </ul>"},{"location":"DB/DB10/#heap-file-organization","title":"Heap File Organization","text":"<ul> <li>Records can be placed anywhere in the file where there is free space</li> <li>Records usually do not move once allocated</li> <li>Important to be able to efficiently find free space within file</li> <li>Free-space map<ul> <li>Array with 1 entry per block.  Each entry is a few bits to a byte, and records fraction of block that is free</li> <li>In example below, 3 bits per block, value divided by 8 indicates fraction of block that is free </li> <li>Can have second-level free-space map</li> <li>In example above, each entry stores maximum from 4 entries of first-level free-space map</li> </ul> </li> <li>Free space map written to disk periodically, OK to have wrong (old) values for some entries (will be detected and fixed)</li> </ul>"},{"location":"DB/DB10/#sequential-file-organization","title":"Sequential File Organization","text":"<p>\u987a\u5e8f\u6587\u4ef6\u662f\u4e3a\u4e86\u9ad8\u6548\u5904\u7406\u6309\u67d0\u4e2a\u641c\u7d22\u7801\u7684\u987a\u5e8f\u6392\u5e8f\u7684\u8bb0\u5f55\u800c\u8bbe\u8ba1\u7684</p> <p>(search key)\u641c\u7d22\u7801\u662f\u4efb\u4f55\u4e00\u4e2a\u5c5e\u6027\u6216\u8005\u5c5e\u6027\u7684\u96c6\u5408(\u751a\u81f3\u4e0d\u4e00\u5b9a\u662f\u8d85\u7801)</p> <ul> <li>Suitable for applications that require sequential processing of the entire file </li> <li>The records in the file are ordered by a search-key</li> </ul> <p>\u7ef4\u62a4\u7269\u7406\u987a\u5e8f\u662f\u56f0\u96be\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u4f7f\u7528\u94fe\u8868\u7ed3\u6784</p> <ul> <li>Deletion \u2013 use pointer chains</li> <li>Insertion \u2013locate the position where the record is to be inserted<ul> <li>if there is free space insert there </li> <li>if no free space, insert the record in an overflow block</li> <li>In either case, pointer chain must be updated</li> </ul> </li> <li>Need to reorganize the file from time to time to restore sequential order(\u91cd\u7ec4\uff0c\u6d88\u8017\u5f88\u5927\uff0c\u4e00\u822c\u5728\u7cfb\u7edf\u8d1f\u8f7d\u5f88\u4f4e\u7684\u65f6\u5019\u8fdb\u884c)</li> </ul>"},{"location":"DB/DB10/#multitable-clustering-file-organization","title":"Multitable Clustering File Organization","text":"<p>\u5f88\u591a\u5173\u7cfb\u6570\u636e\u5e93\u7cfb\u7edf\u5c06\u6bcf\u4e2a\u5173\u7cfb\u5b58\u50a8\u5728\u5355\u72ec\u7684\u6587\u4ef6\u91cc\uff0c\u4ee5\u4fbf\u5b83\u4eec\u53ef\u4ee5\u5229\u7528\u64cd\u4f5c\u7cfb\u7edf\u6240\u63d0\u4f9b\u7684\u6587\u4ef6\u7cfb\u7edf\u7684\u6240\u6709\u597d\u5904\u3002</p> <ul> <li>Store several relations in one file using a multitable clustering file organization(\u5728\u4e00\u5757\u4e2d\u5b58\u50a8\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u5173\u7cfb\u7684\u76f8\u5173\u8bb0\u5f55\u7684\u6587\u4ef6\u7ed3\u6784\uff0c\u5141\u8bb8\u5bf9\u8fde\u63a5\u7684\u9ad8\u6548\u5904\u7406\uff0c\u4f46\u4e5f\u4f1a\u5bfc\u81f4\u5176\u4ed6\u7c7b\u578b\u7684\u67e5\u8be2\u53d8\u6162)</li> </ul> <p>Example</p> department instructor <p></p> <ul> <li>good for queries involving join department \\(\\Join\\) instructor, and for queries involving one single department and its instructors</li> <li>bad for queries involving only department</li> <li>results in variable size records</li> <li>Can add pointer chains to link records of a particular relation</li> </ul>"},{"location":"DB/DB10/#data-dictionary-storage","title":"Data Dictionary Storage(\u6570\u636e\u5b57\u5178\u5b58\u50a8)","text":"<p>\u5b58\u50a8\u6570\u636e\u7684\u6570\u636e(\u6216\u8005\u8bf4\u662f\u5143\u6570\u636e)\uff0c</p> <p>The Data dictionary (also called system catalog) stores metadata; that is, data about data, such as</p> <ul> <li>Information about relations<ul> <li>names of relations</li> <li>names, types and lengths of attributes of each relation</li> <li>names and definitions of views</li> <li>integrity constraints</li> </ul> </li> <li>User and accounting information, including passwords</li> <li>Statistical and descriptive data<ul> <li>number of tuples in each relation</li> </ul> </li> <li>Physical file organization information<ul> <li>How relation is stored (sequential/hash/\u2026)</li> <li>Physical location of relation </li> </ul> </li> <li>Information about indices</li> </ul>"},{"location":"DB/DB10/#relational-representation-of-system-metadata","title":"Relational Representation of System Metadata","text":"<ul> <li>Relational representation on disk</li> <li>Specialized data structures designed for efficient access, in memory</li> </ul>"},{"location":"DB/DB10/#storage-access","title":"Storage Access","text":"<p>Abstract</p> <ul> <li>Blocks are units of both storage allocation and data transfer.</li> <li>Database system seeks to minimize the number of block transfers between the disk and memory.  We can reduce the number of disk accesses by keeping as many blocks as possible in main memory.</li> <li>Buffer\u2013 portion of main memory available to store copies of disk blocks.</li> <li>Buffer manager \u2013 subsystem responsible for allocating buffer space in main memory. </li> </ul>"},{"location":"DB/DB10/#buffer-manager-in-dbms","title":"Buffer Manager in DBMS","text":"<p>\u6570\u636e\u5e93\u7cfb\u7edf\u4e00\u822c\u5e0c\u671b\u6700\u5927\u5316\u8981\u8bbf\u95ee\u7684\u5757\u5728\u4e3b\u5b58\u50a8\u5668\u4e2d\u7684\u51e0\u7387\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u8bbf\u95ee\u78c1\u76d8\u4e86\u3002\u7f13\u51b2\u533a(buffer)\u662f\u4e3b\u5b58\u50a8\u5668\u7528\u4e8e\u5b58\u50a8\u78c1\u76d8\u5757\u7684\u62f7\u8d1d\u7684\u90a3\u4e00\u90e8\u5206\u3002\u6bcf\u4e2a\u5757\u603b\u6709\u4e00\u4e2a\u62f7\u8d1d\u5b58\u653e\u5728\u78c1\u76d8\u4e0a\uff0c\u4f46\u662f\u78c1\u76d8\u4e0a\u7684\u53ef\u80fd\u6bd4\u7f13\u51b2\u533a\u91cc\u7684\u65e7\uff0c\u8d1f\u8d23\u7f13\u51b2\u533a\u5206\u914d\u7684\u5b50\u7cfb\u7edf\u6210\u4e3a\u7f13\u51b2\u533a\u7ba1\u7406\u5668(buffer manager)</p> <p></p> <ul> <li> <p>Programs call on the buffer manager when they need a block from disk.</p> <ul> <li>If the block is already in the buffer, buffer manager returns the address of the block in main memory</li> <li>If the block is not in the buffer, the buffer manager<ul> <li>Allocates space in the buffer for the block<ul> <li>Replacing (throwing out) some other block, if required, to make space for the new block.</li> <li>Replaced block written back to disk only if it was modified since the most recent time that it was written to/fetched from the disk.</li> </ul> </li> <li>Reads the block from the disk to the buffer, and returns the address of the block in main memory to requester. </li> </ul> </li> </ul> </li> <li> <p>Buffer replacement strategy (details coming up!)</p> </li> <li>Pinned block: memory block that is not allowed to be written back to disk(\u88ab\u9489\u4f4f\u7684\u5757\uff0c\u4e0d\u5141\u8bb8\u5199\u56de\uff0c\u5e2e\u52a9\u4fee\u590d\u7cfb\u7edf)<ul> <li>Pin done before reading/writing data from a block</li> <li>Unpin done when read /write is complete</li> <li>Multiple concurrent pin/unpin operations possible<ul> <li>Keep a pin count, buffer block can be evicted only if pin count = 0</li> </ul> </li> </ul> </li> <li>Shared and exclusive locks on buffer<ul> <li>Needed to prevent concurrent operations from reading page contents as they are moved/reorganized, and to ensure only one move/reorganize at a time</li> <li>Readers get shared lock, updates to a block require exclusive lock</li> <li>Locking rules:<ul> <li>Only one process can get exclusive lock at a time</li> <li>Shared lock cannot be concurrently with exclusive lock</li> <li>Multiple processes may be given shared lock concurrently</li> </ul> </li> </ul> </li> </ul> <p>LRU Example</p> <ul> <li>Supposing there are 4 buffer pages. </li> <li>Initial is empty occupied\u3002</li> <li>The access sequence is 1, 4, 8, 1, 5, 2, 3, 2, 4. </li> <li>According to the LRU policy , there are 3 times replacement occurred.</li> <li>\u6700\u8fd1\u6700\u5c11\u4f7f\u7528 </li> </ul>"},{"location":"DB/DB10/#buffer-replacement-policies","title":"Buffer-Replacement Policies","text":"<ul> <li>LRU strategy - replace the block least recently used .<ul> <li>Idea behind LRU \u2013 use past pattern of block references as a predictor of future references</li> </ul> </li> <li>Queries have well-defined access patterns (such as sequential scans), and a database system can use the information in a user\u2019s query to predict future references</li> <li>LRU can be a bad strategy for certain access patterns involving repeated scans of data</li> <li>For example: when computing the join of 2 relations r and s by a nested loops</li> </ul> <pre><code>for each tuple tr of r do           \n    for each tuple ts of s do      \n        if the tuples tr and ts match \u2026\n</code></pre> <ul> <li> <p>Mixed strategy with hints on replacement strategy provided by the query optimizer is preferable</p> </li> <li> <p>Toss-immediate strategy \u2013 frees the space occupied by a block as soon as the final tuple of that block has been processed(\u7acb\u5373\u4e22\u5f03\u7b56\u7565)</p> </li> <li>Most recently used (MRU) strategy \u2013  system must pin the block currently being processed.  After the final tuple of that block has been processed, the block is unpinned, and it becomes the most recently used block.(\u6700\u8fd1\u6700\u5e38\u4f7f\u7528)</li> <li>Buffer managers also support forced output of blocks for the purpose of recovery(\u5757\u7684\u5f3a\u5236\u5199\u51fa)</li> </ul>"},{"location":"DB/DB10/#clock-an-approximation-of-lru","title":"Clock: An approximation of LRU","text":"<ul> <li>Arrange block into a cycle, store one reference_bit per block</li> <li>When pin_count reduces to 0, set  reference _bit =1</li> <li>reference _bit as the 2<sup>nd</sup> chance bit</li> </ul> <p>When replacement necessary</p> <pre><code>    do for each block in cycle{     \n        if (reference_bit ==1)\n            set reference_bit=0;\n        else if (reference_bit ==0)\n            choose this block for replacement;\n    } until a page is chosen;\n</code></pre> <p></p> <p>\u65f6\u949f\u7f6e\u6362\u7b97\u6cd5\u5176\u5b9e\u662fLRU\u7684\u53d8\u79cd\uff0c\u770b\u8d77\u6765\u66f4\u52a0\u201c\u4f18\u96c5\u201d\uff0c\u6211\u4eec\u7ed9\u6bcf\u4e00\u4e2a\u8282\u70b9\u589e\u52a0\u4e00\u4e2abool\u6570\u636e\u7c7b\u578b\u7684REF\u5c5e\u6027\uff0c\u5f53\u8282\u70b9\u5bf9\u5e94\u9875\u9762\u88ab\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u5c06REF\u7f6e\u4e3atrue\u3002\u6211\u4eec\u8fd8\u4f1a\u521b\u5efa\u4e00\u4e2aclock\u7684\u6307\u9488hand\u6765\u5468\u671f\u6027\u7684\u6307\u5411\u7f13\u5b58\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u3002\u9700\u8981\u6362\u51fa\u65f6\uff0c\u6362\u51fa\u7684\u662f\u6307\u9488hand\u9047\u89c1\u7684\u7b2c\u4e00\u4e2aREF=false\u7684\u8282\u70b9\u3002\u5f53hand\u9047\u89c1\u4e00\u4e2aREF=true\u7684\u8282\u70b9\u65f6\uff0c\u5c06REF\u7f6e\u4e3afalse\u540e\uff0c\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002</p> <p>\u5173\u4e8e\u5173\u7cfb\u6570\u636e\u5b58\u50a8\u6709\u4e09\u79cd\u6a21\u578b\uff0c\u6309\u884c\u5b58\u653e\uff08Row Store\uff09\uff0c\u6309\u5217\u5b58\u653e(Column Store)\uff0c\u4ee5\u53ca\u8bba\u6587\u63d0\u51fa\u7684PAX\u6a21\u578b\u5728\u8ba8\u8bba\u533a\u6709\u63a2\u8ba8</p>"},{"location":"DB/DB10/#column-oriented-storage","title":"Column-Oriented Storage(\u5217\u5f0f\u5b58\u50a8)","text":"<ul> <li>Also known as columnar representation</li> <li>Store each attribute of a relation separately</li> </ul> <p>Example</p> <p></p>"},{"location":"DB/DB10/#columnar-representation","title":"Columnar Representation(\u5217\u72b6\u8868\u793a)","text":"<ul> <li>Benefits:<ul> <li>Reduced IO if only some attributes are accessed</li> <li>Improved CPU cache performance </li> <li>Improved compression</li> <li>Vector processing on modern CPU architectures</li> </ul> </li> <li>Drawbacks<ul> <li>Cost of tuple reconstruction from columnar representation</li> <li>Cost of tuple deletion and update</li> <li>Cost of decompression</li> </ul> </li> <li>Columnar representation found to be more efficient for decision support than row-oriented representation</li> <li>Traditional row-oriented representation preferable for transaction processing</li> <li>Some databases support both representations<ul> <li>Called hybrid row/column stores</li> </ul> </li> </ul>"},{"location":"DB/DB10/#columnar-file-representation","title":"Columnar File Representation","text":"<ul> <li>ORC(Optimized Row Columnar) and Parquet<ul> <li>File formats of Hadoop  HDFS </li> <li>Apache ORC is an open source, aself-describing type-aware columnar file format designed for Hadoop workloads.\u00a0</li> <li>Apache Parquet is an open source, column-oriented data file format designed for efficient data storage and retrieval. </li> <li>File formats with columnar storage inside file</li> <li>Very popular for big-data applications</li> </ul> </li> <li>Orc file format shown on right:</li> </ul>"},{"location":"DB/DB10/#storage-organization-in-main-memory-databases","title":"Storage Organization in Main-Memory Databases","text":"<ul> <li>Can store records directly in memory without a buffer manager</li> <li>Column-oriented storage can be used in-memory for decision support applications<ul> <li>Compression reduces memory requirement</li> </ul> </li> </ul>"},{"location":"DB/DB11/","title":"Chapter 11 Indexing","text":"<p>Abstract</p> <ul> <li>Basic Concepts</li> <li>Ordered Indices </li> <li>B+-Tree Index</li> <li>B+-Tree File Organization </li> <li>B-Tree Index Files</li> <li>Indices on Multiple Keys</li> <li>Indexing on Flash</li> <li>Indexing in Main Memory</li> <li>Write Optimized Indices<ul> <li>Log Structured Merge (LSM) Tree</li> <li>Buffer Tree</li> </ul> </li> <li>Bitmap Indices</li> </ul>"},{"location":"DB/DB11/#basic-concepts","title":"Basic Concepts","text":"<ul> <li>Indexing mechanisms used to speed up access to desired data.<ul> <li>E.g., author catalog in library</li> </ul> </li> <li>Search Key - attribute to set of attributes used to look up records in a file.</li> <li>An index file consists of records (called index entries) of the form</li> </ul> search-key pointer <ul> <li>Index files are typically much smaller than the original file </li> <li>Two basic kinds of indices:<ul> <li>Ordered indices:  search keys are stored in sorted order(\u987a\u5e8f\u7d22\u5f15)</li> <li>Hash indices: search keys are distributed uniformly across \u201cbuckets\u201d using a \u201chash function\u201d.(\u6563\u5217\u7d22\u5f15)</li> </ul> </li> </ul>"},{"location":"DB/DB11/#index-evaluation-metrics","title":"Index Evaluation Metrics(\u8bc4\u4f30\u6307\u6807)","text":"<ul> <li>Access types supported efficiently.  E.g., <ul> <li>Point query: records with a specified value in the attribute</li> <li>Range query: or records with an attribute value falling in a specified range of values.</li> </ul> </li> <li>Access time</li> <li>Insertion time</li> <li>Deletion time</li> <li>Space overhead</li> </ul>"},{"location":"DB/DB11/#ordered-indices","title":"Ordered Indices","text":"<p>\u662f\u5426\u805a\u96c6\u7d22\u5f15\u7684\u533a\u522b\u5728\u4e8e\u7d22\u5f15\u987a\u5e8f\u662f\u5426\u4e0e\u6587\u4ef6\u5b58\u50a8\u987a\u5e8f\u4e00\u81f4</p> <ul> <li>In an ordered index, index entries are stored sorted on the search key value.  E.g., author catalog in library.</li> <li>Primary index\uff08\u4e3b\u7d22\u5f15\uff09: in a sequentially ordered file, the index whose search key specifies the sequential order of the file.<ul> <li>Also called clustering index\uff08\u805a\u96c6\u7d22\u5f15\uff09</li> <li>The search key of a primary index is usually but not necessarily the primary key.</li> </ul> </li> <li>Secondary index\uff08\u8f85\u52a9\u7d22\u5f15\uff09: an index whose search key specifies an order different from the sequential order of the file.  Also called non-clustering index.</li> <li>Index-sequential file\uff08\u7d22\u5f15\u987a\u5e8f\u6587\u4ef6\uff09: ordered sequential file with a primary index.</li> </ul> <p>Primary index\uff08\u4e3b\u7d22\u5f15\uff09</p> <p></p> <p>primary index on ID attribute of instructor</p> <p>Secondary Indices Example</p> <p></p> <p>Secondary index on salary attribute of instructor</p>"},{"location":"DB/DB11/#dense-index-files","title":"Dense Index Files","text":"<ul> <li>Dense index(\u7a20\u5bc6\u7d22\u5f15) \u2014 Index record appears for every search-key value in the file. </li> <li>E.g. index on ID attribute of instructor relation </li> </ul> <p>Dense index on dept_name, with instructor  file sorted on dept_name</p> <p></p>"},{"location":"DB/DB11/#sparse-index-files","title":"Sparse Index Files","text":"<ul> <li>Sparse Index\uff08\u7a00\u758f\u7d22\u5f15\uff09:  contains index records for only some search-key values.<ul> <li>Applicable when records are sequentially ordered on search-key</li> </ul> </li> <li>To locate a record with search-key value K we:<ul> <li>Find index record with largest search-key value &lt; K</li> <li>Search file sequentially starting at the record to which the index record points</li> </ul> </li> </ul> <ul> <li>Compared to dense indices:<ul> <li>Less space and less maintenance overhead for insertions and deletions.</li> <li>Generally slower than dense index for locating records.</li> </ul> </li> <li>Good tradeoff: sparse index with an index entry for every block in file, corresponding to least search-key value in the block.</li> </ul>"},{"location":"DB/DB11/#multilevel-index","title":"Multilevel Index\uff08\u591a\u7ea7\u7d22\u5f15\uff09","text":""},{"location":"DB/DB12/","title":"Chapter 12 Query Processing","text":"<p>Abstract</p> <ul> <li>Basic Steps in Query Processing</li> <li>Measures of Query Cost</li> <li>Selection Operation  </li> <li>Sorting </li> <li>Join Operation </li> <li>Other Operations</li> <li>Evaluation of Expressions</li> </ul>"},{"location":"DB/DB12/#basic-steps-in-query-processing","title":"Basic Steps in Query Processing","text":"<ul> <li>Parsing and translation(\u8bed\u6cd5\u5206\u6790\u4e0e\u7ffb\u8bd1)<ul> <li>translate the query into its internal form.  This is then translated into relational algebra.</li> <li>Parser checks syntax, verifies relations</li> </ul> </li> <li>Optimization(\u4f18\u5316)<ul> <li>Amongst all equivalent evaluation plans choose the one with lowest cost. </li> </ul> </li> <li>Evaluation(\u6267\u884c)<ul> <li>The query-execution engine takes a query-evaluation plan, executes that plan, and returns the answers to the query.</li> </ul> </li> </ul> <p>Basic Steps in Query Processing</p> <p></p> <p></p> <ul> <li>\u8fd9\u4e2a\u7b97\u6cd5\u5728\u4e0b\u4e00\u7ae0\u6709\u5177\u4f53\u8bb2\u5230\uff0c\u5c31\u662f\u5c3d\u91cf\u628a\u9009\u62e9\u5f80\u53f6\u5b50\u4e0a\u63a8\uff0c\u5148\u8fde\u63a5\u7ed3\u679c\u6bd4\u8f83\u5c0f\u7684</li> </ul>"},{"location":"DB/DB12/#viewing-query-evaluation-plans","title":"Viewing Query Evaluation Plans(\u67e5\u8be2\u8ba1\u7b97\u8ba1\u5212)","text":"<ul> <li>Most database support explain <ul> <li>Displays plan chosen by query optimizer, along with cost estimates</li> <li>Some syntax variations between databases<ul> <li>Oracle:  explain plan for  followed by select * from table (dbms_xplan.display) <li>SQL Server:  set showplan_text on</li> <li>Some databases (e.g. PostgreSQL) support  explain analyse <ul> <li>Shows actual runtime statistics found by running the query, in addition to showing the plan </li> </ul> <li>Some databases (e.g. PostgreSQL) show cost as   f..l <ul> <li>f is the cost of delivering first tuple and l is cost of delivering all results </li> </ul> </li>"},{"location":"DB/DB12/#measures-of-query-cost","title":"Measures of Query Cost","text":"<ul> <li>Cost is generally measured as total elapsed time for answering query<ul> <li>Many factors contribute to time cost<ul> <li>disk accesses, CPU, or even network communication</li> </ul> </li> </ul> </li> <li>Typically disk access is the predominant cost, and is also relatively easy to estimate.</li> <li>Measured by taking into account<ul> <li>Number of seeks             * average-seek-cost</li> <li>Number of blocks read     * average-block-read-cost</li> <li>Number of blocks written * average-block-write-cost<ul> <li>Cost to write a block is greater than cost to read a block<ul> <li>data is read back after being written to ensure that the write was successful</li> </ul> </li> </ul> </li> </ul> </li> <li>For simplicity we just use the number of block transfers from disk and the number of seeks as the cost measures<ul> <li>\\(t_T\\) \u2013 time to transfer one block(\u4f20\u8f93\u4e00\u4e2a\u5757\u7684\u6570\u636e)</li> <li>\\(t_S\\) \u2013 time for one seek(\u78c1\u76d8\u5757\u5e73\u5747\u8bbf\u95ee\u65f6\u95f4)</li> <li>Cost for \\(b\\) block transfers plus \\(S\\) seeks \\(\\(b * t_T + S * t_S\\)\\)</li> </ul> </li> <li>\\(t_S\\) and \\(t_T\\) depend on where data is stored; with 4 KB blocks:<ul> <li>High end magnetic disk: \\(t_S = 4\\) msec and \\(t_T = 0.1\\) msec,       \\(t_S / t_T \u2248  40\\)</li> <li>SSD:  \\(t_S = 20 - 90\\) microsec and \\(t_T = 2-10\\) microsec for 4KB , \\(t_S / t_T \u2248 10\\)</li> </ul> </li> <li>We ignore CPU costs for simplicity<ul> <li>Real systems do take CPU cost into account</li> </ul> </li> <li>We ignore cost to writing output to disk in our cost formulae(\u5199\u5165\u66f4\u52a0\u82b1\u65f6\u95f4\u5b9e\u9645\u4e0a\uff0c\u56e0\u4e3a\u8fd8\u8981\u68c0\u67e5)</li> <li>Several algorithms can reduce disk IO by using extra buffer space<ul> <li>Amount of real memory available to buffer depends on other concurrent queries and OS processes, known only during execution<ul> <li>We often use worst case estimates, assuming only the minimum amount of memory needed for the operation is available</li> </ul> </li> </ul> </li> <li>Required data may be buffer resident already, avoiding disk I/O<ul> <li>But hard to take into account for cost estimation</li> </ul> </li> </ul>"},{"location":"DB/DB12/#selection-operation","title":"Selection Operation","text":"<p>Abstract</p> <p></p> <ul> <li>File scan </li> <li>Algorithm A1 (linear search).  Scan each file block and test all records to see whether they satisfy the selection condition.(\u8981\u505a\u4e00\u6b21\u626b\u63cf\u627e\u5230\u6587\u4ef6\u7684\u7b2c\u4e00\u4e2a\u5757)</li> <li>worst cost = \\(b_r * t_T + t_S\\)<ul> <li>\\(b_r\\) denotes number of blocks containing records from relation \\(r\\)</li> <li>If selection is on a key attribute, can stop on finding record average cost = \\((b_r /2) t_T + t_S\\)</li> <li>Linear search can be applied regardless of<ul> <li>selection condition or</li> <li>ordering of records in the file, or</li> <li>availability of indices</li> </ul> </li> </ul> </li> <li>Note: binary search generally does not make sense since data is not stored consecutively(\u6570\u636e\u8981\u662f\u8fde\u7eed\u5b58\u50a8\u7684)<ul> <li>except when there is an index available,</li> <li>and binary search requires more seeks than index search</li> </ul> </li> <li>Index scan \u2013 search algorithms that use an index<ul> <li>selection condition must be on search-key of index.</li> </ul> </li> <li>A2 (primary B+-tree index / clustering B+-tree index, equality on key).  Retrieve a single record that satisfies the corresponding equality condition  <ul> <li>\\(Cost = (h_i + 1) * (t_T + t_S)\\)</li> </ul> </li> </ul>"},{"location":"DB/DB2/","title":"Chapter 2 Relational Model","text":"<p>Abstract</p> <ul> <li>Structure of Relational Databases</li> <li>Database Schema</li> <li>Keys</li> <li>Schema Diagrams</li> <li>Relational Query Languages</li> <li>The Relational Algebra</li> </ul>"},{"location":"DB/DB2/#basic-structure","title":"Basic Structure","text":"<p>Formally, given sets \\(D_1, D_2, \u2026 D_n\\) a relation \\(r\\) is a subset of  \\(D_1 \\times  D_2  \\times \u2026 D_n\\).Thus, a relation is a set of n-tuples \\((a_1, a_2, \u2026, a_n)\\) where each \\(a_i \\in D_i\\)</p> <p>Abstract</p> <ul> <li>relation(\u5173\u7cfb) : \u8868</li> <li>tuple(\u5143\u7ec4) \uff1a\u884c</li> <li>Attribute(\u5c5e\u6027) : \u5217 </li> </ul>"},{"location":"DB/DB2/#relation-schema-and-instance","title":"Relation Schema and Instance","text":"<p>A1, A2, \u2026, An are attributes R = (A1, A2, \u2026, An ) is a relation schema</p> <p>Example</p> <p>instructor  = (ID,  name, dept_name, salary)</p> <p>A relation instance r defined over schema \\(R\\) is denoted by \\(r(R)\\). The current values a relation are specified by a table An element \\(t\\) of relation \\(r\\) is called a tuple and is represented by a row in a table</p>"},{"location":"DB/DB2/#attributes","title":"Attributes","text":"<ul> <li>The set of allowed values for each attribute is called the domain\uff08\u57df\uff09 of the attribute</li> <li>Attribute values are (normally) required to be atomic\uff08\u539f\u5b50\u7684\uff09; that is, indivisible</li> <li>The special value null\uff08\u7a7a\u503c\uff09 is a member of every domain</li> <li>The null value causes complications in the definition of many operations</li> </ul>"},{"location":"DB/DB2/#key","title":"Key(\u7801\\\u952e)","text":"<ul> <li>Let \\(K \\subseteq R\\)</li> <li>K is a superkey(\u8d85\u5065) of R if values for K are sufficient to identify a unique tuple of each possible relation \\(r(R)\\)</li> </ul> <p>Example</p> <p><code>{ID}</code> and <code>{ID,name}</code> are both superkeys of instructor.</p> <p>S- uperkey K is a candidate key(\u5019\u9009\u5065) if K is minimal </p> <p>Example</p> <p><code>{ID}</code> is a candidate key for Instructor</p> <ul> <li>One of the candidate keys is selected to be the primary key\uff08\u4e3b\u952e\uff09.</li> </ul> <p>Foreign key\uff08\u5916\u952e\uff09 constraint  from attribute(s) A of relation \\(r_1\\) to the primary  key  B  of  relation r2 states that on any database instance, the value of A for each tuple in \\(r_1\\) must also be the value of B for some tuple in \\(r_2\\). </p> <p>Foreign key Example</p> <ul> <li>foreign key \\((A_{j1},A_{j2}, \\ldots A_{jm})\\) references \\(s\\) <pre><code>foreign key(dept_name)references department(dept_name)\n</code></pre></li> </ul> Summary <ul> <li>superkey(\u8d85\u5065) \uff1a\u53ef\u4ee5\u786e\u5b9a\u4e00\u4e2a\u5143\u7ec4\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u5c5e\u6027\u7684\u96c6\u5408(\u53ef\u80fd\u5305\u542b\u65e0\u5173\u7d27\u8981\u7684)</li> <li>candidate key(\u5019\u9009\u5065) \uff1a\u6700\u5c0f\u7684\u8d85\u7801\uff0c\u4efb\u610f\u771f\u5b50\u96c6\u90fd\u4e0d\u662f\u8d85\u7801</li> <li>primary key(\u4e3b\u7801)\uff1a\u533a\u5206\u5143\u7ec4\u7684\u4e3b\u8981\u65b9\u5f0f\u7684\u5019\u9009\u7801</li> <li>Foreign key\uff08\u5916\u7801\uff09\uff1a\u8868\u660e\u5f15\u7528\u4e0e\u88ab\u5f15\u7528\u5173\u7cfb</li> </ul>"},{"location":"DB/DB2/#schema-diagram-for-university-database","title":"Schema Diagram for University Database","text":"<ul> <li>\u5b9e\u4f53\u5b8c\u6574\u6027\uff08Entity Integrity\uff09</li> <li>\u53c2\u7167\u5b8c\u6574\u6027\uff08Referential Integrity\uff09</li> <li>\u7528\u6237\u5b9a\u4e49\u7684\u5b8c\u6574\u6027\uff08User-defined Integrity\uff09</li> </ul>"},{"location":"DB/DB2/#relational-query-languages","title":"Relational Query Languages(\u5173\u7cfb\u67e5\u8be2\u8bed\u8a00)","text":"<ul> <li>Procedural vs.non-procedural, or declarative</li> <li>\u201cPure\u201d languages:</li> <li>Relational algebra(\u5173\u7cfb\u4ee3\u6570)(\u5bf9\u5173\u7cfb\u8fdb\u884c\u64cd\u4f5c\uff0c\u7ed3\u679c\u4ecd\u662f\u5173\u7cfb)</li> <li>Tuple relational calculus\uff08\u5143\u7ec4\u5173\u7cfb\u6f14\u7b97\uff09</li> <li>Domain relational calculus\uff08\u57df\u5173\u7cfb\u6f14\u7b97\uff09</li> <li>The above 3 pure languages are equivalent in computing power</li> <li>We will concentrate on relational algebra</li> <li>Not Turing-machine equivalent</li> <li>Consists of 6 basic operations</li> </ul> <p>Relational algebra(\u5173\u7cfb\u4ee3\u6570)</p> <ul> <li>select(\u9009\u62e9): \\(\\sigma\\)</li> <li>project(\u6295\u5f71): \\(\\Pi\\)</li> <li>union(\u5e76\u96c6): \\(\\cup\\)</li> <li>set difference(\u96c6\u5dee): \\(-\\)</li> <li>Cartesian product(\u7b1b\u5361\u5c14\u79ef): \\(x\\)</li> <li>rename(\u66f4\u540d): \\(\\rho\\)</li> </ul> <p>Question</p> <p>\u5b59\u8001\u5e08\u4e0a\u8bfe\u63d0\u5230\u4e86\u601d\u8003\u4e3a\u4ec0\u4e48\u6ca1\u6709\u4ea4\u96c6</p> Answer <p>\u4ea4\u96c6\u53ef\u4ee5\u901a\u8fc7\u5e76\u96c6\u548c\u96c6\u5dee\u6765\u5b9e\u73b0</p>"},{"location":"DB/DB2/#select","title":"Select","text":"<ul> <li>\\(\\sigma_p(r)=\\{t|t\\in r\\ and\\ p(t)\\}\\)  , where \\(p\\) is called selection predicate.  </li> </ul> Select Example"},{"location":"DB/DB2/#project","title":"Project","text":"<ul> <li>The project operation is a unary operation that returns its argument relation, with certain attributes left out.(\u53ef\u4ee5\u8fc7\u6ee4\u7279\u5b9a\u7684\u5c5e\u6027)    </li> <li>\\(\\prod_{A_1,A_2,\\ldots, A_k}(r)\\) where \\(A_i\\) are attribute names and \\(r\\) is a relation name.   </li> <li>The result is defined as the relation of k columns obtained by erasing the columns that are not listed. \u4f1a\u5bf9\u7ed3\u679c\u8fdb\u884c\u53bb\u91cd\u3002  </li> </ul> Projection Example"},{"location":"DB/DB2/#union","title":"Union","text":"<ul> <li>The union operation allows us to combine two relations.  \\(r\\cup s = \\{t| t\\in r \\ or \\ t\\in s\\}\\) </li> <li>\\(r\\) and \\(s\\) must have the same arity (\u5143\u6570) (same number f attributes)  </li> <li>The attribute domains must be compatible\uff08\u76f8\u5bb9\uff09</li> <li>\u5f53\u5c5e\u6027\u6709\u5173\u8054\u7c7b\u578b\u65f6\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8f93\u5165 \\(i\\), \u4e24\u4e2a\u8f93\u5165\u5173\u7cfb\u7684\u7b2c \\(i\\) \u4e2a\u5c5e\u6027\u7684\u7c7b\u578b\u5fc5\u987b\u76f8\u540c\u3002  </li> </ul> Projection Example"},{"location":"DB/DB2/#set-difference","title":"Set Difference","text":"<ul> <li> <p>The set-difference operation allows us to find tuples that are in one relation but are not in another. (r\u91cc\u9762\u6709\u800cs\u91cc\u9762\u6ca1\u6709)\\(r-s=\\{t|t\\in r\\ and\\ t\\notin s\\}\\) </p> </li> <li> <p>Set differences must be taken between compatible relations.</p> </li> </ul> Projection Example <p></p>"},{"location":"DB/DB2/#cartesian-product","title":"Cartesian-Product","text":"<ul> <li>The Cartesian-product operation (denoted by \\(\\times\\))  allows us to combine information from any two relations. (\u4e24\u4e2a\u8868\u91cc\u7684\u5143\u7ec4\u5404\u81ea\u76f8\u4e58) \\(r\\times s  =\\{t\\ q|t\\in r\\ and\\ q\\in s\\}\\) </li> </ul> Projection Example <p>\u4e0e\u81ea\u8eab\u505a\u7b1b\u5361\u5c14\u79ef\u7684\u65f6\u5019</p> <p>\u5f53\u4f5c\u4e24\u4e2a\u4e0d\u540c\u7684\u8868\u5904\u7406</p>"},{"location":"DB/DB2/#rename","title":"Rename","text":"<p>Allows us to refer to a relation by more than one name.  \\(\\rho_X(E)\\)</p> Composition of Operations 1 <p>Find the names of all instructors in the Physics department, along with the course_id of all courses they have taught.  </p> <p></p> <p>\u8fd9\u4e24\u6761\u8bed\u53e5\u542b\u4e49\u4e00\u6837\uff0c\u4f46\u7b2c\u4e8c\u6761\u6211\u4eec\u5148\u8fdb\u884c\u4e86\u4e00\u6b21 select, \u6761\u76ee\u5c11\u4e86\u66f4\u9ad8\u6548.</p> <p>Tip</p> <p>\u4e00\u822cDBMS\u90fd\u80fd\u591f\u81ea\u5df1\u8fdb\u884c\u4f18\u5316</p> Composition of Operations 2 <p>Find the largest salary in the university.  </p> <ul> <li>find instructor salaries that are less than some other instructor salary (i.e. not maximum) using a copy of instructor under a new name \\(d\\).  \\(\\prod_{instructor.salary}(\\sigma_{instructor.salary&lt;d.salary}(instructor \\times \\rho_d(instructor)))\\) </li> <li>find the largest salary \\(\\prod_{instructor}-\\prod_{instructor.salary}(\\sigma_{instructor.salary}&lt;d.salary(instructor\\times \\rho_d(instructor)))\\) </li> </ul> <p>\u6211\u4eec\u7b2c\u4e00\u6b65\u5c06\u4e24\u4e2a\u5173\u7cfb\u62fc\u8d77\u6765\u4e4b\u540e\uff0c\u9650\u5b9a instructor \u7684\u5de5\u8d44\u5c0f\u4e8e d, \u968f\u540e\u6295\u5f71\u6211\u4eec\u5c31\u53ef\u4ee5\u83b7\u5f97\u6240\u6709\u4e0d\u662f\u6700\u5927\u503c\u7684\u85aa\u6c34\u3002\uff08\u56e0\u4e3a\u4efb\u4f55\u4e0d\u662f\u6700\u5927\u503c\u7684\u85aa\u6c34\u90fd\u4f1a\u5728\u7b1b\u5361\u5c14\u79ef select \u540e\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u5143\u7ec4\uff0c\u8fd9\u6837\u6295\u5f71\u4e4b\u540e\u4ecd\u4f1a\u5b58\u5728\u3002\u4f46\u6700\u5927\u503c\u5c31\u4e0d\u4f1a\u6709\u5143\u7ec4\u5b58\u5728\uff09\uff0c\u6700\u540e\u7528\u5168\u96c6\u51cf\u6389\u5373\u53ef\u3002</p>"},{"location":"DB/DB2/#additional-operations","title":"Additional Operations","text":"<p>Warning</p> <p>\u989d\u5916\u64cd\u4f5c\u7b26\u5e76\u4e0d\u80fd\u589e\u5f3a\u67e5\u8be2\u80fd\u529b,\u53ea\u80fd\u7b80\u5316\u8868\u8fbe</p> <p>Abstract</p> <ul> <li>Set intersection(\u4ea4\u96c6): \\(r \\cap s\\) </li> <li>Natural join(\u81ea\u7136\u8fde\u63a5):  \\(r \\Join s\\)</li> <li>Semijoin(\u534a\u8fde\u63a5): $\\ltimes_\\theta $</li> <li>Assignment(\u8d4b\u503c): $ \\leftarrow $</li> <li>Outer join(\u5916\u8fde\u63a5): \\(r \\ltimes s,r \\rtimes s, r \u27d7 s\\)</li> <li>Division Operator(\u5206\u90e8\u7f16\u53f7): $r \\div s $</li> </ul>"},{"location":"DB/DB2/#natural-join-operation","title":"Natural-Join Operation","text":"<p>Let r and s be relations on schemas R and S respectively.  Then,  \\(r\\bowtie s\\) is a relation on schema \\(R \\cup S\\) obtained as follows:</p> <ul> <li>Consider each pair of tuples \\(t_r\\) from \\(r\\) and \\(t_s\\) from \\(s\\).  </li> <li> <p>If \\(t_r\\) and \\(t_s\\) have the same value on each of the attributes in \\(R \\cap S\\), add a tuple $t $ to the result, where</p> <ul> <li>\\(t\\) has the same value as \\(t_r\\) on \\(r\\)</li> <li>\\(t\\) has the same value as \\(t_s\\) on \\(s\\)</li> </ul> </li> <li> <p>\u5373\u5171\u540c\u5c5e\u6027\u8981\u6709\u76f8\u540c\u7684\u503c\uff0c\u624d\u80fd\u5728\u62fc\u63a5\u540e\u7684\u7ed3\u679c\u4e2d\u4fdd\u7559\u3002  </p> </li> <li>\u5bf9\u4e58\u6cd5\u7684\u6269\u5c55\uff0c\u76f8\u5f53\u4e8e\u5148 \\(\\times\\) \u518d select, \u6700\u540e project.  </li> <li>\u5148\u7b1b\u5361\u5c14\u79ef\uff0c\u5b8c\u4e86\u8fdb\u884c\u9009\u62e9\uff0c\u6700\u540e\u6295\u5f71</li> </ul> Natural Join Example <p></p>"},{"location":"DB/DB2/#theta-join","title":"Theta Join(\u8fde\u63a5)","text":"<ul> <li>\\(r\\bowtie_\\theta s=\\sigma_\\theta (r\\times s)\\)\u53ef\u4ee5\u7406\u89e3\u4e3a\u6761\u4ef6\u8fde\u63a5\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u81ea\u7136\u8fde\u63a5\u662f\u7528\u9690\u5f0f\u8c13\u8bcd\u53d6\u4ee3\u4e86\\(\\theta\\)\u7684\u8fde\u63a5</li> </ul>"},{"location":"DB/DB2/#outer-join","title":"Outer Join","text":"<p>\u7279\u70b9\uff1a\u4fdd\u7559\u672a\u5339\u914d\u5143\u7ec4</p> <p>Computes the join and then adds tuples form one relation that does not match tuples in the other relation to the result of the join.   </p> <p>Uses null values:  </p> <ul> <li>null signifies that the value is unknown or does not exist </li> <li>All comparisons involving null are (roughly speaking) false by definition</li> </ul> <p>Outer join can be expressed using basic operations.  </p> <ul> <li>\\(r\\rtimes s=(r\\bowtie s)\\cup (r-\\cap_R(r\\bowtie s)\\times \\{null,\\ldots,null\\})\\)</li> <li>\\(r\\ltimes s=(r\\bowtie s)\\cup \\{null,\\ldots,null\\}\\times (s-\\cap_R(r\\bowtie s))\\)</li> <li> <p>\\(r\\)\u27d7\\(s\\) \\(=(r\\bowtie s)\\cup (r-\\cap_R(r\\bowtie  s))\\times \\{(null, \\ldots)\\}\\cup\\{(null,\\ldots,null)\\}\\times (s-\\cap_s(r\\bowtie s))\\)</p> </li> <li> <p>Left outer join(\u5de6\u5916\u8fde\u63a5)\uff1a\u53ea\u4fdd\u7559\u51fa\u73b0\u5728\u5de6\u5916\u8fde\u63a5\u7b26\u4e4b\u524d\u7684\u5173\u7cfb\u4e2d\u7684\u5143\u7ec4</p> </li> <li>Right outer join(\u53f3\u5916\u8fde\u63a5)\uff1a\u53ea\u4fdd\u7559\u51fa\u73b0\u5728\u53f3\u5916\u8fde\u63a5\u7b26\u4e4b\u540e\u7684\u5173\u7cfb\u4e2d\u7684\u5143\u7ec4</li> <li>Full outer join(\u5168\u5916\u8fde\u63a5)\uff1a\u4fdd\u7559\u4e24\u4e2a\u5173\u7cfb\u4e2d\u7684\u5143\u7ec4</li> </ul> Outer Join Example <p> </p>"},{"location":"DB/DB2/#semijoin","title":"Semijoin(\u534a\u8fde\u63a5)","text":"<p>\\(r\\ltimes_\\theta s\\) \u4fdd\u7559 \\(r\\) \u4e2d\u80fd\u4e0e \\(s\\) \u76f8\u8fde\u7684\u5143\u7ec4(\u5728\u7ed9\u5b9a\u6761\u4ef6\u4e0b)\u7684\u96c6\u5408(\u6700\u5927\u5b50\u96c6),\u76f8\u5f53\u4e8e\u7b5b\u9009\u3002</p> <p>\\(r\\ltimes_\\theta s = \\sigma()\\) </p> Semijoin Example <p></p>"},{"location":"DB/DB2/#assignment","title":"Assignment(\u8d4b\u503c)","text":"<p>\u5c06\u4e00\u4e2a\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f\u7528\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u6765\u66ff\u4ee3</p>"},{"location":"DB/DB2/#division","title":"Division","text":"<ul> <li>\u67e5\u8be2\u5305\u542b\u53e6\u5916\u4e00\u4e2a\u8868\u4e2d\u6240\u6709\u4fe1\u606f\u7684\u5143\u7ec4\u96c6\u5408\u7684\u5171\u540c\u5143\u7d20</li> <li> <p>Given relations \\(r(R)\\) and \\(s(S)\\), such that \\(S \\subset R\\), \\(r\\div s\\) is the largest relation \\(t(R-S)\\) such that \\(t\\times s \\subsetneqq  r\\) </p> </li> <li> <p>We can write \\(r\\div s\\) as  </p> </li> </ul> \\[ \\begin{align*}     temp1 &amp; \\leftarrow \\Pi_{R-S}(r)\\\\     temp2 &amp; \\leftarrow \\Pi_{R-S}((temp1 \\times s)- \\Pi_{R-S,S}(r))\\\\     result &amp; = temp1 - temp2 \\end{align*} \\] Division Example <p> </p>"},{"location":"DB/DB2/#extended-relational-algebra-operations","title":"Extended Relational-Algebra-Operations","text":"<p>Abstract</p> <ul> <li>Generalized Projection</li> <li>Aggregate Functions</li> </ul>"},{"location":"DB/DB2/#generalized-projection","title":"Generalized Projection","text":"<ul> <li>\u4e00\u822c\u5316\u6295\u5f71generalized projection\u662f\u6295\u5f71projection\u7684\u6269\u5c55\uff0c\u662f\u5e26\u4e0a\u4e86\u7b97\u672f\u8fd0\u7b97\u7684</li> <li>\\(E\\) is any relational-algebra expression</li> <li>Each of $F_1, F_2, \u2026, F_n $are arithmetic expressions involving constants and attributes in the schema of \\(E\\).</li> <li>Given relation instructor(ID, name, dept_name, salary) where salary is annual salary, get the same information but with monthly salary </li> </ul> \\[\\Pi_{F_1,F_2 \\ldots F_n}(E)\\] Generalized Projection Example"},{"location":"DB/DB2/#aggregate-functions-and-operations","title":"Aggregate Functions and Operations","text":"<ul> <li> <p>Aggregation function\uff08\u805a\u5408\u51fd\u6570\uff09takes a collection of values and returns a single value as a result.  </p> <ul> <li>avg: average value</li> <li>min: minimum value</li> <li>max: maximum value</li> <li>sum: sum of values</li> <li>count: number of values</li> </ul> </li> <li> <p>Aggregate operation in relational algebra \\(G_1,G_2,\\ldots,G_n \\mathcal{G}_{F_1(A_1),\\ldots F_n(A_n)}(E)\\) </p> </li> </ul> <p>Aggregate Operation Example</p> <p> </p> <p>\u5206\u7ec4\u7ed3\u679c\u6ca1\u6709\u540d\u5b57\uff0c\u53ef\u4ee5\u7528 rename \u6216\u8005 as \u8fdb\u884c\u6539\u540d\u3002 e.g. <code>dept_name G avg(salary) as avg_sal (instructor)</code></p>"},{"location":"DB/DB2/#multiset-relational-algebra","title":"Multiset Relational Algebra","text":"<ul> <li>\u5173\u7cfb\u4ee3\u6570\u4e2d\uff0c\u6211\u4eec\u8981\u6c42\u5173\u7cfb\u8981\u662f\u4e00\u4e2a\u4e25\u683c\u7684\u96c6\u5408\u3002  </li> <li>\u4f46\u5b9e\u9645\u6570\u636e\u5e93\u4e2d\u5e76\u4e0d\u662f\uff0c\u800c\u662f\u4e00\u4e2a\u591a\u91cd\u96c6\uff0c\u5141\u8bb8\u6709\u91cd\u590d\u5143\u7d20\u5b58\u5728\u3002  </li> <li>\u56e0\u4e3a\u4e00\u4e9b\u64cd\u4f5c\u7684\u4e2d\u95f4\u7ed3\u679c\u4f1a\u5e26\u6765\u91cd\u590d\u5143\u7d20\uff0c\u8981\u4fdd\u6301\u96c6\u5408\u7279\u6027\u5f00\u9500\u5f88\u5927\uff0c\u56e0\u6b64\u5b9e\u9645\u64cd\u4f5c\u4e2d\u4e0d\u4f1a\u53bb\u91cd \u3002 </li> </ul>"},{"location":"DB/DB2/#sql-and-relational-algebra","title":"SQL and Relational Algebra","text":"<ul> <li><code>select A1, A2, ... An from r1, r2, ... rm where P</code> is equivalent to \\(\\Pi_{A_1,\\ldots, A_n}(\\sigma_P(r_1\\times r_2\\ldots r_m))\\) </li> <li><code>select A1, A2, sum(A3) from r1, r2, ... rm where P group by A1, A2</code> is equivalent to \\(A_1, A_2 \\mathcal{G} sum(A_3)(\\sigma_P(r_1\\times r_2\\times\\ldots r_m))\\) \u8fd9\u91cc\u6309 \\(A_1,A_2\\) \u5206\u7ec4\uff0c\u90a3\u4e48\u7ed3\u679c\u7684\u8868\u4e2d\u4f1a\u6709 \\(A_1,A_2,sum(A_3)\\) \u4e09\u5217\uff08\u5206\u7ec4\u4f9d\u636e+\u5206\u7ec4\u540e\u7684\u805a\u5408\u7ed3\u679c\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u7684\u5c31\u662f\u8fd9\u4e09\u5217\uff0c\u6240\u4ee5\u5206\u7ec4\u5373\u53ef\u3002\u4f46\u662f\u5047\u8bbe\u6211\u4eec\u53ea\u9700\u8981 \\(A_1, sumA3\\) \u90a3\u4e48\u6700\u540e\u8fd8\u9700\u8981\u6295\u5f71\u3002</li> </ul>"},{"location":"DB/DB3/","title":"Chapter 3 SQL Introduction","text":"<p>Abstract</p> <ul> <li>Overview of the SQL Query Language</li> <li>Data Definition</li> <li>Basic Query Structure</li> <li>Additional Basic Operations</li> <li>Set Operations</li> <li>Null Values</li> <li>Aggregate Functions</li> <li>Nested Subqueries</li> <li>Modification of the Database </li> </ul> <p>SQL\u4e0e\u5173\u7cfb\u4ee3\u6570\u7684\u5173\u7cfb</p> <ul> <li>SQL\u4e0e\u5173\u7cfb\u4ee3\u6570\u5e76\u4e0d\u662f\u4e00\u4e00\u5bf9\u5e94\u7684</li> <li>\u4f46SQL\u8bed\u53e5\u90fd\u53ef\u4ee5\u5199\u6210\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f</li> </ul> <p>Quote</p> <p>\u672c\u6b21\u8bfe\u5b59\u8001\u5e08\u8bed\u901f\u611f\u4eba\uff0c\u90e8\u5206\u7b14\u8bb0\u540e\u671f\u5bf9\u7167HobbitQia\u7684\u7b14\u8bb0\u672c\u8fdb\u884c\u8865\u5168\u3002</p>"},{"location":"DB/DB3/#history","title":"History","text":"<ul> <li>IBM Sequel language developed as part of System R project at the IBM San Jose Research Laboratory (Sequel: A structured English query language, 1974)</li> <li>Renamed SQL(Structured Query Language )</li> <li>ANSI and ISO standard SQL:<ul> <li>SQL-86, SQL-89, SQL-92 </li> <li>SQL:1999, SQL:2003, SQL:2006, SQL:2008, SQL:2011, SQL:2016\uff0cSQL:2019 </li> </ul> </li> <li>The benefits of the standards:<ul> <li>Points out which language extensions are important and useful.</li> <li>Guides the development of SQL implementations in databases. </li> <li>Provides the common syntax and semantics that most databases will implement.</li> </ul> </li> <li>Commercial systems offer most, if not all, SQL-92 features, plus varying feature sets from later standards and special proprietary features.  </li> </ul>"},{"location":"DB/DB3/#data-definition-language","title":"Data Definition Language","text":"<p>The SQL data-definition language (DDL) allows the specification of information about relations, including:</p> <p>The schema for each relation.</p> <ul> <li>The domain of values associated with each attribute.</li> <li>Integrity constraints</li> <li>And as we will see later, also other information such as <ul> <li>The set of indices to be maintained for each relations.</li> <li>Security and authorization information for each relation.</li> <li>The physical storage structure of each relation on disk.</li> </ul> </li> </ul>"},{"location":"DB/DB3/#domain-types-in-sql","title":"Domain Types in SQL","text":"<ul> <li><code>char(n).</code> Fixed length character string, with user-specified length n.  \u5b9a\u957f\u5b57\u7b26\u4e32. C \u8bed\u8a00\u91cc\u5b57\u7b26\u4e32\u7ed3\u5c3e\u6709 <code>\\0</code>, \u4f46\u6570\u636e\u5e93\u91cc\u6ca1\u6709\uff0c\u957f\u5ea6\u7531\u5b9a\u4e49\u800c\u5f97\u3002  </li> <li><code>varchar(n).</code> Variable length character strings, with user-specified maximum length n. \u4e0d\u5b9a\u957f\u5b57\u7b26\u4e32\u3002\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6bd4\u8f83\u53ef\u80fd\u6709\u95ee\u9898\uff08\u6bd4\u5982\u5b9a\u957f\u548c\u4e0d\u5b9a\u957f\u7684\u5b57\u7b26\u4e32\uff09</li> <li><code>int.</code> Integer (a finite subset of the integers that is machine-dependent).</li> <li><code>smallint.</code> Small integer (a machine-dependent subset of the integer domain type).</li> <li><code>numeric(p,d).</code> Fixed point number, with user-specified precision of p digits, with d digits to the right of decimal point.    p \u8868\u793a\u6709\u6548\u6570\u5b57\u4f4d\u6570, d \u8868\u793a\u5c0f\u6570\u70b9\u540e\u591a\u5c11\u4f4d\u3002 e.g. <code>number(3,1)</code> allows 44.5 to be store exactly,  but neither 444.5 or 0.32</li> <li>real, double precision.  Floating point and double-precision floating point numbers, with machine-dependent precision.</li> <li><code>float(n).</code> Floating point number, with user-specified precision of at least n digits.</li> </ul> <p>difference between char and varchar</p> <ul> <li>\u5bf9\u4e8echar(10),\u8f93\u5165avi,\u4f1a\u81ea\u52a8\u5728\u540e\u9762\u8865\u4e0a\u7a7a\u683c</li> <li>\u5bf9\u4e8evarchar(10),\u8f93\u5165avi\uff0c\u4e0d\u4f1a\u8ffd\u52a0\u7a7a\u683c</li> </ul>"},{"location":"DB/DB3/#built-in-data-types-in-sql","title":"Built-in Data Types in SQL","text":"<ul> <li>date Dates, containing a (4 digit) year, month and date<ul> <li>Example: date \u20182005-7-27\u2019</li> </ul> </li> <li>time* Time of day, in hours, minutes and seconds.<ul> <li>Example: time \u201809:00:30\u2019     time \u201809:00:30.75\u2019</li> </ul> </li> <li>timestamp: date plus time of day<ul> <li>Example: timestamp \u20182005-7-27 09:00:30.75\u2019</li> </ul> </li> <li>interval period of time<ul> <li>Example:  interval \u20181\u2019 day</li> <li>Subtracting a date/time/timestamp value from another gives an interval value</li> <li>Interval values can be added to date/time/timestamp values</li> <li>date, time functions: <ul> <li><code>current_date(), current_time()</code></li> <li><code>year(x), month(x), day(x), hour(x), minute(x), second(x)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"DB/DB3/#create-table-construct","title":"Create Table Construct","text":"<p>An SQL relation is defined using the create table command:</p> <pre><code>create table r (A1 D1, A2 D2, ..., An Dn,\n(integrity-constraint1),\n...,\n(integrity-constraintk))\n</code></pre> <ul> <li>\\(r\\) is the name of the relation</li> <li>each \\(A_i\\) is an attribute name in the schema of relation \\(r\\)</li> <li>\\(D_i\\) is the data type of values in the domain of attribute \\(Ai\\)</li> </ul> <p>Example</p> <pre><code>create table instructor (\nID        char(5),\nname    varchar(20) not null,\ndept_name varchar(20),\nsalary     numeric(8,2))\n</code></pre> <p>Integrity Constraints in Create Table</p> <ul> <li><code>not null</code></li> <li>primary key \\((A_1,\\ldots,A_n)\\) \u4e0d\u80fd\u4e3a\u7a7a; \u8868\u5185\u4e0d\u80fd\u6709\u76f8\u540c\u7684 keys. \u5426\u5219\u8fd9\u6837\u7684\u6570\u636e\u662f\u63d2\u5165\u4e0d\u8fdb\u53bb\u7684\u3002</li> <li>foreign key \\((A_m,\\ldots,A_n)\\) references r \u9690\u542b\uff1a\u5f15\u7528\u5bf9\u5e94\u8868\u7684\u4e3b\u952e\u3002</li> </ul> <p>\u5982\u679c\u4e0d\u7b26\u5408\u5b8c\u6574\u6027\u7ea6\u675f\u6761\u4ef6\uff0c\u63d2\u5165\u53ef\u80fd\u4f1a\u5931\u8d25\u3002</p> Example <pre><code>create table instructor (\n    ID             char(5),\n    name           varchar(20) not null,\n    dept_name      varchar(20),\n    salary         numeric(8,2),\n    primary key (ID),\n    foreign key (dept_name) references department)\n</code></pre> <p>\u53ef\u4ee5\u7ed9\u4e00\u4e2a\u7f3a\u7701\u503ce.g. <code>default 0</code></p> Example <p><pre><code>create table takes (\n        ID                  varchar(5),\n        course_id       varchar(8),\n        sec_id            varchar(8),\n        semester        varchar(6),\n        year                numeric(4,0),\n        grade              varchar(2),\n        primary key (ID, course_id, sec_id, semester, year),\n        foreign key (ID) references  student,\n        foreign key (course_id, sec_id, semester, year) references section );\n</code></pre> - <code>sec_id</code> can be dropped from primary key above, to ensure a student cannot be registered for two sections of the same course in the same semester</p> <p>\u5982\u679c\u5f15\u7528\u7684\u8868\u4e2d\u6709\u6761\u76ee\u88ab\u5220\u9664\uff0c\u53ef\u80fd\u4f1a\u7834\u574f\u5b8c\u6574\u6027\u7ea6\u675f\u6761\u4ef6\u3002\u6709\u4e0b\u9762\u7684\u65b9\u6cd5\uff1a  </p> <ul> <li>restrict: \u5982\u679c\u6709\u6761\u76ee\u662f\u88ab\u5f15\u7528\u7684\uff0c\u90a3\u4e48\u4e0d\u5141\u8bb8\u5220\u9664\u3002</li> <li>cascade: \u5f15\u7528\u7684\u6761\u76ee\u88ab\u5220\u4e86\u4e4b\u540e\uff0c\u5f15\u7528\u8005\u4e5f\u4e00\u5e76\u5220\u9664</li> <li>set null: \u5f15\u7528\u8005\u7684\u6307\u9488\u8bbe\u4e3a <code>null</code>. </li> <li>set default : \u5f15\u7528\u8005\u7684\u5bf9\u5e94<code>Attribute</code>\u503c\u8bbe\u7f6e\u4e3a\u7f3a\u7701\u503c </li> </ul> <p>\u5982\u679c\u5f15\u7528\u7684\u8868\u4e2d\u6709\u66f4\u65b0\uff0c\u4e5f\u6709\u7c7b\u4f3c\u4e0a\u9762\u7684\u56db\u79cd\u65b9\u6cd5.</p> <p>Example</p> <p><pre><code>create table course (\n    course_id        varchar(8) primary key,\n    title            varchar(50),\n    dept_name        varchar(20),\n    credits          numeric(2,0),\n    foreign key (dept_name) references department (dept_name));\n</code></pre> - \u53ef\u4ee5\u76f4\u63a5\u5c06primary key\u5199\u5728\u540e\u9762</p> <p>\u5728 <code>create table</code> \u4e2d\u5b9a\u4e49 * <code>on delete cascade  |set null |restrict |set default</code> * <code>on update cascade  |set null |restrict |set default</code></p> <p>insert into instructor values (\u201810211\u2019, \u2019Smith\u2019, \u2019Biology\u2019, 66000); insert into instructor values (\u201810211\u2019, null, \u2019Biology\u2019, 66000);</p>"},{"location":"DB/DB3/#drop-and-alter-table-constructs","title":"Drop and Alter Table Constructs","text":"<ul> <li>drop table student<ul> <li>Deletes the table and its contents</li> </ul> </li> <li>delete from student<ul> <li>Deletes all contents of table, but retains table</li> </ul> </li> <li>alter table<ul> <li>alter table r add A D<ul> <li>where A is the name of the attribute to be added to relation r  and D is the domain of A.</li> <li>All tuples in the relation are assigned null as the value for the new attribute.  </li> <li>alter table student add resume varchar(256);</li> </ul> </li> <li>alter table r drop A<ul> <li>where A is the name of an attribute of relation r</li> <li>Dropping of attributes not supported by many databases</li> </ul> </li> </ul> </li> </ul> <p>Abstract</p> <ul> <li>drop\u6bd4delete\u66f4\u5f3a\uff0c\u540e\u8005\u4fdd\u7559\u5173\u7cfb\uff0c\u524d\u8005\u4e0d\u4fdd\u7559</li> <li>alter\u53ef\u4ee5\u7ed9\u5df2\u6709\u5173\u7cfb\u589e\u52a0\u6216\u51cf\u5c11\u5c5e\u6027</li> </ul>"},{"location":"DB/DB3/#sql-and-relational-algebra","title":"SQL and Relational Algebra","text":"<pre><code>select A1, A2, .. An\nfrom   r1, r2, \u2026, rm\nwhere P\n</code></pre> <p>is equivalent to the following expression in multiset relational algebra</p> <p>\\(\\Pi_{A_1, .., A_n}(\\sigma_P(r_1 \\times r_2 \\times .. \\times r_m))\\)</p> <pre><code>select A1, A2, sum(A3)\nfrom   r1, r2, \u2026, rm\nwhere P\ngroup by A1, A2\n</code></pre> <p>is equivalent to the following expression in multiset relational algebra</p> <p>\\(A_1, A_2G_{sum(A3)} ( \\sigma_P (r_1 \\times r_2 \\times .. \\times r_m)))\\)</p> <p>More generally, the non-aggregated attributes in the select clause may be a subset of the group by attributes, in which case the equivalence is as follows:</p> <pre><code>select A1, sum(A3)\nfrom   r1, r2, \u2026, rm\nwhere P\ngroup by A1, A2\n</code></pre> <p>is equivalent to the following expression in multiset relational algebra \\(\\Pi_{A1,sumA3}( A1,A2 G_{sum(A3) as sumA3}(\\sigma_P (r_1 \\times r_2  \\times .. \\times r_m)))\\)</p>"},{"location":"DB/DB3/#test-for-absence-of-duplicate-tuples","title":"Test for Absence of Duplicate Tuples","text":"<p>The unique construct tests whether a subquery has any duplicate tuples in its result. (Evaluates to \u201ctrue\u201d on an empty set) Find all courses that were offered at most once in 2009</p> <pre><code>  select T.course_id\n  from course as T\n  where unique (select R.course_id\n                          from section as R\n                          where T.course_id= R.course_id and R.year = 2009) ;\n</code></pre>"},{"location":"DB/DB3/#basic-query-structure","title":"Basic Query Structure","text":"<p>Abstract</p> <ul> <li>select\u7528\u4e8e\u5217\u51fa\u67e5\u8be2\u7ed3\u679c\u4e2d\u6240\u9700\u8981\u7684\u5c5e\u6027</li> <li>from\u7528\u4e8e\u5217\u51fa\u5728\u67e5\u8be2\u6c42\u503c\u4e2d\u5e94\u8be5\u8bbf\u95ee\u7684\u5173\u7cfb\u5217\u8868<ul> <li>from\u540e\u9762\u4e00\u4e2a\u8868\u662f\u5355\u5173\u7cfb\u67e5\u8be2\uff0c\u591a\u4e2a\u8868\u662f\u591a\u5173\u7cfb\u67e5\u8be2</li> </ul> </li> <li>where\u662f\u4f5c\u7528\u5728from\u5b50\u53e5\u4e2d\u5173\u7cfb\u7684\u5c5e\u6027\u4e0a\u7684\u8c13\u8bcd</li> </ul>"},{"location":"DB/DB3/#the-select-clause","title":"The <code>select</code> Clause","text":"<ul> <li>The <code>select</code> clause list the attributes desired in the result of a query.  </li> <li>corresponds to the projection operation of the relational algebra</li> <li>SQL names are case insensitive  \u5927\u5c0f\u5199\u4e0d\u654f\u611f\u3002\uff08\u5c5e\u6027\u540d\u5b57\u3001\u8868\u7684\u540d\u5b57\u7b49\uff09</li> </ul> <p>Example</p> <p>Name \\(\u2261\\) NAME \\(\u2261\\) name</p> <ul> <li>To force the elimination of duplicates, insert the keyword <code>distinct</code> after select. e.g. <code>select distinct dept_name from instructor</code> \u53ef\u4ee5\u52a0 all \u663e\u5f0f\u6307\u660e\u4e0d\u53bb\u91cd</li> <li>An asterisk in the select clause denotes \u201call attributes\u201d e.g. <code>select * from instructor</code></li> <li>The select clause can contain arithmetic expressions involving the operation, +, \u2013, \\(\\div\\), and /, and operating on constants or attributes of tuples. \u53ef\u4ee5\u6709\u52a0\u51cf\u4e58\u9664\u8fd0\u7b97 e.g. <code>select ID, name, salary/12 from instructor</code></li> </ul> <p>find the names of all instructors</p> <ul> <li>select name</li> <li>from instructor</li> </ul>"},{"location":"DB/DB3/#the-where-clause","title":"The <code>where</code> Clause","text":"<ul> <li>The <code>where</code> clause specifies conditions that the result must satisfy.</li> <li>Corresponds to the selection predicate of the relational algebra.  </li> <li> <p>where\u5141\u8bb8\u6211\u4eec\u9009\u51fa\u90a3\u4e9b\u5728from\u91cc\u6ee1\u8db3\u7279\u5b9a\u5173\u7cfb\u7684\u5143\u7ec4</p> </li> <li> <p>SQL includes a <code>between</code> comparison operator e.g. <code>select name from instructor where salary between 90000 and 100000</code></p> </li> <li>Tuple comparison \u5143\u7ec4\u76f8\u7b49\u7b49\u4ef7\u4e8e\u5404\u4e2a\u5143\u7d20\u90fd\u76f8\u7b49\u3002 e.g. <code>select name, course_id from instructor, teaches where (instructor.ID, dept_name) = (teaches.ID, \u2019Biology\u2019);</code> </li> </ul> To find all instructors in Comp. Sci. dept with salary &gt; 80000 <pre><code>select name \nfrom instructor \nwhere dept_name = \u2018Comp. Sci.'  and salary &gt; 80000\n</code></pre> <ul> <li>Comparison results can be combined using the logical connectives and, or, and not.(\u903b\u8f91\u8fde\u8bcd) </li> <li>Comparisons can be applied to results of arithmetic expressions.(\u7b97\u672f\u8868\u8fbe\u5f0f\uff0c\u6bd4\u8f83\u8fd0\u7b97\u7b26)</li> </ul>"},{"location":"DB/DB3/#the-from-clause","title":"The <code>from</code> clause","text":"<p>The <code>from</code> clause lists the relations involved in the query. Corresponds to the Cartesian product operation of the relational algebra.  </p>"},{"location":"DB/DB3/#natural-join","title":"Natural Join","text":"<p>e.g. <code>select * from instructor natural join teaches;</code></p> <p>e.g. <code>select name, course_id from instructor, teaches where instructor.ID = teaches.ID;</code> <code>select name, course_id from instructor natural join teaches;</code>  \u4e0a\u9762\u4e24\u6761\u8bed\u53e5\u662f\u7b49\u4ef7\u7684\u3002</p> <p>Unrelated attributes with same name which get equated incorrectly! </p> <p>Example</p> <p><code>course(course_id,title, dept_name,credits\uff09</code>, <code>teaches(ID, course_id,sec_id,semester, year)</code>, <code>instructor(ID, name, dept_name,salary\uff09</code> \u8fd9\u91cc\u7684 department \u542b\u4e49\u5404\u6709\u4e0d\u540c\uff0c\u4e0d\u80fd\u76f4\u63a5\u81ea\u7136\u8fde\u63a5\u3002 \u53ef\u4ee5\u5199\u6210 <code>select name, title from (instructor natural join teaches\uff09join course using(course_id);</code> \u5373\u89c4\u5b9a\u8fde\u63a5\u7684\u5c5e\u6027\uff0c\u5bf9\u5e94\u4e8e \\(\\sigma_\\theta\\) </p> <p>Find students who takes courses across his/her department. \u53ef\u5199\u4f5c </p> <pre><code>select distinct student.id\n    from (student natural join takes) \n           join course using (course_id\uff09 \n    where student.dept_name &lt;&gt; course.dept_name\n</code></pre> <p>\u8981\u6ce8\u610f\u81ea\u7136\u8fde\u63a5\u7684\u8bed\u6cd5\u89c4\u8303</p> <p></p>"},{"location":"DB/DB3/#the-rename-operation","title":"The Rename Operation","text":"<p>The SQL allows renaming relations and attributes using the <code>as</code> clause. <code>old-name as new-name</code></p> <p>e.g. <code>select distinct T. name from instructor as T, instructor as S where T.salary &gt; S.salary and S.dept_name = \u2018Comp. Sci.\u2019</code></p> <ul> <li> <p>S,T\u4e00\u822c\u88ab\u79f0\u4e3a\u8868\u522b\u540d/\u76f8\u5173\u540d\u79f0/\u76f8\u5173\u53d8\u91cf/\u5143\u7ec4\u53d8\u91cf</p> </li> <li> <p>Keyword <code>as</code> is optional and may be omitted.  </p> </li> </ul>"},{"location":"DB/DB3/#string-operations","title":"String Operations","text":"<p>SQL includes a string-matching operator for comparisons on character strings.  The operator <code>like</code> uses patterns that are described using two special characters. </p> <p>\u6ce8\u610f\u5355\u5f15\u53f7\u8868\u793a\u5b57\u7b26\u4e32\u3002</p> <ul> <li>percent (%).  The % character matches any substring. e.g. <code>select name from instructor where name like '%dar%';</code> \u627e\u540d\u5b57\u91cc\u9762\u542b\u6709 <code>dar</code> \u7684\u5b57\u7b26\u4e32\u3002 </li> <li>underscore (_).  The _ character matches any character.  </li> </ul> <p>Match the string</p> <p>\u5339\u914d\u5b57\u7b26\u4e32 <code>'100 %'</code> \u4f46\u662f <code>%</code> \u7b26\u53f7\u88ab\u6211\u4eec\u4f5c\u4e3a\u4e86\u901a\u914d\u7b26\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u7528\u5230\u8f6c\u4e49\u7b26 <code>\\</code>. <code>\\%</code> \u5373\u5c06 <code>%</code> \u4f5c\u4e3a\u6b63\u5e38\u5b57\u7b26\u5339\u914d\u3002 <code>\\</code> \u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u57fa\u672c\u7b26\u53f7\uff0c\u6211\u4eec\u9700\u8981\u5728\u540e\u9762\u5199\u51fa <code>escape</code> \u8868\u793a\u5176\u5728\u8fd9\u91cc\u4f5c\u4e3a\u8f6c\u4e49\u7b26\u3002\u7c7b\u4f3c\u5730\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u8f6c\u4e49\u7b26\u5b9a\u4e49\u4e3a <code>#</code>.  <pre><code>like \u2018100 \\%'  escape  '\\' \nlike \u2018100 \\%'  \nlike \u2018100  #%'  escape  \u2018#' \n</code></pre></p> <p>SQL supports a variety of string operations such as</p> <ul> <li>concatenation (using <code>||</code>)</li> <li>converting from upper to lower case (and vice versa)</li> <li>finding string length, extracting substrings, etc.  </li> </ul>"},{"location":"DB/DB3/#ordering-the-display-of-tuples","title":"Ordering the Display of Tuples","text":"<ul> <li> <p>\u5173\u7cfb\u662f\u65e0\u5e8f\u7684\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u89c4\u5b9a\u663e\u793a\u51fa\u6765\u7684\u987a\u5e8f\u3002</p> </li> <li> <p>We may specify desc for descending order or asc for ascending order, for each attribute; ascending order is the default. e.g. <code>order by name desc</code> \u53ef\u4ee5\u6392\u5e8f\u7684\u7c7b\u578b\uff0c\u5982\u5b57\u7b26\u4e32\u3001\u6570\u5b57\u3002</p> </li> <li>Can sort on multiple attributes e.g. <code>order by  dept_name, name</code> \u5148\u6309\u7b2c\u4e00\u4e2a\u6392\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u5143\u7d20\u76f8\u540c\u518d\u6309\u7b2c\u4e8c\u4e2a\u6392\u3002</li> </ul> <p>List in alphabetic order the names of all instructors</p> <pre><code>select distinct name\nfrom   instructor\norder by name\n</code></pre>"},{"location":"DB/DB3/#the-limit-clause","title":"The <code>limit</code> Clause","text":"<ul> <li>The <code>limit</code> clause can be used to constrain the number of rows returned by the select statement.\uff08\u524d\u51e0\u540d\uff09</li> <li> <p>limit clause takes one or two numeric arguments, which must both be nonnegative integer constants: </p> </li> <li> <p><code>limit offset, row_count</code></p> </li> <li><code>limit row_count == limit 0, row_count</code></li> </ul> <p>e.g. <code>select  name from instructor order by salary desc limit 3\uff1b   //  limit 0,3</code></p>"},{"location":"DB/DB3/#set-operations","title":"Set Operations","text":"<ul> <li><code>union, intersect, except</code> \u662f\u4e25\u683c\u7684\u96c6\u5408\u64cd\u4f5c\uff0c\u4f1a\u5bf9\u7ed3\u679c\u53bb\u91cd.</li> <li><code>union all</code>, <code>intersect all</code> and <code>except all</code>. \u4fdd\u6301\u591a\u91cd\u96c6\u3002</li> </ul> Example"},{"location":"DB/DB3/#null-values","title":"Null Values","text":"<p>null signifies an unknown value or that a value does not exist.</p> <ul> <li>The result of any arithmetic expression involving null is null. e.g. <code>5 + null</code> returns null</li> <li>The predicate is null can be used to check for null values. e.g. Find all instructors whose salary is null.  <code>select name from instructor where salary is null</code></li> <li> <p>Comparisons with null values return the special truth value: unknown. </p> </li> <li> <p>Result of select predicate is treated as false if it evaluates to unknown</p> </li> </ul>"},{"location":"DB/DB3/#aggregate-functions","title":"Aggregate Functions","text":"Example <p>\u6ce8\u610f\u5728 <code>select</code> \u91cc\u51fa\u73b0\u7684\u5c5e\u6027\uff0c\u9664\u4e86\u7edf\u8ba1\u51fd\u6570\u4ee5\u5916\uff0c\u4e00\u5b9a\u8981\u662f\u5206\u7ec4\u5c5e\u6027\u91cc\u51fa\u73b0\u8fc7\u7684\u3002</p> <p>Tip</p> <ul> <li>\u661f\u53f7\"*\"\u53ef\u4ee5\u7528\u5728select\u5b50\u53e5\u4e2d\u8868\u793a\u201c\u6240\u6709\u7684\u5c5e\u6027\uff0c\u5982<code>select *</code>\u6216<code>select instructor.*</code></li> </ul>"},{"location":"DB/DB3/#having-clause","title":"Having Clause","text":"<p>\u5bf9\u5206\u7ec4\u540e\u7684\u7ec4\u8fdb\u884c\u7b5b\u9009\u3002  </p> <p>e.g. </p> <pre><code>select dept_name, count (*) as cnt\nfrom instructor\nwhere  salary &gt;=100000\ngroup by dept_name\nhaving  count (*) &gt; 10\norder by cnt;\n</code></pre> <p>predicates in the <code>having</code> clause are applied after the formation of groups whereas predicates in the <code>where</code> clause are applied before forming groups.  </p>"},{"location":"DB/DB3/#null-values-and-aggregates","title":"Null Values and Aggregates","text":"<p><code>select sum (salary) from instructor</code> </p> <ul> <li>Above statement ignores null amounts</li> <li>Result is null if there is no non-null amount</li> <li>All aggregate operations except <code>count(*)</code> ignore tuples with null values on the aggregated attributes</li> </ul> Arithmetric expression with Aggregate functions <p> </p> <p>\u7b2c\u4e8c\u4e2a\u8868\u793a\u91cd\u540d\u7387\u5c0f\u4e8e\u5343\u5206\u4e4b\u4e00\u7684\u7cfb\u3002</p>"},{"location":"DB/DB3/#nested-subqueries","title":"Nested Subqueries","text":"<p>A subquery is a select-from-where expression that is nested within another query.</p>"},{"location":"DB/DB3/#set-membership","title":"Set Membership","text":"<p><code>in, not in</code></p> Example <p> </p> <p>\u9664\u4e86\u5355\u4e2a\u5143\u7d20\u5916\uff0c\u5143\u7ec4\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>in, not in</code> </p> <p>Find the total number of (distinct) students who have taken course sections taught by the instructor with ID 10101</p> <pre><code>select count (distinct ID)\nfrom takes\nwhere (course_id, sec_id, semester, year) in \n        (select course_id, sec_id, semester, year\n                                 from teaches\n                                 where teaches.ID= \u201810101\u2019);\n</code></pre>"},{"location":"DB/DB3/#set-comparison","title":"Set Comparison","text":"<ul> <li><code>some</code> \u67d0\u4e9b\u6210\u5458   </li> <li><code>all</code> \u6240\u6709\u6210\u5458</li> </ul> <p>Example</p> <p>\u5de5\u8d44\u5927\u4e8e\u751f\u7269\u7cfb\u4e2d\u7684\u67d0\u4e9b\u8001\u5e08\u7684\u8001\u5e08. <pre><code>select name\nfrom instructor\nwhere salary &gt; some (select salary\n                                    from instructor\n                                    where dept_name = \u2019Biology\u2019);\n</code></pre></p>"},{"location":"DB/DB3/#scalar-subquery","title":"Scalar Subquery","text":"<p>Scalar (\u6807\u91cf) subquery is one which is used where a single value is expected.  </p> <p>Example</p> <pre><code>select name\nfrom instructor\nwhere  salary * 10 &gt; \n    (select budget from department \n    where department.dept_name = instructor.dept_name)\n</code></pre> <p>\u8fd9\u91cc <code>dept_name</code> \u662f\u8fd9\u4e2a\u8868\u7684\u4e3b\u952e\uff0c\u53ea\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u53ef\u4ee5\u4e0d\u7528 <code>some, all</code> \u7684\u3002</p> <p>Runtime error if subquery returns more than one result tuple.  </p>"},{"location":"DB/DB3/#test-for-empty-relations","title":"Test for Empty Relations","text":"<p>The exists construct returns the value true if the argument subquery is nonempty.</p> <ul> <li><code>exists r</code> \\(\\Leftrightarrow r \\neq \\emptyset\\)</li> <li><code>not exists r</code> \\(\\Leftrightarrow r = \\emptyset\\)</li> </ul> <p>Example</p> <p>09FALL \u5f00\u7684\u8bfe\uff0c\u800c\u4e14 10SPRING \u4e5f\u5f00\u4e86\u8bfe\u3002 <pre><code>select course_id\nfrom section as S\nwhere semester = \u2019Fall\u2019 and year= 2009 and                exists (select *                            \nfrom section as T                      \n    where semester = \u2019Spring\u2019 and year= 2010 and S.course_id= T.course_id);\n</code></pre></p> <p>Example</p> <p>Find all students who have taken all courses offered in the Biology department. SQL \u8bed\u53e5\u5f80\u5f80\u9700\u8981\u9006\u5411\u8003\u8651\uff0c\u5373\u627e\u5230\u8fd9\u6837\u7684\u5b66\u751f\uff0c\u4e0d\u5b58\u5728\u4ed6\u6ca1\u9009\u8fc7\u7684\u751f\u7269\u7cfb\u7684\u8bfe\u3002 <pre><code>select distinct S.ID, S.name\nfrom student as S\nwhere not exists ( (select course_id\n                        from course\n                        where dept_name = \u2019Biology\u2019)\n                except\n                    (select T.course_id\n                        from takes as T\n                        where S.ID = T.ID));\n</code></pre></p>"},{"location":"DB/DB3/#test-for-absence-of-duplicate-tuples_1","title":"Test for Absence of Duplicate Tuples","text":"<p>The <code>unique</code> construct tests whether a subquery has any duplicate tuples in its result. \u9a8c\u8bc1\u662f\u5426\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u800c\u975e\u591a\u91cd\u96c6\u3002  </p> <ul> <li>Evaluates to \u201ctrue\u201d on an empty set.  \u53ef\u4ee5\u5c06 unique \u7406\u89e3\u4e3a at most once. </li> </ul> <p>Example</p> <p> </p> <ul> <li>\u5982\u679c\u4e0d\u52a0 exist, \u53ef\u80fd\u6709\u6ca1\u5f00\u8fc7\u7684\u8bfe\u4e5f\u88ab\u7b97\u8fdb\u53bb\u3002\u6211\u4eec\u8fd9\u91cc\u6c42\u5f97\u662f\u6070\u597d\u53ea\u5f00\u8fc7\u4e00\u6b21\u7684\u3002</li> </ul> Example <p> - \u4e5f\u53ef\u4ee5\u7528 <code>group by count(*) &gt; 1</code> \u5b9e\u73b0\u3002</p>"},{"location":"DB/DB3/#with-clause","title":"With Clause","text":"<p>The <code>with</code> clause provides a way of defining a temporary view whose definition is available only to the query in which the with clause occurs. \u6784\u9020\u4e00\u4e2a\u4e34\u65f6\u8868(\u5b50\u67e5\u8be2\u627e\u6700\u503c\u4e4b\u7c7b\u7684) </p> <p>Example</p> <p>Find all departments with the maximum budget. <pre><code>with max_budget (value) as \n    (select max(budget)\n    from department)\nselect dept_name\nfrom department, max_budget\nwhere department.budget = max_budget.value;\n</code></pre></p> <p>\u4e24\u4e2a\u4e34\u65f6\u8868</p> <ul> <li>Complex Queries using With Clause <pre><code>with dept _total (dept_name, value) as //\u4e24\u4e2a\u4e34\u65f6\u8868 \n        (select dept_name, sum(salary) \n         from instructor\n         group by dept_name),\n        dept_total_avg(value) as\n        (select avg(value)\n         from dept_total)\nselect dept_name\nfrom dept_total, dept_total_avg\nwhere dept_total.value &gt;= dept_total_avg.value;\n</code></pre></li> </ul>"},{"location":"DB/DB3/#modification-of-the-database","title":"Modification of the Database(\u6570\u636e\u5e93\u7684\u4fee\u6539)","text":""},{"location":"DB/DB3/#deletion","title":"Deletion","text":"Example"},{"location":"DB/DB3/#insertion","title":"Insertion","text":"Example <p>\u7b2c\u4e8c\u79cd\u5199\u6cd5\uff0c\u53ef\u4ee5\u4e0d\u7528\u4e25\u683c\u6309\u7167\u5b9a\u4e49\u7684\u5143\u7d20\u987a\u5e8f\uff0c\u53ea\u8981\u548c\u81ea\u5df1\u5199\u7684\u5bf9\u5e94\u5373\u53ef\u3002</p> <p>\u9664\u4e86\u57fa\u672c\u5199\u6cd5\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728 <code>insert</code> \u540e\u8ddf\u67e5\u8be2\u8bed\u53e5\uff0c\u628a\u67e5\u8be2\u7ed3\u679c\u63d2\u5165\u5230\u8868\u91cc\u53bb\u3002</p> Example <p> </p>"},{"location":"DB/DB3/#updates","title":"Updates","text":"<p><code>update ... set ...</code></p> <p>The order is important. So it can be done better using the <code>case</code> statement.  </p> Example <p></p>"},{"location":"DB/DB4/","title":"Chapter 4 Intermediate SQL","text":"<p>Abstract</p> <ul> <li>Joined Relation</li> <li>SQL Data Types and Schemas</li> <li>Integrity Constraints</li> <li>Views</li> <li>Indexes</li> <li>Transactions</li> <li>Authorization</li> </ul> <p>Warning</p> <p>\u672c\u5468\u90e8\u5206\u5185\u5bb9\u5728\u5173\u7cfb\u6a21\u578b\u4e2d\u5df2\u7ecf\u66f4\u52a0\u5730\u8be6\u7ec6\u8bb0\u5f55\u8fc7\uff0c\u56e0\u6b64\u672c\u5468\u7684\u8bfe\u7a0b\u5f3a\u5ea6\u76f8\u5bf9\u8f83\u4f4e\u3002\u5b59\u8001\u5e08\u751a\u81f3\u7ed9\u4e86\u5341\u4e94\u5206\u949f\u505a\u5c0f\u6d4b</p>"},{"location":"DB/DB4/#joined-relations","title":"Joined Relations","text":"<ul> <li>Join operations take two relations and return as a result another relation.</li> <li>Join operations are typically used as subquery expressions in the from clause</li> <li>Join condition \u2013 defines which tuples in the two relations match, and what attributes are present in the result of the join.</li> <li>Join type \u2013 defines how tuples in each relation that do not match any tuple in the other relation (based on the join condition) are treated.</li> </ul> Join operations \u2013 Example natural join\u7684\u7279\u6027 <p>  - \u5b59\u8001\u5e08\u7684quzi2\u7684\u7b2c\u56db\u9898\u7684\u53c2\u8003\u7b54\u6848\u5e94\u8be5\u6709\u8bef\uff0c\u591a\u52a0\u4e86natural,natural\u4f1a\u81ea\u52a8\u53bb\u9664\u91cd\u590d\u7684attributes</p>"},{"location":"DB/DB4/#outer-join","title":"Outer Join","text":"<ul> <li>An extension of the join operation that avoids loss of information.</li> <li>Computes the join and then adds tuples form one relation that does not match tuples in the other relation to the result of the join. </li> <li>Uses null values</li> </ul> Left Outer Join Right Outer Join Full Outer Join Joined Relations \u2013 Examples"},{"location":"DB/DB4/#sql-data-types-and-schemas","title":"SQL Data Types and Schemas","text":""},{"location":"DB/DB4/#built-in-data-types-in-sql","title":"Built-in Data Types in SQL","text":"<ul> <li>date Dates, containing a (4 digit) year, month and date<ul> <li>Example: date \u20182005-7-27\u2019</li> </ul> </li> <li>time* Time of day, in hours, minutes and seconds.<ul> <li>Example: time \u201809:00:30\u2019     time \u201809:00:30.75\u2019</li> </ul> </li> <li>timestamp: date plus time of day<ul> <li>Example: timestamp \u20182005-7-27 09:00:30.75\u2019</li> </ul> </li> <li>interval period of time<ul> <li>Example:  interval \u20181\u2019 day</li> <li>Subtracting a date/time/timestamp value from another gives an interval value</li> <li>Interval values can be added to date/time/timestamp values</li> <li>date, time functions: <ul> <li><code>current_date(), current_time()</code></li> <li><code>year(x), month(x), day(x), hour(x), minute(x), second(x)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"DB/DB4/#user-defined-types","title":"User-Defined Types","text":"<p><code>create type</code> construct in SQL creates user-defined type.  </p> <p>Example</p> <p><code>create type Dollars as numeric (12,2) final</code> \u5b9a\u4e49\u4e86 <code>Dollars</code> \u8fd9\u4e2a\u7c7b\u578b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u5b83\u5f53\u4f5c\u5143\u7c7b\u578b\u4f7f\u7528\u3002 <pre><code>create table department\n    (dept_name varchar (20),\n    building varchar (15),\n    budget Dollars);\n</code></pre></p> <p>\u8fd9\u6837\u53ef\u4ee5\u652f\u6301\u5f3a\u7c7b\u578b\u68c0\u67e5\uff0c\u53ef\u4ee5\u9632\u6b62\u5982 200 \u7f8e\u5143 + 300 RMB \u5f97\u5230 500 \u5143\u7684\u9519\u8bef\u3002</p>"},{"location":"DB/DB4/#domains","title":"Domains(\u57df)","text":"<p><code>create domain</code> construct in SQL-92 creates user-defined domain types.  </p> <p>Domains can have constraints, such as <code>not null</code>, specified on them.</p> <p>Example</p> <p><code>create domain person_name char(20) not null</code> <pre><code>create domain degree_level varchar(10)\n    constraint degree_level_test\n    check (value in (\u2019Bachelors\u2019, \u2019Masters\u2019, \u2019Doctorate\u2019));\n</code></pre> \u8fd9\u91cc\u7684 constraint \u53ef\u4ee5\u5bf9 domain \u7684\u53d6\u503c\u8fdb\u884c\u9650\u5236\u3002</p> <p>\u4e0d\u540c type \u7684\u53d8\u91cf\uff0c\u5373\u4f7f\u5b9a\u4e49\u76f8\u540c\uff0c\u4e5f\u4e0d\u80fd\u8fdb\u884c\u8fd0\u7b97\u3002\u4e0d\u540c domain \u7684\u53d8\u91cf\uff08\u57fa\u7840\u7c7b\u578b\u76f8\u540c\uff09\u53ef\u4ee5\u8fd0\u7b97\u3002</p>"},{"location":"DB/DB4/#large-object-types","title":"Large-Object Types","text":"<p>Large objects (photos, videos, CAD files, etc.) are stored as a large object:  </p> <ul> <li> <p>blob: binary large object -- object is a large collection of uninterpreted binary data (whose interpretation is left to an application outside of the database system) \u5b58\u50a8\u5927\u5bf9\u8c61\u6570\u636e\u7c7b\u578b\uff0c\u5b9e\u9645\u4e0a\u53ea\u662f\u5b58\u653e\u6307\u9488\u3002</p> BLOB in MySQL <ul> <li>TinyBlob \uff1a  0 ~ 255 bytes.</li> <li>Blob\uff1a 0 ~ 64K bytes.</li> <li>MediumBlob \uff1a 0 ~ 16M bytes.</li> <li>LargeBlob : 0 ~ 4G  bytes.</li> </ul> </li> <li> <p>clob: character large object -- object is a large collection of character data \u6587\u672c\u5927\u5bf9\u8c61  </p> </li> </ul>"},{"location":"DB/DB4/#_1","title":"*\u751f\u6210\u552f\u4e00\u7801\u503c","text":"<ul> <li><code>ID number(5) generated always as identity</code></li> <li>\u4f7f\u7528\u4e86<code>always</code>\u9009\u9879\u65f6\uff0c\u4efb\u4f55<code>insert</code>\u8bed\u53e5\u90fd\u9700\u8981\u907f\u514d\u4e3a\u751f\u6210\u7684\u7801\u6765\u6307\u5b9a\u4e00\u4e2a\u503c\u3002\u4e3a\u6b64\uff0cinsert\u8981\u6307\u5b9a\u987a\u5e8f\u3002</li> <li>\u81ea\u52a8\u751f\u6210\u7684ID\u53ef\u4ee5\u901a\u8fc7select\u67e5\u5230</li> </ul>"},{"location":"DB/DB4/#integrity-constraints","title":"Integrity Constraints(\u5b8c\u6574\u6027\u7ea6\u675f)","text":"<p>\u5b8c\u6574\u6027\u7ea6\u675f\u901a\u5e38\u88ab\u89c6\u4f5c\u6570\u636e\u5e93\u6a21\u5f0f\u8bbe\u8ba1\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u4f5c\u4e3a\u7528\u4e8e\u521b\u5efa\u5173\u7cfb\u7684<code>create table</code>\u547d\u4ee4\u7684\u4e00\u90e8\u5206\u88ab\u58f0\u660e\uff0c\u7136\u800c\u4e5f\u53ef\u4ee5\u901a\u8fc7<code>alter table table-name add constraint</code>\u547d\u4ee4\u8ffd\u52a0\u7ea6\u675f\u3002\u5982\u679c\u6ee1\u8db3\u539f\u6709\u7684\u7ea6\u675f\uff0c\u5219\u4f1a\u6210\u529f\u6dfb\u52a0</p> Example <p></p>"},{"location":"DB/DB4/#integrity-constraints-on-a-single-relation","title":"Integrity Constraints on a Single Relation","text":"<ul> <li>not null</li> <li>primary key</li> <li>unique</li> <li>check (P), where P is a predicate</li> <li>foreign key</li> </ul>"},{"location":"DB/DB4/#not-null","title":"not null\u7ea6\u675f","text":"<ul> <li>not null<ul> <li>Declare name and budget to be not null<ul> <li>name varchar(20) not null</li> <li>budget numeric(12,2) not null</li> </ul> </li> </ul> </li> </ul>"},{"location":"DB/DB4/#_2","title":"\u552f\u4e00\u6027\u7ea6\u675f","text":"<ul> <li> <p><code>unique(A1, A2, ..., Am)</code> The unique specification states that the attributes <code>A1, A2, ..., Am</code> form a super key \uff08\u4e0d\u4e00\u5b9a\u662f candidate key\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e9b\u5c5e\u6027\u5f62\u6210\u4e86\u8d85\u7801)  </p> <ul> <li>\u6bd4\u5982\u5b66\u751f\u4e2a\u4eba\u4fe1\u606f\uff0c\u6211\u4eec\u77e5\u9053 ID \u662f\u4e3b\u952e\uff0c\u4f46\u5b9e\u9645\u4e0a\u90ae\u7bb1\u3001\u7535\u8bdd\u53f7\u7801\u7b49\u4e5f\u4e0d\u80fd\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u901a\u8fc7\u8bed\u53e5\u544a\u8bc9\u6570\u636e\u5e93\uff0c\u6570\u636e\u5e93\u4f1a\u4e3a\u6211\u4eec\u7ef4\u62a4\u8fd9\u4e9b\u7ea6\u675f\u6761\u4ef6\u3002Candidate keys are permitted to be null (in contrast to primary keys).</li> </ul> </li> </ul>"},{"location":"DB/DB4/#check","title":"check\u5b50\u53e5","text":"<ul> <li><code>check (P)</code>, where P is a predicate  </li> </ul> Example <ul> <li> <p>\u53ef\u4ee5\u6709\u590d\u6742\u67e5\u8be2\uff0c\u4f46\u8bb8\u591a\u6570\u636e\u5e93\u4e0d\u652f\u6301\u3002e.g. <code>check ((course_id, sec_id, semester, year)  in (select course_id, sec_id, semester, year from teaches))</code></p> </li> <li> <p>Unfortunately:  subquery in check clause not supported by pretty much any database</p> </li> <li>*Alternative: triggers *</li> </ul>"},{"location":"DB/DB4/#referential-integrity","title":"Referential Integrity","text":"<ul> <li> <p><code>foreign key</code></p> <p>Integrity Constraint Violation During Transactions</p> <p> </p> <p>\u5728\u4e00\u4e2a\u4eba\u7684\u7236\u6bcd\u8fd8\u6ca1\u63d2\u5165\u7684\u65f6\u5019\uff0c\u65e0\u6cd5\u63d2\u5165\u8fd9\u4e2a\u4eba\uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002 \u53ef\u4ee5\u89c4\u5b9a\uff0c\u5728\u8fd9\u4e2a\u4e8b\u52a1\u7ed3\u675f\u65f6\u518d\u68c0\u67e5\u5b8c\u6574\u6027\u7ea6\u675f\u6761\u4ef6\uff0c\u4e2d\u95f4\u72b6\u6001\u53ef\u4ee5\u4e0d\u6ee1\u8db3\u3002</p> </li> </ul> <p>Cascading Actions in Referential Integrity\u89c1\u4ee5\u524d\u7b14\u8bb0</p>"},{"location":"DB/DB4/#assertion","title":"assertion(\u65ad\u8a00)","text":"<ul> <li>\u8868\u8fbe\u4e86\u6211\u4eec\u5e0c\u671b\u6570\u636e\u5e93\u603b\u80fd\u6ee1\u8db3\u7684\u4e00\u4e2a\u6761\u4ef6</li> <li><code>create assertion &lt;assertion-name&gt; check &lt;predicate&gt;;</code> </li> </ul> <p>Example</p> <p></p> <ul> <li>\u4f46\u4f7f\u7528 <code>assert</code> \u540e\uff0c\u6bcf\u4e2a\u5143\u7ec4\u7684\u6bcf\u6b21\u72b6\u6001\u66f4\u65b0\u65f6\u90fd\u8981\u8fdb\u884c\u68c0\u67e5\uff0c\u5f00\u9500\u8fc7\u5927\uff0c\u6570\u636e\u5e93\u4e00\u822c\u4e0d\u652f\u6301\u3002</li> <li>\u89e6\u53d1\u5668\u53ef\u4ee5\u5b9e\u73b0\u7b49\u4ef7\u529f\u80fd</li> </ul>"},{"location":"DB/DB4/#views","title":"Views","text":"<p>A view provides a mechanism to hide certain data from the view of certain users.</p> <ul> <li>\u67e5\u8be2\u53ef\u4ee5\u6784\u5efa\u865a\u62df\u5173\u7cfb</li> <li>\u6784\u5efa\u4e00\u4e2a\u865a\u62df\u5173\u7cfb\u53ef\u4ee5\u9690\u85cf\u90e8\u5206\u7684\u4fe1\u606f</li> </ul>"},{"location":"DB/DB4/#view-definition","title":"View Definition","text":"<p>A view is defined using the create view statement which has the form <code>create view v as &lt; query expression &gt;</code> </p> Example <p> </p> <p>view \u53ef\u4ee5\u9690\u6389\u4e00\u4e9b\u7ec6\u8282\uff0c\u6216\u8005\u52a0\u4e0a\u4e00\u4e9b\u7edf\u8ba1\u6570\u636e\u3002\u53ef\u4ee5\u628a view \u5f53\u4f5c\u8868\u8fdb\u884c\u67e5\u8be2\u3002</p> <ul> <li>\u9690\u85cf\u4e0d\u5fc5\u8981\u7684\u7ec6\u8282\uff0c\u7b80\u5316\u7528\u6237\u89c6\u91ce</li> <li>\u65b9\u4fbf\u67e5\u8be2\u4e66\u5199</li> <li>\u6709\u5229\u4e8e\u6743\u9650\u63a7\u5236\uff08\u5982\u7528\u6237\u53ef\u4ee5\u770b\u5230\u5de5\u8d44\u603b\u548c\uff0c\u4f46\u4e0d\u80fd\u770b\u5230\u6bcf\u4e2a\u4eba\u7684\u5de5\u8d44\uff09</li> <li>\u6709\u72ec\u7acb\u6027\uff0c\u4f7f\u5f97\u6570\u636e\u5e93\u5e94\u7528\u5177\u6709\u8f83\u5f3a\u7684\u9002\u5e94\u6027\u3002</li> </ul> <p>\u53ef\u4ee5\u57fa\u4e8e\u89c6\u56fe\u518d\u5b9a\u4e49\u89c6\u56fe\u3002</p> <p>\u6570\u636e\u5e93\u4e0d\u8fdb\u884c\u4e0e\u8ba1\u7b97\u548c\u5b58\u50a8\uff0c\u6570\u636e\u5e93\u7cfb\u7edf\u5b58\u50a8\u7684\u662f\u4e0e\u89c6\u56fe\u5173\u7cfb\u76f8\u5173\u8054\u7684\u67e5\u8be2\u8868\u8fbe\u5f0f</p> Views Defined Using Other Views <p> </p>"},{"location":"DB/DB4/#update-of-a-view","title":"Update of a View","text":"<p>\u5bf9\u4e00\u4e2a view \u8fdb\u884c\u4fee\u6539\uff0c\u76f8\u5f53\u4e8e\u901a\u8fc7\u8fd9\u4e2a\u7a97\u53e3\u5bf9\u539f\u8868\u7ee7\u7eed\u4fee\u6539\u3002  </p> <p>Example</p> <p> </p> <p>\u63d2\u5165\u540e\uff0c\u539f\u8868\u4e5f\u4f1a\u6709\u8fd9\u6761\u6570\u636e\uff0c\u5bf9\u4e8e\u5176\u7f3a\u5c11\u7684 <code>salary</code> \u5c5e\u6027\uff0c\u6211\u4eec\u8bbe\u5b9a\u4e3a <code>NULL</code>. \u5982\u679c\u8fd9\u4e2a\u5c5e\u6027\u7684\u7ea6\u675f\u662f <code>not NULL</code> \u7684\uff0c\u90a3\u4e48\u6211\u4eec\u65e0\u6cd5\u6267\u884c\u8fd9\u6b21\u63d2\u5165\u3002</p> <ul> <li>\u5982\u679c\u89c6\u56fe\u4e2d\u6709\u7edf\u8ba1\u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u662f\u4e0d\u53ef\u4fee\u6539\u7684\u3002  </li> <li>\u6d89\u53ca\u5230\u5355\u4e2a\u8868\uff0c\u53ea\u662f\u9009\u51fa\u4e86\u90e8\u5206\u5c5e\u6027\uff08\u53bb\u6389\u975e\u4e3b\u5c5e\u6027\uff09\u7684\u884c\u5217\u89c6\u56fe\u662f\u53ef\u66f4\u65b0\u7684\u3002</li> <li>\u5982\u679c\u89c6\u56fe\u7684\u5efa\u7acb\u6709\u9009\u62e9\u8981\u6c42\uff0c\u4e0d\u6ee1\u8db3\u5219\u65e0\u6cd5\u63d2\u5165 </li> </ul>"},{"location":"DB/DB4/#view-and-logical-data-indepencence","title":"*View and Logical Data Indepencence","text":"<p>If relation \\(S(a, b, c)\\) is split into two sub relations \\(S1(a,b)\\) and \\(S2(a,c)\\) How to realize the logical data independence?   </p> <ol> <li><code>create table S1...;</code> <code>create table S2...;</code></li> <li><code>insert into S1 select a, b from S;</code> <code>insert into S2 select a, c from S;</code></li> <li><code>drop table S;</code></li> <li><code>create view S(a, b, c) as select a, b, c from S1 natural join S2;</code> </li> </ol> <p><code>select * from S where...</code> \u5b9e\u9645\u4e0a\u662f\u5728\u505a <code>select * from S1 natural join S2 where ...</code> \uff08\u7cfb\u7edf\u4f1a\u5e2e\u6211\u8fd9\u6837\u505a\uff0c\u7a0b\u5e8f\u4e0d\u7528\u6539\uff0c\u53ea\u662f\u6267\u884c\u6539\u53d8\u4e86\uff09 <code>insert into S values (1,2,3)</code> \u5b9e\u9645\u4e0a\u662f\u5728\u505a <code>insert into S1 values (1,2)</code> \u548c <code>insert into S2 values (1,3)</code> </p>"},{"location":"DB/DB4/#materialized-views","title":"*Materialized Views","text":"<p>\u7269\u5316\u89c6\u56fe</p> <p>Materializing a view: create a physical table containing all the tuples in the result of the query defining the view. \u672c\u6765\u7684\u89c6\u56fe\u662f\u4e00\u4e2a\u865a\u7684\u8868\uff0c\u4e3a\u4e86\u67e5\u8be2\u6267\u884c\u6548\u7387\uff0c\u6211\u4eec\u53ef\u4ee5\u628a view \u5b9a\u4e49\u4e3a Materializing view, \u5373\u751f\u6210\u4e00\u5f20\u4e34\u65f6\u8868\u4e0e\u5176\u5bf9\u5e94\u3002  </p> <p>If relations used in the query are updated, the materialized view result becomes out of date.     * Need to maintain the view, by updating the view whenever the underlying relations are updated.  </p>"},{"location":"DB/DB4/#indexes","title":"Indexes","text":"<p>Indices are data structures used to speed up access to records with specified values for index attributes.  </p> <p>Index \u76f8\u5f53\u4e8e\u5728\u6570\u636e\u4e0a\u5efa\u7acb\u4e86 B+ \u6811\u7d22\u5f15\u3002\uff08\u7269\u7406\u5c42\u9762\uff09</p> Example <p><code>SQL create table student     (   ID varchar (5),     name varchar (20) not null,         dept_name varchar (20),             tot_cred numeric (3,0) default 0,                 primary key (ID) ) create index studentID_index on student(ID)</code> <code>select * from student where ID = \u201812345\u2019</code> \u5728\u6570\u636e\u5e93\u5185\u4e0d\u540c\u7684\u7269\u7406\u5b9e\u73b0\u6709\u4e0d\u540c\u7684\u67e5\u627e\u65b9\u6cd5\u3002 \u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u7d22\u5f15\uff0c\u53ea\u80fd\u987a\u5e8f\u67e5\u627e\u3002\u5982\u679c\u6709\u7d22\u5f15\uff0c\u7cfb\u7edf\u5185\u4f1a\u5229\u7528\u7d22\u5f15\u67e5\u627e\u3002\u4e5f\u53ef\u4ee5\u52a0\u4e0aunique,\u5982\u679c\u6570\u636e\u5e93\u7cfb\u7edf\u4e0d\u652f\u6301\u552f\u4e00\u6027\u539f\u5219\u3002 </p>"},{"location":"DB/DB4/#transactions","title":"Transactions","text":"<ul> <li>Transactions begin implicitly Ended by commit work or rollback work  </li> <li>By default on most databases: each SQL statement commits automatically  <ul> <li>Can turn off auto commit for a session e.g. in MySQL, <code>SET AUTOCOMMIT=0;</code> </li> </ul> </li> </ul> Transaction examplex <p>``` SQL SET AUTOCOMMIT=0</p> <p>UPDATE account SET balance=balance-100 WHERE ano=\u20181001\u2019; UPDATE account SETbalance=balance+100 WHERE ano=\u20181002\u2019; COMMIT;</p> <p>UPDATE account SET balance=balance -200 WHERE ano=\u20181003\u2019; UPDATE account SET balance=balance+200 WHERE ano=\u20181004\u2019;      COMMIT;</p> <p>UPDATE account SET balance=balance+balance*2.5%; COMMIT; ```</p>"},{"location":"DB/DB4/#acid-properties","title":"ACID Properties","text":"<p>A  transaction  is a unit of program execution that accesses and possibly updates various data items.To preserve the integrity of data the database system must ensure: (\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u72ec\u7acb\u6027\u3001\u6301\u7eed\u6027)</p> <ul> <li>Atomicity. Either all operations of the transaction are properly reflected in the database or none are.</li> <li>Consistency. Execution of a transaction in isolation preserves the consistency of the database. \u6570\u636e\u5e93\u6267\u884c\u4e8b\u52a1\u524d\u540e\u90fd\u662f\u4e00\u81f4\u7684\u3002</li> <li>Isolation. Although multiple transactions may execute concurrently, each transaction must be unaware of other concurrently executing transactions.  Intermediate transaction results must be hidden from other concurrently executed transactions.   \u5f88\u591a\u4e8b\u60c5\u5171\u540c\u6267\u884c\uff0c\u4ed6\u4eec\u4e0d\u80fd\u4e92\u76f8\u5f71\u54cd\u3002<ul> <li>That is, for every pair of transactions \\(T_i\\) and \\(T_j\\), it appears to \\(T_i\\) that either \\(T_j\\), finished execution before \\(T_i\\) started, or \\(T_j\\) started execution after \\(T_i\\) finished.</li> </ul> </li> <li>Durability. After a transaction completes successfully, the changes it has made to the database persist, even if there are system failures.  \u6570\u636e\u5e93\u7684\u4e8b\u52a1\u4e00\u65e6\u63d0\u4ea4\uff0c\u8fd9\u4e2a\u4fee\u6539\u5c31\u8981\u6301\u7eed\u5730\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d\u53bb\uff0c\u4e0d\u80fd\u4e22\u5931\u3002\u5982\u78c1\u76d8\u51fa\u95ee\u9898\u4e86\uff0c\u65ad\u7535\u4e86\u7b49\u4f1a\u5f15\u53d1\u8fd9\u4e2a\u95ee\u9898\u3002 \u901a\u5e38\u4f7f\u7528\u65e5\u5fd7\u3002</li> </ul>"},{"location":"DB/DB4/#authorization","title":"Authorization","text":"<ul> <li>Forms of authorization on parts of the database \u6570\u636e\u5c42\u9762\uff0c\u5373\u8868\u5df2\u7ecf\u5b58\u5728\u6211\u4eec\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u7684\u64cd\u4f5c  <ul> <li>Select - allows reading, but not modification of data.</li> <li>Insert - allows insertion of new data, but not modification of existing data.</li> <li>Update - allows modification, but not deletion of data.</li> <li>Delete - allows deletion of data.</li> </ul> </li> <li>Forms of authorization to modify the database schema \u80fd\u5426\u5b9a\u4e49\u8868\uff0c\u7d22\u5f15\u7b49  <ul> <li>Index - allows creation and deletion of indices.</li> <li>Resources - allows creation of new relations.</li> <li>Alteration - allows addition or deletion of attributes in a relation.</li> <li>Drop - allows deletion of relations.</li> </ul> </li> </ul>"},{"location":"DB/DB4/#authorization-specification-in-sql","title":"Authorization Specification in SQL","text":"<p><code>grant &lt;privilege list&gt; on &lt;relation name or view name&gt; to &lt;user list&gt;</code> \u628a\u67d0\u4e2a\u8868\u6216\u8005\u89c6\u56fe\u4e0a\u7684\u6743\u9650\u6388\u6743\u7ed9\u7528\u6237  </p> <p><code>&lt;user list&gt;</code> is:  </p> <ul> <li>a user-id</li> <li><code>public</code>, which allows all valid users the privilege granted</li> <li>A role (more on this later)</li> </ul> Example <ul> <li>grant select on instructor  to \\(U_1, U_2, U_3\\)</li> <li>grant select on department  to public</li> <li>grant update (budget) on department  to \\(U_1,U_2\\)</li> <li>grant all privileges on department to \\(U_1\\)</li> </ul> <p>update \u53ef\u4ee5\u7ec6\u5316\u5230\u5177\u4f53\u53ef\u4ee5\u5bf9\u54ea\u5217\u8fdb\u884c\u4fee\u6539\u3002  </p>"},{"location":"DB/DB4/#revoking-authorization-in-sql","title":"Revoking Authorization in SQL","text":"<p>The revoke statement is used to revoke authorization. <code>revoke &lt;privilege list&gt; on &lt;relation name or view name&gt; from &lt;user list&gt;</code> </p>"},{"location":"DB/DB4/#roles","title":"Roles","text":"<p>Privileges can be granted to roles. \u89d2\u8272\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u7ec4\u6743\u9650\u7684\u96c6\u5408\uff0c\u5982\u5b66\u6821\u7684\u6559\u52a1\u7ba1\u7406\u5458\u3001\u8001\u5e08\u3002  </p> <p><code>create role &lt;role-name&gt;</code> \u521b\u9020\u89d2\u8272\uff0c\u968f\u540e\u53ef\u4ee5\u628a\u6743\u9650\u6388\u4e88\u7ed9\u4ed6\u3002 \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u628a\u89d2\u8272\u7684\u6743\u9650\u6388\u4e88\u7ed9\u7528\u6237/\u5176\u4ed6\u89d2\u8272\u3002  </p> Example <p>``` SQL create role instructor; grant select on takes to instructor;  // \u6388\u4e88\u6743\u9650\u7ed9\u89d2\u8272 grant instructor to Amit;   //\u5c06\u89d2\u8272\u7684\u6743\u9650\u6388\u4e88\u7ed9\u7528\u6237</p> <p>create role teaching_assistant; grant teaching_assistant to instructor;  // \u53ef\u4ee5\u5c06\u89d2\u8272\u7684\u6743\u9650\u6388\u4e88\u7ed9\u5176\u4ed6\u89d2\u8272  ```</p>"},{"location":"DB/DB4/#other-authorization-features","title":"Other Authorization Features","text":"<p>\u5f15\u7528\u7684\u6743\u9650\u6bd4\u8f83\u7279\u6b8a</p> <p><code>references privilege to create foreign key</code></p> <p>Example</p> <p><code>grant reference (dept_name) on department to Mariano;</code> </p> <p>\u5982\u679c\u4e0d\u4f5c\u4e3a\u6743\u9650\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u95f4\u63a5\u7684\u5916\u952e\u7ea6\u675f\u548c cascade \u5220\u6389\u88ab\u5f15\u7528\u7684\u6570\u636e\u3002\uff08\u5220\u6389\u996e\u7528\u8005\uff0c\u5219\u88ab\u5f15\u7528\u8005\u4e5f\u8981\u88ab\u5220\u9664\uff09\u56e0\u6b64\u8fd9\u4e5f\u662f\u4e2a\u6743\u9650</p> <ul> <li>transfer of privileges<ul> <li><code>grant select on department to Amit with grant option;</code>  \u52a0\u4e0a <code>with grant option</code> \u540e\uff0c\u7528\u6237\u53ef\u4ee5\u628a\u83b7\u5f97\u7684\u6743\u9650\u4f20\u9012\u4e0b\u53bb\u3002  </li> <li><code>revoke select on department from Amit, Satoshi cascade;</code> <code>cascade</code> \u628a\u8be5\u7528\u6237\u53ca\u5176\u6388\u4e88\u7684\u6743\u9650\u5168\u90e8\u6536\u56de\uff0c\u7ea7\u8054\u53cd\u5e94\u3002  </li> <li><code>revoke select on department from Amit, Satoshi restrict;</code> <code>restrict</code> \u53ea\u6536\u56de\u8be5\u7528\u6237\u7684\u6743\u9650\u3002  </li> <li><code>revoke grant option  for select on department from Amit;</code> \u6536\u56de\u7528\u6237\u8f6c\u6388\u7684\u6743\u529b\u3002  </li> </ul> </li> </ul>"},{"location":"DB/DB5/","title":"Chapter 5 Advanced SQL","text":"<p>Abstract</p> <ul> <li>Accessing SQL From a Programming Language </li> <li>Functions and Procedures</li> <li>*Triggers</li> <li>**Recursive Queries</li> <li>**Advanced Aggregation Features</li> </ul>"},{"location":"DB/DB5/#accessing-sql-from-a-programming-language","title":"Accessing SQL from a Programming Language","text":""},{"location":"DB/DB5/#_1","title":"\u4e24\u4e2a\u4e3b\u8981\u539f\u56e0","text":"<ul> <li>Not all queries can be expressed in SQL, since SQL does not provide the full expressive power of a general-purpose language. \u4e0d\u662f\u6240\u6709\u7684\u67e5\u8be2\u90fd\u80fd\u7528 SQL \u8bed\u8a00\u8868\u8fbe\u3002</li> <li>Non-declarative actions -- such as printing a report, interacting with a user, or sending the results of a query to a graphical user interface -- cannot be done from within SQL. \u7528\u6237\u4ea4\u4e92\u662f\u56fe\u5f62\u754c\u9762\uff0c\u8bed\u97f3\u3001\u56fe\u50cf\uff0c\u6570\u636e\u5e93\u4e0d\u5177\u5907\u8fd9\u65b9\u9762\u7684\u529f\u80fd\u3002</li> </ul>"},{"location":"DB/DB5/#_2","title":"\u4e24\u4e2a\u4e3b\u8981\u65b9\u5f0f","text":"<p>\u4ece\u9ad8\u7ea7\u8bed\u8a00\uff08\u5982 C\uff09\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u4e3b\u8981\u662f\u4e0b\u9762\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <p>\u4e66\u4e0a\u5199\u7684\u662fDynamic SQL(\u901a\u7528\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u4e00\u7ec4\u51fd\u6570(\u5bf9\u4e8e\u8fc7\u7a0b\u5f0f\u8bed\u8a00)\u6216\u8005\u65b9\u6cd5(\u5bf9\u4e8e\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00)\u6765\u8fde\u63a5\u5230\u6570\u636e\u5e93\u670d\u52a1\u5668\u5e76\u4e0e\u4e4b\u901a\u4fe1),\u52a8\u6001SQL\u5141\u8bb8\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u6765\u6784\u5efaSQL\u67e5\u8be2\uff0c\u63d0\u4ea4\u67e5\u8be2\uff0c\u7136\u540e\u4ee5\u6bcf\u6b21\u4e00\u4e2a\u5143\u7ec4\u7684\u65b9\u5f0f\u628a\u7ed3\u679c\u5b58\u5165\u7a0b\u5e8f\u53d8\u91cf\u4e2d\u3002</p> <ul> <li>API(Application Program Interface) -- A general-purpose program can connect to and communicate with a database server using a collection of functions.  </li> <li>Embedded SQL(\u5d4c\u5165\u5f0fSQL) -- provides a means by which a program can interact with a database server.  \u628a SQL \u8bed\u53e5\u5d4c\u5165\u5230\u8bed\u8a00\u5185<ul> <li>The SQL statements are translated at compile time into function calls.   </li> <li>At runtime,  these function calls connect to the database  using an API that provides dynamic SQL facilities.  </li> </ul> </li> </ul>"},{"location":"DB/DB5/#jdbc-and-odbc","title":"JDBC and ODBC","text":"<p>API (application-program interface) for a program to interact with a database server Application makes calls to</p> <ul> <li>Connect with the database server \u5efa\u7acb\u8fde\u63a5</li> <li>Send SQL commands to the database server \u6307\u4ee4\u53d1\u9001\u5230\u670d\u52a1\u5668</li> <li>Fetch tuples of result one-by-one into program variables \u62ff\u56de\u7ed3\u679c</li> </ul> <p>SQL \u4e0e C \u8bed\u8a00\u5b58\u5728\u9e3f\u6c9f\uff08\u5982 select \u5f97\u5230\u7684\u662f\u96c6\u5408\uff0c\u4f46\u662f C \u8bed\u8a00\u6ca1\u6709\u8fd9\u79cd\u7c7b\u578b\uff09\u4f1a\u8fd4\u56de\u6307\u9488/\u8fed\u4ee3\u5668</p> <ul> <li>ODBC (Open Database Connectivity) works with C, C++, C#</li> <li>JDBC (Java Database Connectivity) works with Java \u901a\u8fc7\u7c7b\u5b9a\u4e49\uff0c\u5c06\u6570\u636e\u5e93\u64cd\u4f5c\u5c01\u88c5\u5230 Java \u5185</li> <li>Embedded SQL in C</li> <li>SQLJ - embedded SQL in Java</li> <li>JPA(Java Persistence API)  - OR mapping of Java  </li> </ul>"},{"location":"DB/DB5/#jdbc","title":"JDBC","text":"<p>JDBC is a Java API for communicating with database systems supporting SQL.  </p> <ul> <li>Open a connection</li> <li>Create a \u201cstatement\u201d object</li> <li>Execute queries using the Statement object to send queries and fetch results</li> <li>Exception mechanism to handle errors</li> </ul> <ol> <li>\u8c03\u7528\u9a71\u52a8\u7a0b\u5e8f\u7ba1\u7406\u5668\u6765\u521b\u5efa\u5bf9\u8c61</li> <li>\u629b\u51fa\u5f02\u5e38\u5e76\u8fdb\u884c\u68c0\u67e5</li> </ol> Example <ul> <li>Update to database <pre><code>Update to database \ntry {\n    stmt.executeUpdate(\n        \"insert into instructor values(\u201977987\u2019, \u2019Kim\u2019, \u2019Physics\u2019, 98000)\");\n        } catch (SQLException sqle)\n        {\n            System.out.println(\"Could not insert tuple. \" + sqle);\n        }\n</code></pre></li> <li>Execute query and fetch and print results <pre><code>ResultSet rset = stmt.executeQuery(\n        \"select dept_name, avg (salary)\n        from instructor\n        group by dept_name\");\n        while (rset.next()) {\n            System.out.println(rset.getString(\"dept_name\") + \" \" + rset.getFloat(2));\n        }\n</code></pre></li> <li>Getting result fields: <pre><code>rset.getString(\u201cdept_name\u201d) and rset.getString(1) equivalent if dept_name is the first argument of select result.\n</code></pre></li> <li>Dealing with Null values <pre><code>int a = rset.getInt(\u201ca\u201d);\n    if (rset.wasNull()) Systems.out.println(\u201cGot null value\u201d);\n</code></pre></li> </ul>"},{"location":"DB/DB5/#open-a-connection","title":"Open a connection(\u8fde\u63a5\u5230\u6570\u636e\u5e93)","text":"<pre><code>public static void JDBCexample(String dbid, String userid, String passwd) \n        { \n     try { \n   Connection conn = DriverManager.getConnection(\"jdbc:oracle:thin:@db.yale.edu:2000:univdb\", userid, passwd); \n          Statement stmt = conn.createStatement(); \n              ... Do Actual Work ...\n          stmt.close();\n          conn.close();\n     }\n     catch (SQLException sqle) {\n          System.out.println(\"SQLException : \" + sqle);\n     }\n        }\n</code></pre> <p>\u901a\u8fc7\u4f7f\u7528DriverManager\u7c7b\u7684<code>getConnection()</code>\u65b9\u6cd5\u6253\u5f00\u4e00\u4e2a\u8fde\u63a5\uff0c\u4e4b\u540e\u624d\u80fd\u6267\u884cSQL\u8bed\u53e5</p> <p>getConnection</p>"},{"location":"DB/DB5/#sql","title":"\u5411\u6570\u636e\u5e93\u7cfb\u7edf\u4f20\u9012SQL\u8bed\u53e5","text":""},{"location":"DB/DB5/#_3","title":"\u5f02\u5e38\u4e0e\u8d44\u6e90\u7ba1\u7406","text":""},{"location":"DB/DB5/#_4","title":"\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c","text":""},{"location":"DB/DB5/#prepared-statement","title":"Prepared Statement(\u9884\u5907\u8bed\u53e5)","text":"Prepared Statement <p><pre><code>PreparedStatement pStmt = conn.prepareStatement(\n        \"insert into instructor values(?,?,?,?)\");\npStmt.setString(1, \"88877\");      \npStmt.setString(2, \"Perry\");\npStmt.setString(3, \"Finance\");   \npStmt.setInt(4, 125000);\npStmt.executeUpdate();    \npStmt.setString(1, \"88878\");\npStmt.executeUpdate();\n</code></pre> \u8fd9\u91cc\u7a7a\u683c\u662f\u5360\u4f4d\u7b26\uff0c\u8868\u793a\u6267\u884c\u65f6\u9700\u8981\u63d0\u4f9b\u56db\u4e2a\u53c2\u6570\u3002 <code>setString, setInt</code> \u5c31\u662f\u628a\u7b2c\u51e0\u4e2a\u5360\u4f4d\u7b26\u8bbe\u7f6e\u4e3a\u53c2\u6570\uff0c\u5e76 <code>executeUpdate</code> \u8fdb\u884c\u63d2\u5165\u3002</p> <p>SQL Injection</p> <p>Always use prepared statements when taking an input from the user and adding it to a query. NEVER create a query by concatenating strings which you get as inputs. SQL \u6ce8\u5165\u653b\u51fb\u3002</p> <p>Suppose query is constructed using <code>select * from instructor where name = \u2019\" + name + \u201c \u2019</code> Suppose the user, instead of entering a name, enters: <code>X\u2019 or \u2019Y\u2019 = \u2019Y</code> then the resulting string of the statement becomes: <code>select * from instructor where name = \u2019\" + \"X\u2019 or \u2019Y\u2019 = \u2019Y\" + \u201c\u2019</code> which is: <code>select * from instructor where name = \u2019X\u2019 or \u2019Y\u2019 = \u2019Y\u2019</code>  User could have even used <code>X\u2019; update instructor set salary = salary + 10000;</code> then <code>select * from instructor where name = \u2019X\u2019; update instructor set salary = salary + 10000;</code> Always use prepared statements, with user inputs as parameters</p> <p>Metadata Features </p> <ul> <li> <p>ResultSet metadata </p> Example <p>after executing query to get a ResultSet rs: <pre><code>ResultSetMetaData rsmd = rs.getMetaData();\nfor(int i = 1; i &lt;= rsmd.getColumnCount(); i++) {\n    System.out.println(rsmd.getColumnName(i));\n            System.out.println(rsmd.getColumnTypeName(i));\n    }\n</code></pre></p> </li> <li> <p>Database metadata</p> Example <pre><code>DatabaseMetaData dbmd = conn.getMetaData();\nResultSet rs = dbmd.getColumns(null, \"univdb\", \"department\", \"%\");\n// Arguments to getColumns: Catalog, Schema-pattern, Table-pattern,\n// and Column-Pattern\n// Returns: One row for each column; row has a number of attributes\n// such as COLUMN_NAME, TYPE_NAME\nwhile( rs.next()) {\n    System.out.println(rs.getString(\"COLUMN_NAME\"),\n                                                    rs.getString(\"TYPE_NAME\");\n</code></pre> </li> </ul> <p>Transaction Control in JDBC </p> <ul> <li>Can turn off automatic commit on a connection <code>conn.setAutoCommit(false);</code></li> <li>Transactions must then be committed or rolled back explicitly <code>conn.commit();</code> or <code>conn.rollback();</code></li> <li><code>conn.setAutoCommit(true)</code> turns on automatic commit.</li> </ul> <p>\u6240\u6709\u7684\u6570\u636e\u5e93\u529f\u80fd\u90fd\u662f\u901a\u8fc7 Java \u5c01\u88c5\u597d\u7684\u7c7b\u6765\u5b9e\u73b0\u7684\u3002</p>"},{"location":"DB/DB5/#sqlj","title":"SQLJ","text":"<p>SQLJ: embedded SQL in Java <pre><code>#sql iterator deptInfoIter ( String dept name, int avgSal);\n    deptInfoIter iter = null;\n    #sql iter = { select dept_name, avg(salary) as avgSal from instructor\n             group by dept name };\n    while (iter.next()) {\n           String deptName = iter.dept_name();\n          int avgSal = iter.avgSal();\n          System.out.println(deptName + \" \" + avgSal);\n    }\n    iter.close();\n</code></pre> \u5d4c\u5165\u90fd\u8981 <code>#sql</code> \u6807\u8bc6\uff0c\u6700\u540e\u4f1a\u88ab\u7f16\u8bd1\u5668\u8f6c\u5316\u4e3a Java \u7684\u7c7b\u3002</p>"},{"location":"DB/DB5/#odbc","title":"ODBC","text":"<p>(\u76f8\u8f83\u4e8eJDBC\u66f4\u52a0\u590d\u6742)</p> <p>Each database system supporting ODBC provides a \"driver\" library that must be linked with the client program.</p> Example <pre><code>int ODBCexample()\n{\n    RETCODE error;\n    HENV    env;     /* environment */ \n    HDBC    conn;  /* database connection */ \n    SQLAllocEnv(&amp;env);\n    SQLAllocConnect(env, &amp;conn);\n    SQLConnect(conn, \u201cdb.yale.edu\", SQL_NTS, \"avi\", SQL_NTS, \"avipasswd\", SQL_NTS); \n    { ... Do actual work ... }\n\n    SQLDisconnect(conn); \n    SQLFreeConnect(conn); \n    SQLFreeEnv(env); \n}\n</code></pre> <p>\u540c\u4e00\u4e2a\u6570\u636e\u5e93\u53ef\u80fd\u670d\u52a1\u4e8e\u591a\u4e2a\u7528\u6237\uff0c\u800c\u4e14\u4f7f\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\u53ef\u80fd\u4e0d\u540c\uff0c\u5982\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\u6807\u5fd7\u53ef\u80fd\u4e5f\u4e0d\u540c\uff0c\u56e0\u6b64\u9700\u8981\u7528 <code>SQL_NTS</code> \u6807\u8bc6\u3002(\u8868\u793a\u7a7a\u503c\u7ed3\u675f)</p> <ul> <li>Program sends SQL commands to database by using <code>SQLExecDirect</code></li> <li>Result tuples are fetched using <code>SQLFetch()</code></li> <li><code>SQLBindCol()</code> binds C language variables to attributes of the query result <ul> <li>When a tuple is fetched, its attribute values are automatically stored in corresponding C variables.  </li> <li>Arguments to SQLBindCol()<ul> <li>ODBC stmt variable, attribute position in query result</li> <li>The type conversion from SQL to C.  </li> <li>The address of the variable. </li> <li>For variable-length types like character arrays,   <ul> <li>The maximum length of the variable  </li> <li>Location to store actual length when a tuple is fetched.</li> <li>Note: A negative value returned for the length field indicates null value</li> </ul> </li> </ul> </li> </ul> </li> </ul> Example <p><pre><code>Main body of program\nchar deptname[80];\nfloat salary;\nint lenOut1, lenOut2;\nHSTMT stmt;\nchar * sqlquery = \"select dept_name, sum (salary) from instructor group by dept_name\";\nSQLAllocStmt(conn, &amp;stmt);\nerror = SQLExecDirect(stmt, sqlquery, SQL_NTS);\nif (error == SQL SUCCESS) {\n    SQLBindCol(stmt, 1, SQL_C_CHAR, deptname , 80, &amp;lenOut1);\n    SQLBindCol(stmt, 2, SQL_C_FLOAT, &amp;salary, 0 , &amp;lenOut2);\n    while (SQLFetch(stmt) == SQL_SUCCESS) {\n        printf (\" %s %g\\n\", deptname, salary);\n    }\n}\nSQLFreeStmt(stmt, SQL_DROP);\n</code></pre> \u5b9a\u4e49\u6570\u7ec4\u9700\u8981\u591a\u4e00\u4e2a\uff0c\u5426\u5219\u4f1a\u6709\u622a\u65ad\u3002\u5982 <code>char deptname[11];</code> \u624d\u80fd\u5b9a\u4e49\u5341\u4e2a\u5143\u7ec4\u3002 \u5982\u679c\u7ed3\u679c\u4e3a\u7a7a\uff0c\u5219 <code>lenOut</code> \u4e3a -1. </p> <p>ODBC Prepared Statements</p> <ul> <li>SQL statement prepared: compiled at the database<ul> <li>To prepare a statement <code>SQLPrepare(stmt, &lt;SQL String&gt;);</code> </li> <li>To bind parameters <code>SQLBindParameter(stmt, &lt;parameter#&gt;,  ... type information and value omitted for simplicity..)</code></li> <li>To execute the statement <code>retcode = SQLExecute(stmt);</code></li> </ul> </li> <li>Can have placeholders: e.g. <code>insert into account values(?,?,?)</code></li> <li>Repeatedly executed with actual values for the placeholders</li> </ul> <p>More ODBC Features </p> <ul> <li>Metadata features  <ul> <li>finding all the relations in the database and</li> <li>finding the names and types of columns of a query result or a relation in the database.</li> </ul> </li> <li>By default, each SQL statement is treated as a separate transaction that is committed automatically.<ul> <li>Can turn off automatic commit on a connection <code>SQLSetConnectOption(conn, SQL_AUTOCOMMIT, 0)}</code></li> <li>Transactions must then be committed or rolled back explicitly by <code>SQLTransact(conn, SQL_COMMIT)</code> or <code>SQLTransact(conn, SQL_ROLLBACK)</code></li> </ul> </li> </ul>"},{"location":"DB/DB5/#embedded-sql","title":"Embedded SQL","text":"<p>A language to which SQL queries are embedded is referred to as a host language, and the SQL structures permitted in the host language comprise embedded SQL. \u5982\u628a SQL \u5d4c\u5165\u5230 C \u8bed\u8a00\uff0c\u90a3\u4e48 C \u8bed\u8a00\u662f host.  </p> <p>\u5728\u7f16\u8bd1\u524d\uff0c\u6709\u4e00\u4e2a\u9884\u7f16\u8bd1\u5668\uff0c\u5c06 SQL \u8bed\u53e5\u7ffb\u8bd1\u3002</p> <p>EXEC SQL statement is used in the host language to identify embedded SQL request to the preprocessor (in Java, <code># SQL { ... };</code>)</p> <p>Issues with Embedded SQL</p> <ul> <li>Mark the start point and end point of Embedded SQL <code>EXEC  SQL  &lt;statement&gt;\uff1b  //C</code></li> <li>Communication between database and programming language e.g. SQLCA\u3001SQLDA</li> <li>Address the mismatching issue between SQL and host lanugage. Handle result (set) with cursor Mapping of basic data types e.g. SQL:  Date \\(\\rightarrow\\) C: char(12)</li> </ul> Example <p><pre><code>insert\u3001delete\u3001update\u3001select(single record)\nmain( )\n{  EXEC SQL INCLUDE SQLCA; //\u58f0\u660e\u6bb5\u5f00\u59cb\n    EXEC SQL BEGIN DECLARE SECTION;\n    char account_no [11];    //host variables(\u5bbf\u4e3b\u53d8\u91cf)\u58f0\u660e\n    char branch_name [16];\n    int  balance;  \nEXEC SQL END DECLARE SECTION;//\u58f0\u660e\u6bb5\u7ed3\u675f\nEXEC SQL CONNECT  TO  bank_db  USER Adam Using Eve; \nscanf (\u201c%s  %s  %d\u201d, account_no, branch_name, balance);\nEXEC SQL insert into account \n                values (:account_no, :branch_name, :balance);\nIf (SQLCA.sqlcode ! = 0)    printf ( \u201cError!\\n\u201d);\nelse       printf (\u201cSuccess!\\n\u201d);\n}\n</code></pre> \u6700\u5f00\u59cb\u58f0\u660e\u6bb5\u4e2d\u7684 host \u8bed\u53e5\uff0c\u53ef\u4ee5\u7528\u5728 SQL \u8bed\u53e5\u91cc\u3002</p> <p>\u4e24\u70b9\u4e0d\u5e73\u8861\uff1a\u6ca1\u6709\u96c6\u5408\uff1b\u6ca1\u6709 NULL\uff1b\u6ca1\u6709\u65e5\u671f\u7c7b\u578b</p> <p>\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u4f46 ODBC \u53ea\u6709\u5728\u8fd0\u884c\u65f6\u624d\u6709\u3002</p> <ul> <li>Static\uff1a Embedded SQL statements( include relation names and attribute names) are hard coded in program.</li> <li>Dynamic\uff1aEmbedded SQL statements are built at run time</li> </ul>"},{"location":"DB/DB5/#procedural-constructs-in-sql","title":"Procedural Constructs in SQL","text":"<p>SQL provides a module language  Permits definition of procedures in SQL, with if-then-else statements, for and while loops, etc.</p> <p>Stored Procedures  </p> <ul> <li>Can store procedures in the database </li> <li>then execute them using the call statement</li> <li>permit external applications to operate on the database without knowing about internal details</li> </ul>"},{"location":"DB/DB5/#sql-functions","title":"SQL Functions","text":"Example <p>SQL \u51fd\u6570\u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a table. </p> Example <p> </p>"},{"location":"DB/DB5/#sql-procedures","title":"SQL Procedures","text":"<p>\u6709\u8f93\u5165\u53c2\u6570(<code>in</code>)\u548c\u8f93\u51fa\u53c2\u6570(<code>out</code>)</p> Example <p> </p>"},{"location":"DB/DB5/#procedural-constructs","title":"Procedural Constructs","text":"<p>Compound statement: <code>begin ... end</code>, </p> <ul> <li>May contain multiple SQL statements between <code>begin</code> and <code>end</code>.</li> <li> <p>Local variables can be declared within a compound statements</p> </li> <li> <p><code>While</code> and <code>repeat</code> statements e.g. <pre><code>declare n integer default 0;\nwhile n &lt; 10 do\n    set n = n + 1\nend while                           \n        repeat\n    set n = n  \u2013 1\n        until n = 0\nend repeat\n</code></pre></p> </li> <li><code>For</code> loop Permits iteration over all results of a query     e.g. <pre><code>declare n  integer default 0;\nfor r as\n    select budget from department \n    where dept_name = \u2018Music\u2019 \n    do \n        set n = n - r.budget \nend for\n</code></pre>     r \u8868\u793a\u8fd4\u56de\u7684\u6bcf\u4e00\u884c</li> </ul> Example procedure <p> </p>"},{"location":"DB/DB5/#external-language-functionsprocedures","title":"External Language Functions/Procedures","text":"<p>SQL \u53ef\u4ee5\u8bbf\u95ee\u7531 C \u8bed\u8a00\u5b9a\u4e49\u7684\u51fd\u6570\uff08\u8fc7\u7a0b\uff09</p> Example <pre><code>create procedure dept_count_proc(in dept_name varchar(20),  count integer)\nlanguage C \nexternal name \u2019 /usr/avi/bin/dept_count_proc\u2019 \ncreate function dept_count(dept_name varchar(20))\nreturns integer\nlanguage C\nexternal name \u2018/usr/avi/bin/dept_count\u2019\n</code></pre> <p>\u53ef\u80fd\u6bd4\u8f83\u5371\u9669\uff0c\u653e\u5728\u865a\u62df\u673a\uff08Java\uff09\u6216\u8005\u72ec\u7acb\u7684\u7ebf\u7a0b</p>"},{"location":"DB/DB5/#triggers","title":"Triggers","text":"<p>A <code>trigger</code> is a statement that is executed automatically by the system as a side effect of a modification to the database.  </p> <p>Trigger -  ECA rule</p> <ul> <li>E: Event \uff08 insert, delete \uff0cupdate\uff09</li> <li>C: Condition  </li> <li>A: Action</li> </ul> <p>To design a trigger mechanism, we must: </p> <ul> <li>Specify the conditions under which the trigger is to be executed.</li> <li>Specify the actions to be taken when the trigger executes.</li> </ul> Example <p> </p> time_slot_id Example <p> </p> <p>\u8fd9\u91cc time_slot_id \u4e0d\u662f\u4e3b\u952e\uff0c\u56e0\u6b64\u5220\u9664\u4e0d\u4f1a\u5f15\u8d77\u5176\u4ed6\u5f71\u54cd\u3002\u4f46\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u89e6\u53d1\u5668\uff0c\u7528\u6765\u68c0\u67e5\u5f53\u524d\u8bfe\u7a0b\u7684 time_slot_id \u662f\u5426\u5728\u8868\u5185\u3002 \u7b2c\u4e8c\u4e2a\u89e6\u53d1\u5668\u8868\u793a\uff0ctime_slot_id \u5df2\u7ecf\u88ab\u5220\u5b8c\u4e86\uff0c\u4f46\u4f9d\u7136\u6709\u8bfe\u7a0b\u5728\u5f15\u7528\uff0c\u5c31\u8981 rollback.  </p> <ul> <li>Triggering event can be insert, delete or update</li> <li>Triggers on update can be restricted to specific attributes e.g. after(before) update of  takes on grade</li> <li>Values of attributes before and after an update can be referenced<ul> <li>referencing old row as:  for deletes and updates</li> <li>referencing new row as: for inserts and updates</li> </ul> </li> </ul> Trigger to Maintain credits_earned value <p> </p> <p>\u5982\u679c\u672c\u6765\u6302\u79d1\uff0c\u6216\u8005\u6ca1\u6709\u6210\u7ee9\uff0c\u66f4\u65b0\u540e\u4e0d\u518d\u6302\u79d1\u800c\u4e14\u6709\u6210\u7ee9\uff0c\u5c31\u628a\u5b66\u5206\u52a0\u4e0a\u53bb\u3002</p> <p>\u8981\u614e\u7528\u89e6\u53d1\u5668\uff0c\u7528\u5728\u5200\u5203\u4e0a\uff0c\u53ef\u80fd\u4f1a\u5f15\u53d1\u8fde\u9501\u53cd\u5e94\u3002</p> <p>Instead of executing a separate action for each affected row, a single action can be executed for all rows affected by a transaction</p> <ul> <li>Use <code>for each statement</code>  instead of <code>for each row</code></li> <li>Use <code>referencing old table</code> or <code>referencing new table</code> to refer to temporary tables (called transition tables) containing the affected rows</li> <li>Can be more efficient when dealing with SQL statements that update a large number of rows</li> </ul> Example <p> </p>"},{"location":"DB/DB6/","title":"Chapter 6 Entity(\u5b9e\u4f53)-Relationship(\u8054\u7cfb) Model","text":"<p>Abstract</p> <ul> <li>Database Design Process</li> <li>Modeling</li> <li>Constraints</li> <li>Weak Entity Sets </li> <li>Reduction to Relation Schemas</li> <li>Design Issues </li> <li>Extended E-R Features</li> <li>UML(\u7b2c\u516d\u6b21\u8bfe\u672a\u8bb2)</li> </ul> <p>Idea of E-R Model</p> <ul> <li> <p>A database can be modeled as:</p> <ul> <li>a collection of entities</li> <li>relationship among entities.</li> </ul> </li> </ul>"},{"location":"DB/DB6/#entity-and-entities","title":"Entity(\u5b9e\u4f53) And Entities(\u5b9e\u4f53\u96c6)","text":"<p>An entity is an object that exists and is distinguishable(\u53ef\u533a\u5206) from other objects. e.g. specific person, company, event, plant</p> <ul> <li> <p>Entities have attributes(\u5b9e\u4f53\u90fd\u6709\u5c5e\u6027) e.g. people have names and addresses</p> </li> <li> <p>An entity set is a set of entities of the same type that share the same properties.(\u4e00\u4e2a\u5b9e\u4f53\u96c6\u662f\u540c\u4e00\u7c7b\u578b\u7684\u5b9e\u4f53\u7684\u96c6\u5408\uff0c\u5b83\u4eec\u5171\u4eab\u76f8\u540c\u7684\u5c5e\u6027) e.g. set of all persons, companies, trees, holidays</p> </li> </ul> <p>Entity sets can be represented graphically as follows:</p> <ul> <li>Rectangles represent entity sets.(\u77e9\u9635\u8868\u793a\u5b9e\u4f53\u96c6)</li> <li>Attributes listed inside entity rectangle</li> <li>Underline indicates primary key attributes</li> </ul> Example <p> </p>"},{"location":"DB/DB6/#relation-and-relationship-sets","title":"Relation(\u8054\u7cfb) And Relationship Sets(\u8054\u7cfb\u96c6)","text":"<ul> <li>A relationship is an association among several entities.A relationship set is a mathematical relation among n \\(\\geq\\) 2 entities, each taken from entity  \\(\\{(e_1, e_2, ... e_n) | e_1 \\in E_1, e_2 \\in  E_2, ..., e_n \\in  E_n\\}\\) where \\((e_1, e_2, ..., e_n)\\) is a relationship. \uff08\u5173\u7cfb\u662f\u51e0\u4e2a\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u8054\u3002\u5173\u7cfb\u96c6\u662fn\u4e2a\u5b9e\u4f53\u4e4b\u95f4\u7684\u6570\u5b66\u5173\u7cfb\uff09</li> <li>The association between entity sets is referred to as participation; i.e., the entity sets \\(E_1, E_2, \u2026, E_n\\) participate(\u53c2\u4e0e) in relationship set \\(R\\).</li> </ul> <p>Example</p> <p> </p> <ul> <li>\u5173\u7cfb\u96c6\u5728E-R\u56fe\u4e2d\u7528\u83f1\u5f62\u8868\u793a\uff0c\u901a\u8fc7\u7ebf\u6761\u8fde\u63a5\u5230\u591a\u4e2a\u4e0d\u540c\u7684\u5b9e\u4f53\u96c6\u3002\u56fe\u4e2d\u7684E-R\u56fe\u663e\u793a\u4e86\u4e24\u4e2a\u5b9e\u4f53\u96c6\uff0c\u5373\u6559\u5e08\uff08instructor\uff09\u548c\u5b66\u751f\uff08student\uff09\uff0c\u901a\u8fc7\u4e00\u4e2a\u4e8c\u5143\u5173\u7cfb\u96c6advisor\u8fdb\u884c\u5173\u8054\u3002</li> </ul> <ul> <li>\u5728E-R\u6a21\u5f0f\u4e2d\uff0c\u5173\u7cfb\u5b9e\u4f8b\u4ee3\u8868\u4e86\u6b63\u5728\u88ab\u5efa\u6a21\u7684\u771f\u5b9e\u4f01\u4e1a\u4e2d\u547d\u540d\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u8054\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u4e2a\u4f53\u6559\u5e08\u5b9e\u4f53Katz\uff0c\u5176\u6559\u5e08ID\u4e3a45565\uff0c\u4ee5\u53ca\u5b66\u751f\u5b9e\u4f53Shankar\uff0c\u5176\u5b66\u751fID\u4e3a12345\uff0c\u53c2\u4e0e\u4e86\u4e00\u4e2a\u6307\u5bfc\u8005\uff08advisor\uff09\u7684\u5173\u7cfb\u5b9e\u4f8b\u3002\u8fd9\u4e2a\u5173\u7cfb\u5b9e\u4f8b\u8868\u793a\u5728\u5927\u5b66\u4e2d\uff0c\u6559\u5e08Katz\u6b63\u5728\u6307\u5bfc\u5b66\u751fShankar\u3002</li> <li>\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u8003\u8651\u4e24\u4e2a\u5b9e\u4f53\u96c6\uff0c\u5b66\u751f\uff08student\uff09\u548c\u8bfe\u7a0b\u8282\uff08section\uff09\uff0c\u5176\u4e2d\u8bfe\u7a0b\u8282\u8868\u793a\u4e00\u4e2a\u8bfe\u7a0b\u7684\u5f00\u8bbe\u3002\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5173\u7cfb\u96c6takes\u6765\u8868\u793a\u5b66\u751f\u548c\u5176\u6ce8\u518c\u7684\u8bfe\u7a0b\u8282\u4e4b\u95f4\u7684\u5173\u8054\u3002\u867d\u7136\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u6bcf\u4e2a\u5173\u7cfb\u96c6\u90fd\u662f\u4e24\u4e2a\u5b9e\u4f53\u96c6\u4e4b\u95f4\u7684\u5173\u8054\uff0c\u4f46\u4e00\u822c\u6765\u8bf4\uff0c\u4e00\u4e2a\u5173\u7cfb\u96c6\u53ef\u80fd\u8868\u793a\u8d85\u8fc7\u4e24\u4e2a\u5b9e\u4f53\u96c6\u4e4b\u95f4\u7684\u5173\u8054\u3002</li> </ul>"},{"location":"DB/DB6/#roles","title":"Roles","text":"<ul> <li>Entity sets of a relationship need not be distinct.Each occurrence of an entity set plays a \u201crole\u201d in the relationship.The labels <code>course_id</code> and <code>prereq_id</code> are called roles.</li> <li>\u5b9e\u4f53\u5728\u5173\u7cfb\u4e2d\u626e\u6f14\u7684\u529f\u80fd\u79f0\u4e3a\u8be5\u5b9e\u4f53\u7684\u89d2\u8272\u3002\u7531\u4e8e\u53c2\u4e0e\u5173\u7cfb\u96c6\u7684\u5b9e\u4f53\u96c6\u901a\u5e38\u662f\u4e92\u5f02\u7684\uff0c\u56e0\u6b64\u89d2\u8272\u662f\u9690\u542b\u7684\u800c\u4e14\u901a\u5e38\u4e0d\u4f1a\u88ab\u6307\u5b9a\u3002\u4f46\u662f\uff0c\u5728\u5173\u7cfb\u7684\u542b\u4e49\u9700\u8981\u6f84\u6e05\u65f6\uff0c\u5b83\u4eec\u662f\u6709\u7528\u7684\u3002</li> <li>\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u5728\u5173\u7cfb\u96c6\u7684\u5b9e\u4f53\u96c6\u5e76\u975e\u4e92\u5f02\u7684\u60c5\u51b5\u4e0b\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u540c\u4e00\u4e2a\u5b9e\u4f53\u96c6\u5728\u4e0d\u540c\u7684\u89d2\u8272\u4e2d\u591a\u6b21\u53c2\u4e0e\u4e00\u4e2a\u5173\u7cfb\u96c6\u3002\u5728\u8fd9\u79cd\u7c7b\u578b\u7684\u5173\u7cfb\u96c6\u4e2d\uff0c\u6709\u65f6\u88ab\u79f0\u4e3a\u9012\u5f52\u5173\u7cfb\u96c6\uff0c\u9700\u8981\u663e\u5f0f\u7684\u89d2\u8272\u540d\u79f0\u6765\u6307\u5b9a\u5b9e\u4f53\u5982\u4f55\u53c2\u4e0e\u5173\u7cfb\u5b9e\u4f8b\u3002</li> </ul> <p>Role</p> <p>\u4f8b\u5982\uff0c\u8003\u8651\u8bb0\u5f55\u5927\u5b66\u6240\u6709\u8bfe\u7a0b\u4fe1\u606f\u7684\u5b9e\u4f53\u96c6course\u3002\u4e3a\u4e86\u63cf\u8ff0\u4e00\u4e2a\u8bfe\u7a0b\\(\uff08C_2\uff09\\)\u662f\u53e6\u4e00\u4e2a\u8bfe\u7a0b\\(\uff08C_1\uff09\\)\u7684\u5148\u51b3\u6761\u4ef6\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u6709\u5173\u7cfb\u96c6prereq\uff0c\u7531\u8bfe\u7a0b\u5b9e\u4f53\u7684\u6709\u5e8f\u5bf9\u5efa\u6a21\u3002\u4e00\u5bf9\u4e2d\u7684\u7b2c\u4e00\u4e2a\u8bfe\u7a0b\u626e\u6f14\u8bfe\u7a0b\\(C_1\\)\u7684\u89d2\u8272\uff0c\u800c\u7b2c\u4e8c\u4e2a\u626e\u6f14\u5148\u51b3\u6761\u4ef6\u8bfe\u7a0b\\(C_2\\)\u7684\u89d2\u8272\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6240\u6709\\(prereq\\)\u7684\u5173\u7cfb\u90fd\u7531\\(\uff08C_1\uff0cC_2\uff09\\)\u5bf9\u6765\u7279\u5f81\u5316\uff1b\u6392\u9664\u4e86\\(\uff08C_2\uff0cC_1\uff09\\)\u5bf9\u3002\u5728\\(E-R\\)\u56fe\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u5728\u83f1\u5f62\u548c\u77e9\u5f62\u4e4b\u95f4\u7684\u8fde\u7ebf\u4e0a\u6807\u6ce8\u89d2\u8272\u6307\u793a\u7b26\u6765\u8868\u793a\u89d2\u8272\u3002\u56fe\u4e2d\u5c55\u793a\u4e86\u5728\u8bfe\u7a0b\u5b9e\u4f53\u96c6\u548c\u5148\u51b3\u5173\u7cfb\u96c6\u4e4b\u95f4\u7684\u89d2\u8272\u6307\u793a\u7b26course_id\u548cprereq_id\u3002</p>"},{"location":"DB/DB6/#degree-of-a-relationship-set","title":"Degree(\u5ea6) of a Relationship Set","text":"<p>Definition : \u53c2\u4e0e\u5173\u7cfb\u96c6\u7684\u5b9e\u4f53\u96c6\u7684\u6570\u76ee</p> <p>binary relationship\uff08\u4e8c\u5143\u8054\u7cfb\uff09</p> <ul> <li>involve two entity sets (or degree two). </li> <li>most relationship sets in a database system are binary.</li> </ul> <p>\u5c3d\u91cf\u4e0d\u7528\u591a\u5143\u8054\u7cfb\uff0c\u56e0\u4e3a\u4e8c\u5143\u8054\u7cfb\u6bd4\u8f83\u6e05\u6670\u3002\u800c\u4e14\u4efb\u4f55\u7684\u591a\u5143\u8054\u7cfb\u90fd\u53ef\u4ee5\u901a\u8fc7\u5f15\u5165\u4e2d\u4ecb\u5b9e\u4f53\u8f6c\u5316\u4e3a\u4e8c\u5143\u8054\u7cfb\u3002</p> <p>Example</p> <p> </p> <p>\u8f6c\u5316\u4e3a\u4e8c\u5143\u8054\u7cfb\uff1a\u628a\u591a\u5143\u8054\u7cfb\u5b9e\u4f53\u5316\u3002\u5982 <code>proj_guide</code> \u91cc\u6709\u8001\u5e08\u3001\u5b66\u751f\u3001\u5de5\u7a0b\u7684 id. \u968f\u540e\u8fd9\u4e2a\u5b9e\u4f53\u53c8\u548c\u53e6\u5916\u4e09\u4e2a\u5b9e\u4f53\u5404\u6709\u4e00\u4e2a\u4e8c\u5143\u8054\u7cfb\u3002</p>"},{"location":"DB/DB6/#relationship-sets-with-attributes","title":"Relationship Sets with Attributes","text":"<ul> <li>\u4e00\u4e2a\u5173\u7cfb\u8fd8\u53ef\u4ee5\u6709\u79f0\u4e3a\u63cf\u8ff0\u6027\u5c5e\u6027(descriptive attribute)\u7684\u5c5e\u6027\u3002\u4f5c\u4e3a\u5173\u7cfb\u7684\u63cf\u8ff0\u6027\u5c5e\u6027\u7684\u793a\u4f8b\uff0c\u8003\u8651\u5173\u7cfb\u96c6takes\uff0c\u5b83\u5173\u8054\u4e86\u5b9e\u4f53\u96c6student\u548csection\u3002\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u5728\u5173\u7cfb\u4e2d\u5b58\u50a8\u4e00\u4e2a\u63cf\u8ff0\u6027\u5c5e\u6027grade\uff0c\u4ee5\u8bb0\u5f55\u5b66\u751f\u5728\u8bfe\u7a0b\u4e2d\u83b7\u5f97\u7684\u6210\u7ee9\u3002</li> <li>\u5173\u7cfb\u96c6\u7684\u5c5e\u6027\u5728E-R\u56fe\u4e2d\u7531\u4e00\u4e2a\u672a\u5206\u5272\u7684\u77e9\u5f62\u8868\u793a\u3002\u6211\u4eec\u7528\u865a\u7ebf\u5c06\u8be5\u77e9\u5f62\u4e0e\u8868\u793a\u8be5\u5173\u7cfb\u96c6\u7684\u83f1\u5f62\u8fde\u63a5\u8d77\u6765\u3002</li> <li>\u4f8b\u5982\uff0c\u56fe\u4e2d\u663e\u793a\u4e86\u5b9e\u4f53\u96c6section\u548cstudent\u4e4b\u95f4\u7684\u5173\u7cfb\u96c6takes\u3002\u6211\u4eec\u5728\u5173\u7cfb\u96c6takes\u4e0a\u9644\u52a0\u4e86\u63cf\u8ff0\u6027\u5c5e\u6027grade\u3002\u4e00\u4e2a\u5173\u7cfb\u96c6\u53ef\u80fd\u6709\u591a\u4e2a\u63cf\u8ff0\u6027\u5c5e\u6027\uff1b\u4f8b\u5982\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4e3atakes\u5173\u7cfb\u96c6\u5b58\u50a8\u4e00\u4e2a\u63cf\u8ff0\u6027\u5c5e\u6027credit\uff0c\u4ee5\u8bb0\u5f55\u5b66\u751f\u662f\u5426\u4e3a\u4e86\u5b66\u5206\u9009\u4fee\u4e86\u8be5\u8bfe\u7a0b\uff0c\u6216\u8005\u662f\u4ee5\u65c1\u542c\u7684\u65b9\u5f0f\u53c2\u52a0\u4e86\u8bfe\u7a0b\u3002</li> </ul> <p>An attribute can also be property of a relationship set</p> <p> </p> <ul> <li>The advisor relationship set between entity sets instructor and student may have the attribute date which tracks when the student started being associated with the advisor.</li> </ul>"},{"location":"DB/DB6/#complex-attributes","title":"Complex Attributes","text":"<ul> <li>An entity is represented by a set of attributes, that is descriptive properties possessed by all members of an entity set.</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u5c5e\u6027\uff0c\u90fd\u6709\u4e00\u7ec4\u5141\u8bb8\u7684\u503c\uff0c\u79f0\u4e3a\u8be5\u5c5e\u6027\u7684\u57df(domain)\uff0c\u6216\u503c\u96c6(value set)\u3002\u5c5e\u6027course_id\u7684\u57df\u53ef\u80fd\u662f\u4e00\u5b9a\u957f\u5ea6\u7684\u6240\u6709\u6587\u672c\u5b57\u7b26\u4e32\u7684\u96c6\u5408\u3002\u540c\u6837\uff0c\u5c5e\u6027semester\u7684\u57df\u53ef\u80fd\u662f\u96c6\u5408{\u79cb\u5b63, \u51ac\u5b63, \u6625\u5b63, \u590f\u5b63}\u4e2d\u7684\u5b57\u7b26\u4e32\u3002</li> </ul> <p>Attribute types</p> <ul> <li>Simple\uff08\u7b80\u5355\uff09 and composite\uff08\u590d\u5408\uff09 attributes.  </li> <li>Single-valued\uff08\u5355\u503c\uff09 and multivalued\uff08\u591a\u503c\uff09 attributes  </li> <li>Derived\uff08\u6d3e\u751f\uff09 attributes</li> </ul> <p> </p> <ul> <li>\u56fe\u4e2d\u663e\u793a\u4e86\u5982\u4f55\u5728E-R\u7b26\u53f7\u4e2d\u8868\u793a\u590d\u5408\u5c5e\u6027\u3002\u5728\u8fd9\u91cc\uff0c\u4e00\u4e2a\u5177\u6709\u7ec4\u6210\u5c5e\u6027\u540d\u4e3afirst name\u3001middle initial\u548clast name\u7684\u590d\u5408\u5c5e\u6027name\u4ee3\u66ff\u4e86\u6559\u5e08\u7684\u7b80\u5355\u5c5e\u6027name\u3002\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u5411\u6559\u5e08\u5b9e\u4f53\u96c6\u6dfb\u52a0\u4e00\u4e2a\u5730\u5740\u3002\u5730\u5740\u53ef\u4ee5\u88ab\u5b9a\u4e49\u4e3a\u5177\u6709\u5c5e\u6027street\u3001city\u3001state\u548cpostal code\u7684\u590d\u5408\u5c5e\u6027address\u3002\u5c5e\u6027street\u672c\u8eab\u662f\u4e00\u4e2a\u590d\u5408\u5c5e\u6027\uff0c\u5176\u7ec4\u6210\u5c5e\u6027\u662fstreet number\u3001street name\u548capartment number\u3002\u8be5\u56fe\u8fd8\u8bf4\u660e\u4e86\u4e00\u4e2a\u591a\u503c\u5c5e\u6027phone number\uff0c\u7528\u201c{phone number}\u201d\u8868\u793a\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6d3e\u751f\u5c5e\u6027age\uff0c\u7528\u201cage ( )\u201d\u8868\u793a\u3002</li> </ul>"},{"location":"DB/DB6/#_1","title":"\u7b80\u5355\u548c\u590d\u5408\u5c5e\u6027","text":"<ul> <li>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u5c5e\u6027\u90fd\u662f\u7b80\u5355\u7684\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u6ca1\u6709\u88ab\u5206\u6210\u5b50\u90e8\u5206\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u590d\u5408\u5c5e\u6027\u53ef\u4ee5\u88ab\u5206\u6210\u5b50\u90e8\u5206\uff08\u5373\u5176\u4ed6\u5c5e\u6027\uff09\u3002</li> <li>\u4f8b\u5982\uff0c\u4e00\u4e2a\u5c5e\u6027name\u53ef\u4ee5\u88ab\u6784\u9020\u4e3a\u4e00\u4e2a\u7531\u540d\u5b57\u3001\u4e2d\u95f4\u540d\u548c\u59d3\u7ec4\u6210\u7684\u590d\u5408\u5c5e\u6027\u3002\u5728\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u4f7f\u7528\u590d\u5408\u5c5e\u6027\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\uff0c\u5982\u679c\u7528\u6237\u6709\u65f6\u5e0c\u671b\u5f15\u7528\u6574\u4e2a\u5c5e\u6027\uff0c\u800c\u6709\u65f6\u53ea\u5e0c\u671b\u5f15\u7528\u5c5e\u6027\u7684\u7ec4\u6210\u90e8\u5206\u3002\u5047\u8bbe\u6211\u4eec\u8981\u4e3a\u5b66\u751f\u5b9e\u4f53\u96c6\u6dfb\u52a0\u4e00\u4e2a\u5730\u5740\u3002\u5730\u5740\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u5177\u6709\u5c5e\u6027street\u3001city\u3001state\u548cpostal code\u7684\u590d\u5408\u5c5e\u6027address\u3002</li> <li>\u590d\u5408\u5c5e\u6027\u5e2e\u52a9\u6211\u4eec\u5c06\u76f8\u5173\u5c5e\u6027\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u4f7f\u5efa\u6a21\u66f4\u6e05\u6670\u3002\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u590d\u5408\u5c5e\u6027\u53ef\u80fd\u5448\u73b0\u4e3a\u4e00\u4e2a\u5c42\u6b21\u7ed3\u6784\u3002\u5728\u590d\u5408\u5c5e\u6027address\u4e2d\uff0c\u5b83\u7684\u7ec4\u6210\u5c5e\u6027street\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5206\u6210street number\u3001street name\u548capartment number\u3002\u56fe\u4e2d\u63cf\u8ff0\u4e86\u8fd9\u4e9b\u590d\u5408\u5c5e\u6027\u7684\u4f8b\u5b50\uff0c\u7528\u4e8e\u6559\u5e08\u5b9e\u4f53\u96c6</li> </ul>"},{"location":"DB/DB6/#_2","title":"\u5355\u503c\u548c\u591a\u503c\u5c5e\u6027","text":"<ul> <li>\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u6240\u6709\u5c5e\u6027\u5bf9\u4e8e\u7279\u5b9a\u5b9e\u4f53\u90fd\u53ea\u6709\u4e00\u4e2a\u503c\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u7279\u5b9a\u5b66\u751f\u5b9e\u4f53\uff0c\u5b66\u751fID\u5c5e\u6027\u4ec5\u6307\u4ee3\u4e00\u4e2a\u5b66\u751fID\u3002\u8fd9\u6837\u7684\u5c5e\u6027\u88ab\u79f0\u4e3a\u5355\u503c\u5c5e\u6027\u3002\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u5c5e\u6027\u5bf9\u4e8e\u7279\u5b9a\u5b9e\u4f53\u6709\u4e00\u7ec4\u503c\u3002</li> <li>\u5047\u8bbe\u6211\u4eec\u5411\u6559\u5e08\u5b9e\u4f53\u96c6\u6dfb\u52a0\u4e00\u4e2a\u7535\u8bdd\u53f7\u7801\u5c5e\u6027\u3002\u4e00\u4e2a\u6559\u5e08\u53ef\u80fd\u6709\u96f6\u4e2a\u3001\u4e00\u4e2a\u6216\u591a\u4e2a\u7535\u8bdd\u53f7\u7801\uff0c\u800c\u4e0d\u540c\u7684\u6559\u5e08\u53ef\u80fd\u62e5\u6709\u4e0d\u540c\u6570\u91cf\u7684\u7535\u8bdd\u53f7\u7801\u3002\u8fd9\u79cd\u7c7b\u578b\u7684\u5c5e\u6027\u88ab\u79f0\u4e3a\u591a\u503c\u5c5e\u6027\u3002\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5411\u6559\u5e08\u5b9e\u4f53\u96c6\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3adependent\u7684\u5c5e\u6027\uff0c\u5217\u51fa\u6240\u6709\u7684\u53d7\u629a\u517b\u4eba\u3002\u8fd9\u4e2a\u5c5e\u6027\u5c06\u662f\u591a\u503c\u7684\uff0c\u56e0\u4e3a\u4efb\u4f55\u7279\u5b9a\u7684\u6559\u5e08\u53ef\u80fd\u6709\u96f6\u4e2a\u3001\u4e00\u4e2a\u6216\u591a\u4e2a\u53d7\u629a\u517b\u4eba</li> </ul>"},{"location":"DB/DB6/#_3","title":"\u6d3e\u751f\u5c5e\u6027","text":"<ul> <li>\u8fd9\u79cd\u7c7b\u578b\u7684\u5c5e\u6027\u7684\u503c\u53ef\u4ee5\u4ece\u5176\u4ed6\u76f8\u5173\u5c5e\u6027\u6216\u5b9e\u4f53\u7684\u503c\u4e2d\u6d3e\u751f\u51fa\u6765\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u6559\u5e08\u5b9e\u4f53\u96c6\u6709\u4e00\u4e2a\u5c5e\u6027students advised\uff0c\u8868\u793a\u4e00\u4e2a\u6559\u5e08\u6307\u5bfc\u4e86\u591a\u5c11\u4e2a\u5b66\u751f\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u4e0e\u8be5\u6559\u5e08\u76f8\u5173\u8054\u7684\u5b66\u751f\u5b9e\u4f53\u7684\u6570\u91cf\u6765\u6d3e\u751f\u51fa\u8fd9\u4e2a\u5c5e\u6027\u7684\u503c\u3002</li> <li>\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u6559\u5e08\u5b9e\u4f53\u96c6\u6709\u4e00\u4e2a\u8868\u793a\u6559\u5e08\u5e74\u9f84\u7684\u5c5e\u6027age\u3002\u5982\u679c\u6559\u5e08\u5b9e\u4f53\u96c6\u8fd8\u6709\u4e00\u4e2a\u5c5e\u6027date of birth\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u51fa\u751f\u65e5\u671f\u548c\u5f53\u524d\u65e5\u671f\u6765\u8ba1\u7b97\u5e74\u9f84\u3002\u56e0\u6b64\uff0c\u5e74\u9f84\u662f\u4e00\u4e2a\u6d3e\u751f\u5c5e\u6027\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u51fa\u751f\u65e5\u671f\u53ef\u80fd\u88ab\u79f0\u4e3a\u57fa\u672c\u5c5e\u6027\u6216\u5b58\u50a8\u5c5e\u6027\u3002\u6d3e\u751f\u5c5e\u6027\u7684\u503c\u4e0d\u5b58\u50a8\uff0c\u4f46\u5728\u9700\u8981\u65f6\u8fdb\u884c\u8ba1\u7b97\u3002</li> </ul>"},{"location":"DB/DB6/#_4","title":"\u7a7a\u503c","text":"<ul> <li>\u5f53\u5b9e\u4f53\u6ca1\u6709\u503c\u65f6\uff0c\u5c5e\u6027\u53d6\u7a7a\u503c\u3002\u7a7a\u503c\u53ef\u80fd\u8868\u793a\u201c\u4e0d\u9002\u7528\u201d\u2014\u2014\u4e5f\u5c31\u662f\u8bf4\uff0c\u8be5\u503c\u5bf9\u4e8e\u5b9e\u4f53\u4e0d\u5b58\u5728\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u6ca1\u6709\u4e2d\u95f4\u540d\u7684\u4eba\u7684\u4e2d\u95f4\u540d\u5c5e\u6027\u53ef\u4ee5\u8bbe\u4e3a\u7a7a\u503c\u3002\u7a7a\u503c\u8fd8\u53ef\u4ee5\u8868\u793a\u5c5e\u6027\u503c\u672a\u77e5\u3002\u672a\u77e5\u7684\u503c\u53ef\u80fd\u662f\u7f3a\u5931\u7684\uff08\u503c\u5b58\u5728\uff0c\u4f46\u6211\u4eec\u6ca1\u6709\u8fd9\u4e2a\u4fe1\u606f\uff09\uff0c\u6216\u8005\u662f\u4e0d\u77e5\u9053\u7684\uff08\u6211\u4eec\u4e0d\u77e5\u9053\u8be5\u503c\u662f\u5426\u5b58\u5728\uff09\u3002</li> <li>\u4f8b\u5982\uff0c\u5982\u679c\u67d0\u4e2a\u7279\u5b9a\u6559\u5e08\u7684\u59d3\u540d\u503c\u4e3a\u7a7a\u503c\uff0c\u6211\u4eec\u4f1a\u5047\u8bbe\u8be5\u503c\u7f3a\u5931\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6559\u5e08\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u59d3\u540d\u3002\u5bf9\u4e8eapartment number\u5c5e\u6027\u7684\u7a7a\u503c\u53ef\u80fd\u610f\u5473\u7740\u5730\u5740\u4e0d\u5305\u62ec\u516c\u5bd3\u53f7\uff08\u4e0d\u9002\u7528\uff09\uff0c\u4e5f\u53ef\u80fd\u610f\u5473\u7740\u5b58\u5728\u516c\u5bd3\u53f7\uff0c\u4f46\u6211\u4eec\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\uff08\u7f3a\u5931\uff09\uff0c\u6216\u8005\u6211\u4eec\u4e0d\u77e5\u9053\u516c\u5bd3\u53f7\u662f\u5426\u662f\u6559\u5e08\u5730\u5740\u7684\u4e00\u90e8\u5206\uff08\u672a\u77e5\uff09\u3002</li> </ul>"},{"location":"DB/DB6/#mapping-cardinality","title":"Mapping Cardinality(\u6620\u5c04\u57fa\u6570)","text":"<p>Express the number of entities to which another entity can be associated via a relationship set.</p> <p>Abstract</p> <ul> <li>One to one</li> <li>One to many</li> <li>Many to one</li> <li>Many to many </li> </ul> <p>We express cardinality constraints by drawing either a directed line (\\(\\rightarrow\\)), signifying \u201cone,\u201d or an undirected line (\\(\u2014\\)), signifying \u201cmany,\u201d between the relationship set and the entity set.</p> <p>\u57fa\u6570\u7ea6\u675f</p> <p></p> <ul> <li> <p>\u4e00\u5bf9\u4e00\u3002\u6211\u4eec\u4ece\u5173\u7cfb\u96c6\u5411\u4e24\u4e2a\u5b9e\u4f53\u96c6\u7ed8\u5236\u6709\u5411\u7ebf\u3002\u4f8b\u5982\uff0c\u5728\u56fe\u4e2d\uff0c\u6307\u5411\u6559\u5e08\u548c\u5b66\u751f\u7684\u6709\u5411\u7ebf\u8868\u660e\uff0c\u4e00\u4e2a\u6559\u5e08\u6700\u591a\u53ef\u4ee5\u6307\u5bfc\u4e00\u4e2a\u5b66\u751f\uff0c\u4e00\u4e2a\u5b66\u751f\u6700\u591a\u53ef\u4ee5\u6709\u4e00\u4e2a\u6307\u5bfc\u8005\u3002</p> </li> <li> <p>\u4e00\u5bf9\u591a\u3002\u6211\u4eec\u4ece\u5173\u7cfb\u96c6\u5411\u5173\u7cfb\u7684\u201c\u4e00\u201d\u4fa7\u7ed8\u5236\u6709\u5411\u7ebf\u3002\u56e0\u6b64\uff0c\u5728\u56fe\u4e2d\uff0c\u4ece\u5173\u7cfb\u96c6advisor\u5230\u5b9e\u4f53\u96c6instructor\u6709\u4e00\u4e2a\u6709\u5411\u7ebf\uff0c\u5230\u5b9e\u4f53\u96c6student\u6709\u4e00\u4e2a\u65e0\u5411\u7ebf\u3002\u8fd9\u8868\u793a\u4e00\u4e2a\u6559\u5e08\u53ef\u4ee5\u6307\u5bfc\u591a\u4e2a\u5b66\u751f\uff0c\u4f46\u4e00\u4e2a\u5b66\u751f\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u6307\u5bfc\u8005\u3002</p> </li> <li> <p>\u591a\u5bf9\u4e00\u3002\u6211\u4eec\u4ece\u5173\u7cfb\u96c6\u5411\u5173\u7cfb\u7684\u201c\u4e00\u201d\u4fa7\u7ed8\u5236\u6709\u5411\u7ebf\u3002\u56e0\u6b64\uff0c\u5728\u56fe\u4e2d\uff0c\u4ece\u5173\u7cfb\u96c6advisor\u5230\u5b9e\u4f53\u96c6instructor\u6709\u4e00\u4e2a\u65e0\u5411\u7ebf\uff0c\u5230\u5b9e\u4f53\u96c6student\u6709\u4e00\u4e2a\u6709\u5411\u7ebf\u3002\u8fd9\u8868\u793a\u4e00\u4e2a\u6559\u5e08\u6700\u591a\u53ef\u4ee5\u6307\u5bfc\u4e00\u4e2a\u5b66\u751f\uff0c\u4f46\u4e00\u4e2a\u5b66\u751f\u53ef\u4ee5\u6709\u591a\u4e2a\u6307\u5bfc\u8005\u3002</p> </li> <li> <p>\u591a\u5bf9\u591a\u3002\u6211\u4eec\u4ece\u5173\u7cfb\u96c6\u5411\u4e24\u4e2a\u5b9e\u4f53\u96c6\u7ed8\u5236\u65e0\u5411\u7ebf\u3002\u56e0\u6b64\uff0c\u5728\u56fe\u4e2d\uff0c\u4ece\u5173\u7cfb\u96c6advisor\u5230\u5b9e\u4f53\u96c6instructor\u548cstudent\u90fd\u6709\u65e0\u5411\u7ebf\u3002\u8fd9\u8868\u793a\u4e00\u4e2a\u6559\u5e08\u53ef\u4ee5\u6307\u5bfc\u591a\u4e2a\u5b66\u751f\uff0c\u4e00\u4e2a\u5b66\u751f\u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\u6307\u5bfc\u8005</p> </li> </ul> <p>\u54ea\u8fb9\u6709\u7bad\u5934\u54ea\u8fb9\u5c31\u662f\u5355\u4e00\u7684</p>"},{"location":"DB/DB6/#total-and-partial-participation","title":"Total and Partial Participation","text":"<ul> <li>Total participation (indicated by double line): every entity in the entity set participates in at least one relationship in the relationship set \u6240\u6709\u5143\u7d20\u90fd\u8981\u53c2\u4e0e\u5173\u7cfb</li> <li>Partial participation: some entities may not participate in any relationship in the relationship set</li> </ul> <p>Example</p> <ul> <li>\u4e3e\u4f8b\u6765\u8bf4\uff0c\u4e00\u4e2a\u5927\u5b66\u53ef\u80fd\u8981\u6c42\u6bcf\u4e2a\u5b66\u751f\u81f3\u5c11\u6709\u4e00\u4e2a\u6307\u5bfc\u8001\u5e08\uff1b\u5728E-R\u6a21\u578b\u4e2d\uff0c\u8fd9\u5bf9\u5e94\u4e8e\u8981\u6c42\u6bcf\u4e2a\u5b9e\u4f53\u81f3\u5c11\u901a\u8fc7\u6307\u5bfc\u8005\u5173\u7cfb\u4e0e\u81f3\u5c11\u4e00\u4e2a\u6559\u5e08\u76f8\u5173\u8054\u3002\u56e0\u6b64\uff0c\u5b66\u751f\u5728\u5173\u7cfb\u96c6advisor\u4e2d\u7684\u53c2\u4e0e\u662f\u5b8c\u5168\u7684\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4e00\u4e2a\u6559\u5e08\u4e0d\u4e00\u5b9a\u8981\u6307\u5bfc\u4efb\u4f55\u5b66\u751f\u3002\u56e0\u6b64\uff0c\u53ef\u80fd\u53ea\u6709\u4e00\u4e9b\u6559\u5e08\u5b9e\u4f53\u901a\u8fc7\u6307\u5bfc\u8005\u5173\u7cfb\u4e0e\u5b66\u751f\u5b9e\u4f53\u96c6\u76f8\u5173\u8054\uff0c\u56e0\u6b64\u6559\u5e08\u5728advisor\u5173\u7cfb\u96c6\u4e2d\u7684\u53c2\u4e0e\u662f\u90e8\u5206\u7684\u3002\u6211\u4eec\u4f7f\u7528\u53cc\u7ebf\u6765\u8868\u793a\u5b9e\u4f53\u5728\u5173\u7cfb\u96c6\u4e2d\u7684\u5b8c\u5168\u53c2\u4e0e\u3002\u56fe\u4e2d\u663e\u793a\u4e86\u4e00\u4e2a\u6307\u5bfc\u8005\u5173\u7cfb\u96c6\u7684\u793a\u4f8b\uff0c\u53cc\u7ebf\u8868\u793a\u5b66\u751f\u5fc5\u987b\u6709\u4e00\u4e2a\u6307\u5bfc\u8001\u5e08\u3002</li> </ul> <p></p>"},{"location":"DB/DB6/#notation-for-expressing-more-complex-constraints","title":"Notation for Expressing More Complex Constraints","text":"<p>A line may have an associated minimum and maximum cardinality, shown in the form l..h, where l is the minimum and h the maximum cardinality</p> <ul> <li>A minimum value of 1 indicates total participation.</li> <li>A maximum value of 1 indicates that the entity participates  in at most one relationship</li> <li>A maximum value of * indicates no limit.</li> </ul> Example <p> </p> <p>\u591a\u5143\u5173\u7cfb\u91cc\uff0c\u6211\u4eec\u53ea\u5141\u8bb8\u6700\u591a\u6709\u4e00\u4e2a\u7bad\u5934\u3002\u56e0\u4e3a\u4e0d\u6b62\u4e00\u4e2a\u7bad\u5934\u7684\u8bdd\uff0c\u53ef\u4ee5\u7528\u4e24\u79cd\u65b9\u6cd5\u6765\u89e3\u91ca\u3002</p>"},{"location":"DB/DB6/#primary-key","title":"Primary Key","text":"<p>Primary Key for Relationship Sets</p> <p>\u591a\u5143\u8054\u7cfb\u7684 primary key \u662f\u4e24\u7aef key \u7684\u7ec4\u5408\u3002\u5982\u679c\u662f\u4e00\u5bf9\u4e00\u7684\u8054\u7cfb\uff0c\u90a3\u4e48\u5355\u4e2a\u5b9e\u4f53\u7684 key \u4e5f\u53ef\u4ee5\u4f5c\u4e3a primary key. \u4e00\u5bf9\u591a\u7684\u8054\u7cfb\uff08\u5982\u5bfc\u5e08\u548c\u5b66\u751f\u5c31\u662f\u4e00\u5bf9\u591a\uff0c\u90a3\u4e48\u4e3b\u952e\u5e94\u8be5\u4e3a\u5b66\u751f\uff09</p> <p>contents</p> <ul> <li>Entity sets</li> <li>Relationship sets</li> <li>Weak entity sets</li> </ul>"},{"location":"DB/DB6/#entity-sets","title":"Entity Sets","text":"<ul> <li>\u6982\u5ff5\u4e0a\uff0c\u4e2a\u4f53\u5b9e\u4f53\u662f\u4e0d\u540c\u7684\uff1b\u7136\u800c\u4ece\u6570\u636e\u5e93\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u5fc5\u987b\u4ee5\u5b83\u4eec\u7684\u5c5e\u6027\u6765\u8868\u8fbe\u3002\u56e0\u6b64\uff0c\u5b9e\u4f53\u7684\u5c5e\u6027\u503c\u5fc5\u987b\u662f\u80fd\u591f\u552f\u4e00\u6807\u8bc6\u5b9e\u4f53\u7684\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5b9e\u4f53\u96c6\u4e2d\u7684\u4efb\u4f55\u4e24\u4e2a\u5b9e\u4f53\u90fd\u4e0d\u5141\u8bb8\u5bf9\u6240\u6709\u5c5e\u6027\u5177\u6709\u5b8c\u5168\u76f8\u540c\u7684\u503c,\u5173\u7cfb\u6a21\u5f0f\u7684\u952e\u7684\u6982\u5ff5\uff0c\u5982\u5728\u7b2c2.3\u8282\u4e2d\u5b9a\u4e49\u7684\uff0c\u76f4\u63a5\u9002\u7528\u4e8e\u5b9e\u4f53\u96c6\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b9e\u4f53\u7684\u952e\u662f\u4e00\u7ec4\u8db3\u4ee5\u533a\u5206\u5b9e\u4f53\u4e4b\u95f4\u7684\u5c5e\u6027\u3002\u8d85\u952e\u3001\u5019\u9009\u952e\u548c\u4e3b\u952e\u7684\u6982\u5ff5\u540c\u6837\u9002\u7528\u4e8e\u5b9e\u4f53\u96c6\uff0c\u5c31\u50cf\u5b83\u4eec\u9002\u7528\u4e8e\u5173\u7cfb\u6a21\u5f0f\u4e00\u6837\u3002\u952e\u8fd8\u6709\u52a9\u4e8e\u552f\u4e00\u6807\u8bc6\u5173\u7cfb\uff0c\u4ece\u800c\u4f7f\u5173\u7cfb\u4e4b\u95f4\u533a\u522b\u5f00\u6765\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5b9a\u4e49\u5173\u7cfb\u96c6\u7684\u76f8\u5e94\u952e\u7684\u6982\u5ff5</li> </ul>"},{"location":"DB/DB6/#relationship-sets","title":"Relationship Sets","text":"<ul> <li>\u5c06\u53c2\u4e0erelationship\u4e24\u7aef\u7684key\u7ec4\u5408\u8d77\u6765(\u591a\u5143\u7684\u8ba8\u8bba<sub>~\u8fc7\u4e8e\u590d\u6742</sub>~)</li> </ul>"},{"location":"DB/DB6/#weak-entity-sets","title":"Weak Entity Sets","text":"<p>An entity set that does not have a primary key is referred to as a weak entity set.</p> <p>Weak Entity\u7684\u4ea7\u751f</p> <ul> <li>\u8003\u8651\u4e00\u4e2a\u90e8\u5206\u5b9e\u4f53\uff0c\u5b83\u7531\u8bfe\u7a0b\u6807\u8bc6\u7b26\u3001\u5b66\u671f\u3001\u5e74\u4efd\u548c\u90e8\u5206\u6807\u8bc6\u7b26\u552f\u4e00\u6807\u8bc6\u3002\u90e8\u5206\u5b9e\u4f53\u4e0e\u8bfe\u7a0b\u5b9e\u4f53\u76f8\u5173\u8054\u3002\u5047\u8bbe\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f53\u96c6\u4e4b\u95f4\u7684\u5173\u7cfb\u96c6sec_course\uff0c\u5373\u90e8\u5206\u548c\u8bfe\u7a0b\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</li> <li>\u73b0\u5728\uff0c\u8bf7\u6ce8\u610f\uff0csec_course\u4e2d\u7684\u4fe1\u606f\u662f\u591a\u4f59\u7684\uff0c\u56e0\u4e3a\u90e8\u5206\u5df2\u7ecf\u6709\u4e00\u4e2acourse_id\u5c5e\u6027\uff0c\u5b83\u6807\u8bc6\u4e86\u90e8\u5206\u4e0e\u54ea\u4e2a\u8bfe\u7a0b\u76f8\u5173\u8054\u3002\u5904\u7406\u6b64\u5197\u4f59\u7684\u4e00\u79cd\u9009\u62e9\u662f\u6446\u8131\u5173\u7cfbsec_course\uff1b\u7136\u800c\uff0c\u901a\u8fc7\u8fd9\u6837\u505a\uff0c\u90e8\u5206\u548c\u8bfe\u7a0b\u4e4b\u95f4\u7684\u5173\u7cfb\u53d8\u5f97\u9690\u542b\u5728\u4e00\u4e2a\u5c5e\u6027\u4e2d\uff0c\u8fd9\u662f\u4e0d\u53ef\u53d6\u7684\u3002</li> <li>\u5904\u7406\u8fd9\u79cd\u5197\u4f59\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4e0d\u5728\u90e8\u5206\u5b9e\u4f53\u4e2d\u5b58\u50a8course_id\u5c5e\u6027\uff0c\u53ea\u5b58\u50a8\u5269\u4f59\u7684\u5c5e\u6027sec_id\u3001year\u548csemester\u3002\u7136\u800c\uff0c\u90e8\u5206\u5b9e\u4f53\u96c6\u7136\u540e\u6ca1\u6709\u8db3\u591f\u7684\u5c5e\u6027\u6765\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u7279\u5b9a\u7684\u90e8\u5206\u5b9e\u4f53\uff1b\u5c3d\u7ba1\u6bcf\u4e2a\u90e8\u5206\u5b9e\u4f53\u90fd\u662f\u72ec\u7279\u7684\uff0c\u4f46\u4e0d\u540c\u8bfe\u7a0b\u7684\u90e8\u5206\u53ef\u80fd\u5171\u4eab\u76f8\u540c\u7684sec_id\u3001year\u548csemester\u3002</li> <li>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5c06\u5173\u7cfbsec course\u89c6\u4e3a\u4e00\u79cd\u63d0\u4f9b\u989d\u5916\u4fe1\u606f\u7684\u7279\u6b8a\u5173\u7cfb\uff0c\u5373\u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u90e8\u5206\u5b9e\u4f53\u6240\u9700\u7684course_id\u3002</li> <li>Weak Entity\u8981\u7528\u53cc\u7ebf\u6846\u8d77\u6765</li> </ul> <p>The existence of a weak entity set depends on the existence of a identifying entity set\uff08\u6807\u8bc6\u6027\u5b9e\u4f53\u96c6\uff09</p> <ul> <li>It must relate to the identifying entity set via a total, one-to-many relationship set from the identifying to the weak entity set</li> <li>Identifying relationship\uff08\u6807\u8bc6\u6027\u8054\u7cfb\uff09 depicted using a double diamond</li> </ul> <p>The discriminator(\u5206\u8fa8\u7b26\uff0cor partial key) of a weak entity set is the set of attributes that distinguishes among all the entities of a weak entity set  when the identifying entity  they depend is known.</p> <p>We underline the discriminator of a weak entity set  with a dashed line. \uff08\u865a\u7ebf\uff09 We put the identifying relationship of a weak entity in a double diamond. \uff08\u53cc\u6846\uff09</p> Example <p> </p> <p>Redundant Attributes</p> <p> </p>"},{"location":"DB/DB6/#reduction-to-relational-schemas","title":"Reduction to Relational Schemas","text":"<p>\u4e00\u4e2a ER \u56fe\u53ef\u4ee5\u8f6c\u6362\u6210\u591a\u79cd\u6a21\u5f0f\uff08\u56fe\u6570\u636e\u5e93\u3001\u9762\u5411\u5bf9\u8c61\u3001\u5173\u7cfb\u6a21\u5f0f\u7b49\uff09</p> <ul> <li>A strong entity set reduces to a schema with the same attributes <code>course(course_id, title, credits)</code></li> <li>A weak entity set becomes a table that includes a column for the primary key of the identifying strong entity set.   Primary key of the table is the union of the discriminator of the\u00a0weak entity set and\u00a0 the\u00a0primary key of the identifying strong entity set.\u00a0 \u6807\u8bc6\u96c6\u5408\u7684\u4e3b\u952e\u52a0\u4e0a\u5f31\u5b9e\u4f53\u96c6\u7684\u5206\u8fa8\u7b26\u3002 <code>section(course_id, sec_id, semester, year)</code></li> <li> <p>A many-to-many relationship set is represented as a schema with attributes for the primary keys of the two participating entity sets, and any descriptive attributes of the relationship set.    \u5373\u4e24\u4e2a\u96c6\u5408\u7684\u4e3b\u952e\u62fc\u8d77\u6765\uff0c\u52a0\u4e0a\u5173\u7cfb\u7684\u9644\u5e26\u5c5e\u6027\u3002  </p> Example <p> </p> <p><code>advisor = (s_id, i_id)</code></p> \u4e3a\u4ec0\u4e48\u591a\u5bf9\u591a\u7684\u5173\u7cfb\u4e00\u5b9a\u8981\u8f6c\u5316\u6210\u4e00\u4e2a\u5173\u7cfb\u6a21\u5f0f </li> <li> <p>Many-to-one and one-to-many relationship sets that are total on the many-side can be represented by adding an extra attribute to the \u201cmany\u201d side, containing the primary key of the \u201cone\u201d side.   \u591a\u5bf9\u4e00\u53ef\u4ee5\u4e0d\u8f6c\u6362\u4e3a\u5355\u72ec\u7684\u5173\u7cfb\u6a21\u5f0f\uff0c\u76f4\u63a5\u5728\u201c\u591a\u201c\u90a3\u4e2a\u8868\u4e0a\u6dfb\u52a0\u201d\u4e00\u201c\u7684\u4e3b\u952e\u5373\u53ef\u3002</p> Example <p> </p> <p><code>inst_dept</code> \u672c\u8d28\u5c31\u662f\u5c06 <code>instructor</code> \u548c <code>department</code> \u5408\u5e76\uff0c\u5728 <code>instrutor</code> \u7684\u5c5e\u6027\u4e0a\u6dfb\u52a0 <code>dept_name</code>.  <pre><code>department(dept_name, building, budget)\ninstructor(ID,name,salary)\ninst_dept(ID, dept_name)\n// \u8f6c\u6362\u540e\uff08\u5373\u5408\u5e76\uff09\ndepartment(dept_name, building, budget)\ninstructor(ID, name, salary, dept_name)\n</code></pre></p> <p>\u5404\u6709\u5229\u5f0a\uff0c\u7b2c\u4e00\u79cd\u5199\u6cd5\u8868\u53ef\u80fd\u4f1a\u592a\u591a\uff0c\u7b2c\u4e8c\u79cd\u5199\u6cd5\u5408\u5728\u4e00\u8d77\u8868\u53ef\u80fd\u592a\u5927\uff0c\u4e0d\u5229\u4e8e\u7ba1\u7406\u3002</p> </li> </ul>"},{"location":"DB/DB6/#composite-and-multivalued-attributes","title":"Composite and Multivalued Attributes","text":"<p>Composite attributes are flattened out by creating a separate attribute for each component attribute.  </p> <p>\u5c31\u50cf\u5728 C \u8bed\u8a00\u91cc\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u3002\u4f46\u662f\u5173\u7cfb\u6570\u636e\u5e93\u91cc\u6bcf\u4e2a\u5c5e\u6027\u90fd\u5fc5\u987b\u662f\u7b80\u5355\u6570\u636e\u7c7b\u578b\uff0c\u5c31\u5fc5\u987b\u628a\u8fd9\u4e9b\u590d\u5408\u5c5e\u6027\u94fa\u5e73\u3002</p> <p>e.g. <pre><code>instructor(ID, \n        first_name, middle_initial, last_name,      \n        street_number, street_name, apt_number, \n        city, state, zip_code, date_of_birth, age)\n</code></pre></p> <p>A multivalued attribute M of an entity E is represented by a separate schema EM.  </p> <p>Schema EM has attributes corresponding to the primary key of E and an attribute corresponding to multivalued attribute M.  </p> Example <p> </p> <p>Special Case</p> <p> </p>"},{"location":"DB/DB6/#design-issues","title":"Design Issues(\u8bbe\u8ba1\u95ee\u9898)","text":""},{"location":"DB/DB6/#common-mistakes-in-e-r-diagrams","title":"Common Mistakes in E-R Diagrams","text":"<ul> <li>\u4fe1\u606f\u5197\u4f59   student \u7684 <code>dept_name</code> \u5e94\u8be5\u53bb\u6389</li> </ul> <ul> <li>\u5173\u7cfb\u5c5e\u6027\u4f7f\u7528\u4e0d\u5f53   \u8fd9\u91cc\u4e00\u95e8\u8bfe\u53ef\u80fd\u6709\u5f88\u591a\u6b21\u4f5c\u4e1a\uff0c\u4e0d\u80fd\u53ea\u7528\u4e00\u4e2a\u5b9e\u4f53\u3002</li> </ul> <pre><code>\u89e3\u51b3\u65b9\u6cd5\uff1a\n</code></pre>"},{"location":"DB/DB6/#use-of-entity-sets-vs-attributes","title":"Use of entity sets vs. attributes","text":"<ul> <li>\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u660e\u786e\u653e\u4e00\u4e2a\u7535\u8bdd\u53f7\u7801\u3002</li> <li>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u7535\u8bdd\u53f7\u7801\u53ef\u4ee5\u9644\u5c5e\u66f4\u591a\u5c5e\u6027\uff0c\u4e00\u4e2a\u7535\u8bdd\u53f7\u7801\u53ef\u4ee5\u7531\u591a\u4eba\u5171\u4eab\u3002\uff08\u5982\u529e\u516c\u5ba4\u7684\u516c\u5171\u7535\u8bdd\uff09</li> </ul>"},{"location":"DB/DB6/#use-of-entity-sets-vs-relationship-sets","title":"Use of entity sets vs. relationship sets","text":"<p>Possible guideline is to designate a relationship set to describe an action that occurs between entities.</p> <p>\u5b9e\u4f53\u53ef\u4ee5\u4fbf\u4e8e\u4e0e\u5176\u4ed6\u5b9e\u4f53\u5efa\u7acb\u8054\u7cfb\u3002</p> <p>\u5982\u7535\u5546\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u628a\u5ba2\u6237\u548c\u5546\u54c1\u7528 <code>buy</code> \u8054\u7cfb\u8d77\u6765\uff0c\u4f46\u540e\u7eed\u8fd8\u4f1a\u6709\u4ed8\u6b3e\u3001\u7269\u6d41\u7b49\u60c5\u51b5\uff0c\u6211\u4eec\u6700\u597d\u628a <code>buy</code> \u5b9e\u4f53\u5316\u4e3a\u8ba2\u5355\u3002</p>"},{"location":"DB/DB6/#placement-of-relationship-attributes","title":"Placement of relationship attributes","text":"<ul> <li>\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8bb0\u5f55\u6bcf\u6b21\u8bbf\u95ee\u7684\u8bbf\u95ee\u65e5\u671f\u3002</li> <li>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u53ea\u80fd\u8bb0\u5f55\u7528\u6237\u6700\u8fd1\u4e00\u6b21\u8bbf\u95ee\u65e5\u671f\uff0c\u4e0d\u5b8c\u6574\u3002</li> </ul>"},{"location":"DB/DB6/#binary-vs-non-binary-relationships","title":"Binary Vs. Non-Binary Relationships","text":"<ul> <li> <p>Binary versus n-ary relationship sets  Although it is possible to replace any nonbinary (n-ary, for \\(n &gt;2\\)) relationship set by a number of distinct binary relationship sets, a n-ary relationship set shows more clearly that several entities participate in a single relationship.</p> </li> <li> <p>Some relationships that appear to be non-binary may be better represented using binary relationships e.g. A ternary relationship parents, relating a child to his/her father and mother, is best replaced by two binary relationships,  father and mother Using two binary relationships allows partial information (e.g. , only mother being know) But there are some relationships that are naturally non-binary e.g. : <code>proj_guide</code></p> </li> </ul> Converting Non-Binary Relationships  <p> </p>"},{"location":"DB/DB6/#extended-er-features","title":"Extended ER Features","text":"<ul> <li>Specialization\uff08\u7279\u5316\uff09 <ul> <li>Top-down design process; we designate subgroupings within an entity set that are distinctive from other entities in the set.</li> <li>Attribute inheritance \u2013 a lower-level entity set inherits all the attributes and relationship participation of the higher-level entity set to which it is linked.</li> </ul> </li> <li>Generalization\uff08\u6982\u5316\uff09 A bottom-up design process \u2013 combine a number of entity sets that share the same features into a higher-level entity set.</li> </ul>"},{"location":"DB/DB6/#an-example","title":"An Example","text":"<ul> <li> <p>\u8fd9\u91cc instructor \u5b9e\u4f53\u91cc\u4e0d\u9700\u8981 <code>dept</code> \u5c5e\u6027\uff0c\u56e0\u4e3a\u5728 department \u5b9e\u4f53\u91cc\u6709\u4e86\uff0c\u5426\u5219\u4f1a\u5197\u4f59\u3002</p> </li> <li> <p>\u6bcf\u4e2a\u5b9e\u4f53\u76f4\u63a5\u8f6c\u6362\u4e3a\u5173\u7cfb\u6a21\u5f0f\u3002\u5173\u7cfb\u8f6c\u6362\u4e3a\u5143\u7ec4\uff0c\u5143\u7d20\u4e3a\u4e24\u4e2a\u8868\u7684 primary key. \u5bf9\u4e8e\u4e00\u5bf9\u591a\u7684\u60c5\u51b5\uff08\u5982 <code>instructor</code> \u548c <code>department\uff09\u8f6c\u6362\u540e</code> primary key \u4ecd\u4e3a ID.  \u4e3a\u4e86\u51cf\u5c11\u8868\u7684\u6570\u91cf\uff0c\u53ef\u4ee5\u628a primary key \u76f8\u540c\u7684\u8868\u5408\u5e76\u3002</p> </li> <li> <p><code>section</code> \u4e0d\u8db3\u4ee5\u552f\u4e00\u786e\u5b9a\u5143\u7ec4\uff0c\u79f0\u4e3a\u5f31\u5b9e\u4f53\uff0c\u4f9d\u8d56\u4e8e\u53e6\u4e00\u4e2a\u5b9e\u4f53\uff08\u5982 OOP\u3001DB \u90fd\u53ef\u4ee5\u6709\u540c\u6837\u5e74\u4efd\u5b66\u671f\u7684 1 \u73ed\uff09\u3002\u56e0\u4e3a\u8bfe\u7a0b\u53f7 <code>course_id</code> \u653e\u5728 <code>section</code> \u4f1a\u6709\u5197\u4f59\uff0c\u56e0\u6b64\u6ca1\u6709\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5bfc\u81f4\u5f62\u6210\u4e86\u4e00\u4e2a\u5f31\u5b9e\u4f53\u3002<code>sec_course</code> \u8868\u793a\u8054\u7cfb\u7684\u662f\u5f31\u5b9e\u4f53\uff08\u53cc\u6846\uff09\uff0c<code>section</code> \u4e0d\u80fd\u79bb\u5f00 <code>course</code> \u5b58\u5728\u3002</p> </li> <li> <p>relationship \u4e0a\u4e5f\u53ef\u4ee5\u5e26\u5c5e\u6027\uff0c\u5982 <code>takes</code> \u4e0a\u7684 <code>grade</code>. </p> </li> <li> <p>\u5173\u7cfb\u53cc\u65b9\u53ef\u4ee5\u662f\u76f8\u540c\u7684\u5b9e\u4f53\u96c6\u5408\uff0c<code>course</code> \u8fd9\u91cc\u7684 <code>prereq</code> \u662f\u591a\u5bf9\u591a\uff0c\u8868\u793a\u4e00\u95e8\u8bfe\u53ef\u4ee5\u6709\u591a\u95e8\u9884\u4fee\u8bfe\uff0c\u4e00\u95e8\u8bfe\u4e5f\u53ef\u4ee5\u662f\u591a\u95e8\u8bfe\u7684\u9884\u4fee\u8bfe\u3002<code>{}</code> \u91cc\u9762\u662f\u591a\u4e2a\u503c\uff0c\u8868\u793a\u590d\u5408\u5c5e\u6027\u3002\u8fd9\u91cc\u8868\u793a <code>time_slot_id</code> \u5b9e\u9645\u4e0a\u53ef\u4ee5\u7531\u8fd9\u4e09\u4e2a\u5c5e\u6027\u590d\u5408\u800c\u6210\u3002</p> </li> <li> <p>\u4e00\u4e2a\u5b66\u751f\u53ea\u80fd\u5c5e\u4e8e\u4e00\u4e2a\u7cfb</p> </li> <li>\u865a\u7ebf(\u90e8\u5206\u5173\u952e\u5b57,\u6807\u8bc6\u7b26)</li> <li>\u591a\u5bf9\u591a\u9700\u8981\u4e00\u4e2a\u8868</li> <li>\u4e00\u5bf9\u591a\u4e0d\u9700\u8981\u8868</li> </ul>"},{"location":"DB/DB8/","title":"Chapter 8 Relational Database Design","text":"<p>Abstract</p> <ul> <li>1NF\uff1a \u5b57\u6bb5\u662f\u6700\u5c0f\u7684\u7684\u5355\u5143\u4e0d\u53ef\u518d\u5206</li> <li>2NF\uff1a\u6ee1\u8db31NF,\u8868\u4e2d\u7684\u5b57\u6bb5\u5fc5\u987b\u5b8c\u5168\u4f9d\u8d56\u4e8e\u5168\u90e8\u4e3b\u952e\u800c\u975e\u90e8\u5206\u4e3b\u952e</li> <li>3NF\uff1a\u6ee1\u8db32NF,\u975e\u4e3b\u952e\u5916\u7684\u6240\u6709\u5b57\u6bb5\u5fc5\u987b\u4e92\u4e0d\u4f9d\u8d56</li> <li>BCNF\uff1a\u4e3b\u952e\u901a\u5e38\u4e3a\u4e00\u4e2a\u3002\u5982\u679c\u4e3b\u952e\u4e3a\u591a\u4e2a\uff0c\u4e0d\u80fd\u5b58\u5728\u90e8\u5206\u6216\u4f20\u9012\u4f9d\u8d56\u3002</li> <li>\u6b63\u5219\u5206\u89e3\\(F_c\\)(\u627e\u5230\u6b63\u4ea4\u57fa)</li> <li>\u4f9d\u8d56\u4fdd\u6301\u5224\u65ad</li> <li>\u6700\u5c0f\u51fd\u6570\u4f9d\u8d56\u96c6\\(F_m\\)</li> </ul>"},{"location":"DB/DB8/#introduction","title":"Introduction(\u5206\u89e3)","text":"<p>Example</p> <p> </p> <p>What about combining instructor and department?</p> <p> </p> <p>Pitfalls of the \u201cbad\u201d relations</p> <ul> <li>Information repetition (\u4fe1\u606f\u91cd\u590d)</li> <li>Insertion anomalies (\u63d2\u5165\u5f02\u5e38)</li> <li>Update difficulty (\u66f4\u65b0\u56f0\u96be)</li> </ul> <p>\u6570\u636e\u4e4b\u95f4\u5b58\u5728\u7740\u9690\u542b\u7684\u51fd\u6570\u7ea6\u675f\u5173\u7cfb\uff0c\u77e5\u9053\u4e86 id \u5c31\u53ef\u4ee5\u51b3\u5b9a\u5176\u4ed6\u5143\u7d20\u3002 e.g.  id \\(\\rightarrow\\) name, salary, dept_name; dept_name \\(\\rightarrow\\) building, budget \u4ea7\u751f\u5197\u4f59\u7684\u539f\u56e0\u662f dept_name \u51b3\u5b9a\u4e86\u90e8\u5206\u5c5e\u6027\uff0c\u4f46\u4ed6\u5374\u4e0d\u662f\u8fd9\u4e2a\u8868\u7684 primary key. \u597d\u7684\u5173\u7cfb\uff1a\u53ea\u6709 candidate key \u80fd\u51b3\u5b9a\u5176\u4ed6\u5c5e\u6027\u3002 \u62c6\u8868\u540e\u8981\u6709\u91cd\u53e0\u7684\u5c5e\u6027\uff0c\u5426\u5219\u65e0\u6cd5\u62fc\u63a5\u56de\u53bb\u3002\u8fd9\u91cc\u7684\u516c\u5171\u5c5e\u6027\u5fc5\u987b\u662f\u5206\u62c6\u51fa\u4e00\u4e2a\u5173\u7cfb\u6a21\u5f0f\u7684 primary key, \u8fd9\u662f\u65e0\u635f\uff08\u6ca1\u6709\u4fe1\u606f\u635f\u5931\uff09\u8fde\u63a5\u3002</p> <p>lossy decomposition</p> <p><code>employee(ID, name, street, city, salary)</code> \\(\\rightarrow\\) <code>employee1 (ID, name)</code> and <code>employee2 (name, street, city, salary)</code> </p> Example of Lossless-Join Decomposition  <p> </p>"},{"location":"DB/DB8/#lossless-join-decomposition","title":"Lossless-join Decomposition(\u65e0\u635f\u5206\u89e3)","text":"<p>Let \\(R\\) be a relation schema and let \\(R_1\\) and \\(R_2\\) form a decomposition of \\(R\\). That is \\(R = R_1  \\cup R_2\\). </p> <p>We say that the decomposition is a lossless decomposition if there is no loss of information by replacing  R with the two relation schemas \\(R = R_1  \\cup R_2\\). \u5982\u679c\u7528\u4e24\u4e2a\u5173\u7cfb\u6a21\u5f0f\\(R_1\\)\u548c\\(R_2\\)\u53bb\u4ee3\u66ff\\(R\\)\u6ca1\u6709\u4fe1\u606f\u4e22\u5931\u5c31\u662f\u65e0\u635f\u5206\u89e3\uff0c\u7528\u5173\u7cfb\u4ee3\u6570\u66f4\u7b80\u6d01\u5730\u53ef\u4ee5\u8868\u793a\u4e3a \\(r = \\prod_{R_1}(r)  \\bowtie \\prod_{R_2}(r)\\).</p> <p>And, conversely a decomposition is lossy if \\(r\\subset \\prod_{R_1}(r)  \\bowtie \\prod_{R_2}(r)\\)\u5bf9\u4e8e\u6709\u635f\u5206\u89e3\uff0c\u6211\u4eec\u81ea\u7136\u8fde\u63a5\u83b7\u5f97\u4e86\u66f4\u591a\u7684\u5143\u7ec4\uff0c\u4f46\u5b9e\u9645\u610f\u4e49\u4e0a\u6211\u4eec\u5374\u62e5\u6709\u66f4\u5c11\u7684\u4fe1\u606f\u3002 Note: more tuples implies more uncertainty (less information).</p> <p>A decomposition of \\(R\\) into \\(R_1\\) and \\(R_2\\) is lossless join if at least one of the following dependencies holds: (\u5145\u5206\u6761\u4ef6)</p> <p>Proof</p> <ul> <li>\\(R_1\\cap R_2\\rightarrow R_1\\)</li> <li>\\(R_1\\cap R_2 \\rightarrow R_2\\) \u5373\u516c\u5171\u5c5e\u6027\u662f\u5176\u4e2d\u4e00\u4e2a\u5173\u7cfb\u7684 Key.</li> </ul>"},{"location":"DB/DB8/#devise-a-theory-for-the-following","title":"Devise a Theory for the Following(\u89c4\u8303\u5316\u7406\u8bba)","text":"<ul> <li>Decide whether a particular relation R is in \u201cgood\u201d form(\u786e\u5b9a\u4e00\u4e2a\u5173\u7cfb\u662f\u5426\u662f\u826f\u6784\u7684).</li> <li>In the case that a relation R is not in \u201cgood\u201d form, decompose it into a set of relations \\(\\{R_1, R_2, \\ldots, R_n\\}\\) such that<ul> <li>each relation is in good form</li> <li>the decomposition is a lossless-join decomposition \u5982\u679c\u5173\u7cfb\u662f\u4e0d\u597d\u7684\uff0c\u6211\u4eec\u5e0c\u671b\u628a\u5b83\u65e0\u635f\u5206\u89e3\u6210\u597d\u7684\u5173\u7cfb\u3002</li> </ul> </li> <li>Our theory is based on:<ul> <li>functional dependencies\u51fd\u6570\u4f9d\u8d56</li> <li>multivalued dependencies</li> </ul> </li> <li>Normal  Forms(NF): \\(1NF \\rightarrow 2NF \\rightarrow 3NF \\rightarrow \\textbf{BCNF} \\rightarrow 4NF\\) \u6709\u4e9b\u51fd\u6570\u4f9d\u8d56\uff0c\u4e0d\u80fd\u5728 BCNF \u4e2d\u5f97\u5230\u4f53\u73b0\uff0c\u9700\u8981\u628a\u51e0\u4e2a\u8868\u62fc\u5728\u4e00\u8d77\u624d\u80fd\u4f53\u73b0\uff0c\u53eb\u4f9d\u8d56\u4fdd\u6301\u3002\u8fd9\u65f6\u6211\u4eec\u9700\u8981\u4ece BCNF \u56de\u5230 3NF.</li> </ul>"},{"location":"DB/DB8/#functional-dependencies","title":"Functional Dependencies(\u4f7f\u7528\u51fd\u6570\u4f9d\u8d56\u8fdb\u884c\u5206\u89e3)","text":"<p>\u8d85\u7801:\u7ed9\u5b9a\\(r(R)\\),\\(R\\)\u7684\u4e00\u4e2a\u5b50\u96c6\\(K\\),\u5bf9\u4e8e\u6240\u6709\u7684\u5143\u7ec4\u6709\uff1a\\(t_1 \\neq t_2 \\rightarrow t_1[K] \\neq t_2[K]\\)</p> <p>Functional Dependencies  are constraints on the set of legal relations. (\u6765\u81ea\u4e8e\u5e94\u7528\u5c42\u9762\u7684\u89c4\u5b9a) Require that the value for a certain set of attributes determines uniquely the value for another set of attributes.   e.g. dept_name \\(\\rightarrow\\) building A functional dependency is a generalization of the notion of a key.</p> <p>Let \\(R\\) be a relation schema \\(\\alpha\\subseteq R\\) and \\(\\beta\\subseteq R\\) (\\(\\alpha, \\beta\\) \u662f\u5c5e\u6027\u7684\u96c6\u5408) The functional dependency \\(\\alpha\\rightarrow \\beta\\) holds on \\(R\\) if and only if for any legal relations \\(r(R)\\), whenever any two tuples \\(t_1\\) and \\(t_2\\) of \\(r\\) agree on the attributes \\(\\alpha\\), they also agree on the attributes \\(\\beta\\).  That is,   </p> \\[ t_1[\\alpha] = t_2 [\\alpha]   \\Rightarrow   t_1[\\beta]  = t_2 [\\beta]  \\] <ul> <li>\u5b9e\u4f8b\u6ee1\u8db3\u51fd\u6570\u4f9d\u8d56 \\(\\rightarrow\\) \u51fd\u6570\u4f9d\u8d56\u5728\u6a21\u5f0f\\(r(R)\\)\u4e0a\u6210\u7acb</li> </ul> <p>\u901a\u8fc7\u6570\u636e\u5e93\u5b9e\u4f8b\u53ef\u4ee5\u8bc1\u4f2a\u51fd\u6570\u4f9d\u8d56\uff0c\u4f46\u4e0d\u80fd\u8bc1\u5b9e\u3002\uff08\u4f9d\u8d56\u662f\u6765\u81ea\u5e94\u7528\u5c42\u9762\u7684\u89c4\u5b9a\uff0c\u5148\u6709\u51fd\u6570\u4f9d\u8d56\uff0c\u518d\u6709\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\uff09</p> <p>Example</p> <p> </p> <p>\\(A\\rightarrow B\\) \u53ef\u4ee5\u8bc1\u4f2a\uff0c\u4f46\u4e5f\u4e0d\u80fd\u56e0\u6b64\u5c31\u8bf4 \\(B\\rightarrow A\\)</p> <ul> <li>K is a superkey for relation schema \\(R\\) if and only if \\(K\\rightarrow R\\)</li> <li>K is a candidate key for \\(R\\) if and only if <ul> <li>\\(K\\rightarrow R\\), and</li> <li>for no \\(\\alpha\\subset K\\), \\(\\alpha\\rightarrow R\\)</li> </ul> </li> </ul> <p>A functional dependency is trivial if it is satisfied by all relations. \u5168\u96c6\u53ef\u4ee5\u51b3\u5b9a\u5b50\u96c6\u3002 In general, \\(\\alpha\\rightarrow \\beta\\) is trivial if \\(\\beta\\subseteq \\alpha\\)</p>"},{"location":"DB/DB8/#closure","title":"Closure(\u95ed\u5305)","text":""},{"location":"DB/DB8/#closure-of-a-set-of-functional-dependencies","title":"Closure of a Set of Functional Dependencies","text":"<p>Given a set \\(F\\) of functional dependencies, there are certain other functional dependencies that are logically implied by \\(F\\). The set of all functional dependencies logically implied by \\(F\\) is the closure of \\(F\\). We denote the closure of \\(F\\) by \\(F^+\\). (\u80fd\u591f\u4ece\u7ed9\u5b9a\u7684\u96c6\u5408\\(F\\)\u63a8\u5bfc\u51fa\u7684\u6240\u6709\u51fd\u6570\u4f9d\u8d56\u7684\u96c6\u5408)</p> <p>e.g. \\(F=\\{A\\rightarrow B,B\\rightarrow C\\}\\) then \\(F^+=\\{A\\rightarrow B, B\\rightarrow C, A\\rightarrow C, AB\\rightarrow B, AB\\rightarrow C,\\ldots\\}\\)</p> <p>We can find \\(F^+\\), the closure of \\(F\\), by repeatedly applying Armstrong\u2019s Axioms:</p> <ul> <li>if \\(\\beta\\subseteq \\alpha\\) then \\(\\alpha \\rightarrow \\beta\\) (reflexivity, \u81ea\u53cd\u5f8b)</li> <li>if \\(\\alpha\\rightarrow \\beta\\) then \\(\\gamma \\alpha \\rightarrow \\gamma \\beta\\) (augmentation, \u589e\u8865\u5f8b)</li> <li>if \\(\\alpha\\rightarrow \\beta\\) and \\(\\beta \\rightarrow \\gamma\\) then \\(\\alpha\\rightarrow \\gamma\\) (transitivity, \u4f20\u9012\u5f8b)</li> </ul> <p>These rules are </p> <ul> <li>Sound\uff08\u6b63\u786e\u6709\u6548\u7684\uff09 generate only functional dependencies that actually hold</li> <li>Complete\uff08\u5b8c\u5907\u7684\uff09 generate all functional dependencies that hold</li> </ul> <p>Example</p> <p> </p> <p>Additional rules:</p> <ul> <li>If \\(\\alpha\\rightarrow \\beta\\) holds and \\(\\alpha\\rightarrow \\gamma\\) holds,  then \\(\\alpha\\rightarrow \\beta\\gamma\\) holds (union, \u5408\u5e76)</li> <li>If \\(\\alpha\\rightarrow \\beta\\gamma\\) holds, then \\(\\alpha\\rightarrow \\beta\\) holds and \\(\\alpha\\rightarrow \\gamma\\) holds (decomposition, \u5206\u89e3)</li> <li>If \\(\\alpha\\rightarrow \\beta\\) holds and \\(\\gamma \\beta\\rightarrow \\delta\\) holds, then \\(\\alpha \\gamma\\rightarrow \\delta\\) holds (pseudotransitivity\uff0c\u4f2a\u4f20\u9012)</li> </ul> <p>Example</p> <p> </p> <p>\u51fd\u6570\u4f9d\u8d56\uff0c\u53f3\u8fb9\u7684\u516c\u5171\u5c5e\u6027\u53ef\u4ee5\u53bb\u6389\uff0c\u4f7f\u5f97\u51fd\u6570\u53cc\u65b9\u6ca1\u6709\u4ea4\u96c6\u3002</p>"},{"location":"DB/DB8/#closure-of-attribute-sets","title":"Closure of Attribute Sets(\u5c5e\u6027\u96c6\u7684\u95ed\u5305)","text":"<p>Given a set of attributes \\(a\\), define the closure of a under \\(F\\) (denoted by \\(a+\\)) as the set of attributes that are functionally determined by \\(a\\) under \\(F\\) </p> Example <p> </p>"},{"location":"DB/DB8/#uses-of-attribute-closure","title":"Uses of Attribute Closure","text":"<ul> <li>Testing for superkey:(\u5224\u65ad\u662f\u5426\u4e3a\u8d85\u7801\uff0c\u5982\u679c\u662f\uff0c\u5219\\(a^+\\)\u4e2d\u5305\u542b\u6240\u6709\u5c5e\u6027) To test if \\(\\alpha\\) is a superkey, we compute \\(\\alpha+\\), and check if \\(\\alpha+\\) contains all attributes of \\(R\\).</li> <li>Testing functional dependencies<ul> <li>To check if a functional dependency \\(\\alpha\\rightarrow \\beta\\) holds (or, in other words, is in \\(F+\\)), just check if \\(\\beta\\subseteq\\alpha+\\). </li> <li>That is, we compute \\(\\alpha+\\) by using attribute closure, and then check if it contains \\(\\beta\\).\u68c0\u67e5\u67d0\u4e2a\u5c5e\u6027\u662f\u4e2a\u5426\u5c5e\u4e8e\u8fd9\u4e2a\u95ed\u5305</li> <li>Is a simple and cheap test, and very useful</li> </ul> </li> <li>Computing closure of F For each \\(\\gamma\\subseteq R\\), we find the closure \\(\\gamma+\\), and for each \\(S \\subseteq \\gamma+\\), we output a functional dependency \\(\\gamma\\rightarrow  S\\).  </li> </ul> Example"},{"location":"DB/DB8/#canonical-cover","title":"Canonical Cover\uff08\u6b63\u5219\u8986\u76d6\uff09","text":"<ul> <li>\u51fd\u6570\u4f9d\u8d56\u662f\u6700\u7b80\u5355\u7684\u5f62\u5f0f\uff0c\u4e0d\u5b58\u5728\u5197\u4f59\u7684\u51fd\u6570\u4f9d\u8d56\u3002\uff08\u56e0\u4e3a\u8981\u7528\u4e8e\u68c0\u67e5\u63d2\u5165\u7684\u6570\u636e\u662f\u5426\u4f1a\u8fdd\u53cd\u51fd\u6570\u4f9d\u8d56\uff09</li> <li>\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u53bb\u9664\u51fd\u6570\u4f9d\u8d56\u7684\u4e00\u4e2a\u5c5e\u6027\u800c\u4e0d\u6539\u53d8\u5176\u95ed\u5305\uff0c\u5219\u79f0\u8be5\u5c5e\u6027\u662f\u65e0\u5173\u7684</li> <li>\u4ece\u51fd\u6570\u4f9d\u8d56\u7684\u5de6\u4fa7\u5220\u9664\u4e00\u4e2a\u5c5e\u6027\u53ef\u4ee5\u4f7f\u5176\u6210\u4e3a\u66f4\u5f3a\u7684\u7ea6\u675f</li> <li>\u4ece\u51fd\u6570\u4f9d\u8d56\u7684\u53f3\u4fa7\u5220\u9664\u4e00\u4e2a\u5c5e\u6027\u53ef\u4ee5\u4f7f\u5176\u6210\u4e3a\u66f4\u5f31\u7684\u7ea6\u675f</li> </ul> <p>a canonical cover of F is a \u201cminimal\u201d set of functional dependencies equivalent to F, having no redundant dependencies or redundant parts of dependencies.  </p> Example <p> </p> <p>A canonical cover for \\(F\\) is a set of dependencies Fc such that </p> <ul> <li>\\(F\\) logically implies all dependencies in \\(F_c\\)</li> <li>\\(F_c\\) logically implies all dependencies in \\(F\\)</li> <li>No functional dependency in \\(F_c\\) contains an extraneous attribute</li> <li>Each left side of functional dependency in \\(F_c\\) is unique.</li> </ul> <p>How to find the extraneous attribute(\u65e0\u5173\u5c5e\u6027)</p> <ul> <li>\u4ece\u5de6\u4fa7\u5220\u9664\uff1a\u5982\u679c\\(A \\in \\alpha\\)\uff0c\u4e14\\(F\\)\u903b\u8f91\u8574\u542b\\((F-\\{\\alpha \\rightarrow \\beta\\}) \\cup  \\{(\\alpha-A) \\rightarrow \\beta \\}\\) </li> <li>\u4ece\u53f3\u4fa7\u5220\u9664\uff1a\u5982\u679c\\(A \\in \\beta\\)\uff0c\u4e14\\(F\\)\u903b\u8f91\u8574\u542b\\((F-\\{\\alpha \\rightarrow \\beta\\}) \\cup  \\{\\alpha \\rightarrow (\\beta - A) \\}\\) </li> </ul> <p>Computing a Canonical Cover</p> <p> </p>"},{"location":"DB/DB8/#normal-form","title":"Normal Form(\u8303\u5f0f)","text":""},{"location":"DB/DB8/#boyce-codd-normal-form","title":"Boyce-Codd Normal Form","text":"<p>\u6d88\u9664\u4e86\u57fa\u4e8e\u51fd\u6570\u4f9d\u8d56\u80fd\u591f\u53d1\u73b0\u7684\u5168\u90e8\u5197\u4f59\uff0c\u867d\u7136\u53ef\u80fd\u8fd8\u4fdd\u7559\u7740\u5176\u5b83\u7c7b\u578b\u7684\u5197\u4f59</p> <p>A relation schema \\(R\\) is in BCNF with respect to a set \\(F\\) of functional  dependencies if for all functional dependencies in \\(F^+\\) of the form where \\(\\alpha \\subseteq R\\) and \\(\\beta \\subseteq R\\), at least one of the following holds  </p> <ul> <li>\\(\\alpha \\rightarrow \\beta\\) is trivial</li> <li>\\(\\alpha\\) is a superkey for \\(R\\).</li> </ul> <p>\u4efb\u4f55\u975e\u5e73\u51e1\u7684\u51fd\u6570\u4f9d\u8d56\u7684\u5de6\u8fb9\u90fd\u662f\u4e00\u4e2a key.  </p>"},{"location":"DB/DB8/#decomposing-a-schema-into-bcnf","title":"Decomposing a Schema into BCNF","text":"<p>\u5bf9\u4e8e\u4e0d\u662f key \u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u5c31\u628a\u5b83\u5206\u89e3\u51fa\u6765\u4f5c\u4e3a\u5355\u72ec\u7684\u5173\u7cfb\u6a21\u5f0f\u3002 Suppose we have a schema \\(R\\) and a non-trivial dependency \\(\\alpha\\rightarrow \\beta\\) causes a violation of BCNF. We decompose \\(R\\) into: \\((\\alpha \\cup \\beta)\\) and \\((R-(\\beta-\\alpha))\\) \\(\\alpha\\) \u4f5c\u4e3a\u4e24\u4e2a\u5173\u7cfb\u6a21\u5f0f\u7684\u516c\u5171\u5c5e\u6027\uff0c\u4e5f\u662f\u4e00\u4e2a\u5173\u7cfb\u7684 key, \u8fd9\u6837\u624d\u662f\u65e0\u635f\u5206\u89e3\u3002</p> Example <p></p>"},{"location":"DB/DB8/#dependency-preservation","title":"Dependency Preservation","text":"<p>\u4f9d\u8d56\u4fdd\u6301\uff1a\u539f\u6765\u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u90fd\u53ef\u4ee5\u5728\u5206\u89e3\u540e\u7684\u51fd\u6570\u4f9d\u8d56\u4e2d\u5f97\u5230\u5355\u72ec\u68c0\u9a8c\u3002\u5426\u5219\u9700\u8981\u628a\u51e0\u4e2a\u5173\u7cfb\u8fde\u63a5\u5728\u4e00\u8d77\u624d\u80fd\u68c0\u9a8c\u4f9d\u8d56\u7684\uff0c\u79f0\u4e3a\u4f9d\u8d56\u4e0d\u4fdd\u6301\u3002</p> <p>Constraints, including functional dependencies, are costly to check in practice unless they pertain to only one relation.  </p> <p>If it is sufficient to test only those dependencies on each individual relation of a decomposition in order to ensure that all functional dependencies hold, then that decomposition is dependency preserving (\u4fdd\u6301\u4f9d\u8d56). \uff08\u5982\u679c\u901a\u8fc7\u68c0\u9a8c\u5355\u4e00\u5173\u7cfb\u4e0a\u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u5c31\u80fd\u786e\u4fdd\u6240\u6709\u7684\u51fd\u6570\u4f9d\u8d56\u6210\u7acb\uff0c\u90a3\u4e48\u8fd9\u6837\u7684\u5206\u89e3\u662f\u4f9d\u8d56\u4fdd\u6301\u7684\uff09 \uff08\u6216\u8005\uff0c\u539f\u6765\u5173\u7cfbR\u4e0a\u7684\u6bcf\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56\uff0c\u90fd\u53ef\u4ee5\u5728\u5206\u89e3\u540e\u7684\u5355\u4e00\u5173\u7cfb\u4e0a\u5f97\u5230\u68c0\u9a8c\u6216\u8005\u63a8\u5bfc\u5f97\u5230\u3002\uff09 Because it is not always possible to achieve both BCNF and dependency preservation, we consider a weaker normal form, known as third normal form.</p> <p>Let \\(F_i\\) be the set of all functional dependencies in \\(F^+\\) that include only attributes in \\(R_i\\). (\\(F_i\\):  the restriction of \\(F\\) on \\(R_i\\))</p> <ul> <li>A decomposition is dependency preserving, if \\((F_1\\cup F_2 \\cup \\ldots \\cup F_n )^+ = F^+\\)</li> <li>If it is not, then checking updates for violation of functional dependencies may require computing joins, which is expensive.</li> </ul> Example <p> </p> Example <p> </p>"},{"location":"DB/DB8/#third-normal-form","title":"Third Normal Form","text":"<p>\u4efb\u4f55\u4e00\u4e2a\u975e\u5e73\u51e1\u51fd\u6570\u4f9d\u8d56\uff0c\u5982\u679c\u5de6\u8fb9\u4e0d\u662f\u4e00\u4e2a super key, \u90a3\u4e48\u53f3\u8fb9\u5fc5\u987b\u5305\u542b\u5728\u4e00\u4e2a candidate key \u91cc\u9762\u3002</p> <p>A relation schema \\(R\\) is in third normal form (3NF) if for all: $\\alpha\\rightarrow \\beta $ in \\(F^+\\) at least one of the following holds:</p> <ul> <li>\\(\\alpha\\rightarrow \\beta\\) is trivial (i.e., \\(\\beta \\in \\alpha\\))</li> <li>\\(\\alpha\\) is a superkey for R</li> <li>Each attribute A in \\(\\beta-\\alpha\\) is contained in a candidate key for \\(R\\). \u5019\u9009\u7801\u6709\u5f88\u591a\u4e2a\uff0c\u5305\u542b\u5728\u67d0\u4e00\u4e2a\u5019\u9009\u7801\u5373\u53ef\u3002  </li> </ul> Example <p> </p> <p>Goals of Normalization</p> <p>In the case that a relation scheme R is not in \u201cgood\u201d form, decompose it into a set of relation scheme  \\(\\{R_1, R_2, \\ldots, R_n\\}\\) such that </p> <ul> <li>each relation scheme is in good form (i.e., BCNF or 3NF)</li> <li>the decomposition is a lossless-join decomposition</li> <li>Preferably, the decomposition should be dependency preserving</li> </ul> <p>E-R Modeling and Normal Forms</p> <p> </p> <p>\u8fd9\u91cc\u7684\u65e0\u635f\u5206\u89e3\uff0c\u5148\u6307\u5b9a\u4e00\u4e2a\u8def\u5f84\uff0c\u8003\u8651\u6bcf\u4e24\u4e2a\u5173\u7cfb\u76f4\u63a5\u662f\u5426\u65e0\u635f\uff08\u516c\u5171\u5c5e\u6027\u662f\u5426\u4e3a\u5176\u4e2d\u4e00\u4e2a\u5173\u7cfb\u7684 key\uff09\u3002</p> <p>3NF\u7684\u7f3a\u70b9\uff1a\u53ef\u80fd\u4e0d\u5f97\u4e0d\u7528\u7a7a\u503c\u6765\u8868\u8fbe\u6570\u636e\u9879\u4e4b\u95f4\u7684\u67d0\u4e9b\u53ef\u80fd\u6709\u610f\u4e49\u7684\u8054\u7cfb\uff0c\u5e76\u4e14\u5b58\u5728\u4fe1\u606f\u91cd\u590d\u7684\u95ee\u9898\u3002</p>"},{"location":"DB/DB8/#multivalued-dependencies","title":"Multivalued Dependencies","text":"<p>There are database schemas in BCNF that do not seem to be sufficiently normalized.  </p> <p>Example</p> <p> </p> <p>\u5b58\u5728\u4e24\u79cd\u4e0d\u76f8\u5173\u7684\u591a\u503c\u4f9d\u8d56\u3002\u8001\u5e08 id \u53ef\u4ee5\u591a\u503c\u51b3\u5b9a child_name, \u53c8\u53ef\u4ee5\u591a\u503c\u51b3\u5b9a phone, \u4f46\u8fd9\u4e24\u4e2a\u5c5e\u6027\u662f\u4e0d\u76f8\u5173\u7684\uff0c\u653e\u5728\u4e00\u4e2a\u8868\u91cc\u5c31\u4f1a\u7ec4\u5408\u3002 \u7b2c\u4e8c\u5f20\u56fe\u7684\u4e3a Fourth Normal Form (4NF).</p> <p>\u56db\u8303\u5f0f\uff1a\u4e0d\u5b58\u5728\u975e\u5e73\u51e1\u7684\u591a\u503c\u4f9d\u8d56\u3002</p> <p>Let R be a relation schema and let \\(\\alpha\\subset R\\) and \\(\\beta\\subset R\\). The multivalued dependency \\(\\alpha\\rightarrow\\rightarrow\\beta\\) holds on \\(R\\) if in any legal relation \\(r(R)\\), for all pairs for tuples \\(t_1\\) and \\(t_2\\) in \\(r\\) such that \\(t_1[\\alpha] = t_2 [\\alpha]\\), there exist tuples \\(t_3\\) and \\(t_4\\) in \\(r\\) such that: </p> \\[ t_3[\\alpha] = t_4[\\alpha] = t_1[\\alpha]=t_2[\\alpha]\\\\ t_3[\\beta]=t_1[\\beta]\\\\ t_3[R-\\beta]=t_2[R-\\beta]\\\\ t_4[\\beta]=t_2[\\beta]\\\\ t_4[R-\\beta]=t_1[R-\\beta] \\] <p>A relation schema \\(R\\) is in 4NF with respect to a set \\(D\\) of functional and multivalued dependencies if for all multivalued dependencies in \\(D^+\\) of the form \\(\\alpha\\rightarrow \\rightarrow \\beta\\), where \\(\\alpha\\subset R\\) and \\(\\beta\\subset R\\), at least one of the following hold:</p> <ul> <li>\\(\\alpha\\rightarrow \\rightarrow \\beta\\) is trivial (i.e., \\(\\beta \\subset \\alpha\\) or \\(\\alpha \\cup \\beta= R\\))   \u5373\u9664\u4e86 \\(\\alpha,\\beta\\) \u4e3a\u6ca1\u6709\u5176\u4ed6\u5c5e\u6027\u3002</li> <li>\\(\\alpha\\) is a superkey for schema \\(R\\)</li> </ul> <p>\u4efb\u4f55\u4e00\u4e2a\u591a\u503c\u4f9d\u8d56\uff0c\u8981\u4e48\u5de6\u8fb9\u5c31\u662f\u4e2a key, \u8981\u4e48\u8fd9\u4e2a\u4f9d\u8d56\u662f\u5e73\u51e1\u7684\u3002</p> E-R Modeling and Normal Forms <p> </p> <p>\u4e0d\u662f BCNF, \u56e0\u6b64\u4e5f\u4e0d\u662f 4NF. </p>"},{"location":"DB/DB8/#overall-database-design-process","title":"Overall Database Design Process","text":"<p>Denormalization for Performance</p> <p>Some aspects of database design are not caught by normalization. \u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u5f15\u5165\u5197\u4f59\uff0c\u6765\u4fdd\u6301\u6027\u80fd\u3002</p> <p>Example</p> <p> </p>"},{"location":"DB/DB9/","title":"Chapter 9 Classification of Physical Storage Media","text":"<p>Abstract</p> <ul> <li>Storage Hierarchy </li> <li>Magnetic Disks</li> <li>Disk Interface Standards</li> <li>Performance Measures of Disks</li> <li>Optimization of Disk-Block Access</li> <li>Flash Storage &amp; SSD</li> <li>Storage Class Memory(NVM)</li> </ul>"},{"location":"DB/DB9/#classification-of-physical-storage-media","title":"Classification of Physical Storage Media","text":"<ul> <li>Can differentiate storage into:<ul> <li>volatile storage(\u6613\u5931\u5b58\u50a8): loses contents when power is switched off</li> <li>non-volatile storage\uff08\u975e\u6613\u5931\u5b58\u50a8\uff09:<ul> <li>Contents persist even when power is switched off.</li> <li>Includes secondary and tertiary storage, as well as batter-    backed up main-memory.</li> </ul> </li> </ul> </li> <li>Speed with which data can be accessed</li> <li>Cost per unit of data</li> <li>Reliability<ul> <li>data loss on power failure or system crash</li> <li>physical failure of the storage device</li> </ul> </li> </ul>"},{"location":"DB/DB9/#storage-hierarchy","title":"Storage Hierarchy\uff08\u5b58\u50a8\u7ea7\u522b\uff09","text":"<ul> <li>primary storage: Fastest media but volatile (cache, main memory).</li> <li>secondary storage: next level in hierarchy, non-volatile, moderately fast access time<ul> <li>also called on-line storage </li> <li>E.g. flash memory, magnetic disks</li> </ul> </li> <li>tertiary storage: lowest level in hierarchy, non-volatile, slow access time<ul> <li>also called off-line storage </li> <li>E.g. magnetic tape, optical storage</li> </ul> </li> </ul>"},{"location":"DB/DB9/#magnetic-disks","title":"Magnetic Disks(\u78c1\u76d8)","text":"<ul> <li>Read-write head(\u8bfb\u5199\u5934)<ul> <li>Positioned very close to the platter surface (almost touching it)</li> <li>Reads or writes magnetically encoded information.</li> </ul> </li> <li>Surface of platter divided into circular tracks\uff08\u78c1\u9053\uff09<ul> <li>Over 50K-100K tracks per platter on typical hard disks</li> </ul> </li> <li>Each track is divided into sectors\uff08\u6247\u533a\uff09.  <ul> <li>A sector is the smallest unit of data that can be read or written.</li> <li>Sector size typically 512 bytes</li> <li>Typical sectors per track: 500 to 1000 (on inner tracks) to 1000 to 2000 (on outer tracks)</li> </ul> </li> <li>To read/write a sector<ul> <li>disk arm swings to position head on right track</li> <li>platter spins continually; data is read/written as sector passes under head</li> </ul> </li> <li>Head-disk assemblies <ul> <li>multiple disk platters on a single spindle (1 to 5 usually)</li> <li>one head per platter, mounted on a common arm.</li> </ul> </li> <li>Cylinder\uff08\u67f1\u9762\uff09 i consists of ith track of all the platters</li> <li>Disk controller(\u78c1\u76d8\u63a7\u5236\u5668) \u2013 interfaces between the computer system and the disk drive hardware.<ul> <li>accepts high-level commands to read or write a sector </li> <li>initiates actions such as moving the disk arm to the right track and actually reading or writing the data</li> <li>Computes and attaches checksums to each sector to verify that data is read back correctly<ul> <li>If data is corrupted, with very high probability stored checksum won\u2019t match recomputed checksum</li> </ul> </li> <li>Ensures successful writing by reading back sector after writing it</li> <li>Performs remapping of bad sectors</li> </ul> </li> </ul>"},{"location":"DB/DB9/#performance-measures-of-disks","title":"Performance Measures of Disks","text":"<ul> <li>Access time(\u8bbf\u95ee\u65f6\u95f4)\u2013 the time it takes from when a read or write request is issued to when data transfer begins.  Consists of: <ul> <li>Seek time\uff08\u5bfb\u9053\u65f6\u95f4\uff09 \u2013 time it takes to reposition the arm over the correct track. (\u78c1\u76d8\u81c2\u91cd\u5b9a\u4f4d)<ul> <li>Average seek time is \u00bd the worst case seek time.</li> <li>4 to 10 milliseconds on typical disks</li> </ul> </li> <li>Rotational latency \uff08\u65cb\u8f6c\u5ef6\u8fdf\uff09\u2013 time it takes for the sector to be accessed to appear under the head. <ul> <li>Average latency is \u00bd of the worst case latency.</li> <li>4 to 11 milliseconds on typical disks (5400 to 15000 r.p.m.)</li> </ul> </li> </ul> </li> <li>Data-transfer rate\uff08\u6570\u636e\u4f20\u8f93\u7387\uff09 \u2013 the rate at which data can be retrieved from or stored to the disk.<ul> <li>25 to 100 MB per second max rate, lower for inner tracks</li> <li>Multiple disks may share a controller, so rate that controller can handle is also important<ul> <li>E.g. SATA: 150 MB/sec, SATA-II 3Gb (300 MB/sec)</li> <li>Ultra 320 SCSI: 320 MB/s, SAS (3 to 6 Gb/sec)</li> <li>Fiber Channel (FC2Gb or 4Gb): 256 to 512 MB/s</li> </ul> </li> </ul> </li> <li>Disk block is a logical unit for storage allocation and retrieval<ul> <li>4 to 16 kilobytes typically<ul> <li>Smaller blocks: more transfers from disk</li> <li>Larger blocks:  more space wasted due to partially filled blocks</li> </ul> </li> </ul> </li> <li>Sequential access pattern(\u987a\u5e8f\u8bbf\u95ee\u6a21\u5f0f)<ul> <li>Successive requests are for successive disk blocks</li> <li>Disk seek required only for first block</li> </ul> </li> <li>Random access pattern\uff08\u968f\u673a\u8bbf\u95ee\u6a21\u5f0f\uff09<ul> <li>Successive requests are for blocks that can be anywhere on disk</li> <li>Each access requires a seek</li> <li>Transfer rates are low since a lot of time is wasted in seeks</li> </ul> </li> <li>I/O operations per second (IOPS \uff0c\u6bcf\u79d2I/O\u64cd\u4f5c\u6570)<ul> <li>Number of random block reads that a disk can support per second</li> <li>50 to 200 IOPS on current generation magnetic disks</li> </ul> </li> <li>Mean time to failure (MTTF\uff0c\u5e73\u5747\u6545\u969c\u65f6\u95f4) \u2013 the average time the disk is expected to run continuously without any failure.<ul> <li>Typically 3 to 5 years</li> <li>Probability of failure of new disks is quite low, corresponding to a \u201ctheoretical MTTF\u201d of 500,000 to 1,200,000 hours \uff0857 to 136 years\uff09for a new disk</li> <li>An MTTF of 1,200,000 hours for a new disk means that given 1000 relatively new disks, on an average one will fail every 1200 hours(50 days)</li> <li>MTTF decreases as disk ages</li> </ul> </li> </ul>"},{"location":"DB/DB9/#optimization-of-disk-block-access","title":"Optimization of Disk-Block Access","text":"<ul> <li>Buffering: in-memory buffer to cache disk blocks</li> <li>Read-ahead(Prefetch): Read extra blocks from a track in anticipation that they will be requested soon</li> <li>Disk-arm-scheduling algorithms re-order block requests so that disk arm movement is minimized <ul> <li>elevator algorithm</li> </ul> </li> </ul> <ul> <li>File organization<ul> <li>Allocate blocks of a file in as contiguous a manner as possible</li> <li>Allocation in units of extents (\u76d8\u533a\uff09</li> <li>Files may get fragmented<ul> <li>E.g., if free blocks on disk are scattered, and newly created file has its blocks scattered over the disk</li> <li>Sequential access to a fragmented file results in increased disk arm movement</li> <li>Some systems have utilities to defragment the file system, in order to speed up file access</li> </ul> </li> </ul> </li> <li>Nonvolatile write buffers \uff08\u975e\u6613\u5931\u6027\u5199\u7f13\u5b58\uff09 \u2013 speed up disk writes by writing blocks to a non-volatile RAM buffer immediately<ul> <li>Non-volatile RAM:  battery backed up RAM or flash memory<ul> <li>Even if power fails, the data is safe and will be written to disk when power returns</li> </ul> </li> <li>Controller then writes to disk whenever the disk has no other requests or request has been pending for some time</li> <li>Database operations that require data to be safely stored before continuing can continue without waiting for data to be written to disk</li> <li>Writes can be reordered to minimize disk arm movement</li> </ul> </li> <li>Log disk\uff08\u65e5\u5fd7\u78c1\u76d8\uff09 \u2013 a disk  devoted to writing a sequential log of block updates<ul> <li>Used exactly like nonvolatile RAM<ul> <li>Write to log disk is very fast since no seeks are required</li> <li>No need for special hardware (NV-RAM)</li> </ul> </li> </ul> </li> </ul>"},{"location":"DB/DB9/#flash-storage","title":"Flash Storage","text":"<ul> <li>NAND flash - used widely for storage, cheaper than NOR flash<ul> <li>requires page-at-a-time read (page: 512 bytes to 4 KB)<ul> <li>Not much difference between sequential and random read</li> </ul> </li> <li>Page can only be written once<ul> <li>Must be erased to allow rewrite</li> </ul> </li> </ul> </li> <li>SSD(Solid State Disks) <ul> <li>Use standard block-oriented disk interfaces, but store data on multiple flash storage devices internally</li> </ul> </li> </ul> <ul> <li>Erase happens in units of erase block <ul> <li>Takes 2 to 5 milliseconds</li> <li>Erase block typically 256 KB to 1 MB (128 to 256 pages)</li> <li>After 100,000 to 1,000,000 erases, erase block becomes unreliable and cannot be used</li> </ul> </li> <li>Remapping of logical page addresses to physical page addresses avoids waiting for erase</li> <li> <p>Flash translation table tracks mapping</p> <ul> <li>also stored in a label field of flash page</li> <li>remapping carried out by flash translation layer </li> </ul> </li> <li> <p>wear leveling(\u78e8\u635f\u5747\u8861)- evenly distributed erase operators across physical blocks</p> </li> </ul>"},{"location":"DB/DB9/#storage-class-memorynvm","title":"Storage Class Memory(NVM)","text":"<ul> <li>3D-XPoint memory technology pioneered by Intel</li> <li>Available as Intel Optane<ul> <li>SSD interface shipped from 2017<ul> <li>Allows lower latency than flash SSDs</li> </ul> </li> <li>Non-volatile memory interface announced in 2018<ul> <li>Supports direct access to words, at speeds comparable to main-memory speeds</li> </ul> </li> </ul> </li> </ul>"},{"location":"LCD/","title":"\u8ba1\u7b97\u673a\u903b\u8f91\u4e0e\u8bbe\u8ba1","text":"<p>\u672c\u7b14\u8bb0\u6765\u81eanorangehere,\u672c\u4eba\u6574\u7406\u65f6\u4e3b\u8981\u9762\u5411\u5e94\u8bd5</p> <p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u8ba1\u7b97\u673a\u903b\u8f91\u4e0e\u8bbe\u8ba1\u201d \u8bfe\u7a0b\u53ca\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <p>Success</p> <ul> <li> Chapter 1 Logic and Digital System</li> <li> Chapter 2 Combinational Logic Circuits </li> </ul>"},{"location":"MISC/bit/","title":"HDL bit\u505a\u9898\u8bb0\u5f55","text":""},{"location":"MISC/bit/#getting-started","title":"Getting Started","text":""},{"location":"MISC/bit/#getting-started_1","title":"Getting Started","text":"<pre><code>module top_module( output one );\n\n    assign one = 1'b1;\n\nendmodule\n</code></pre>"},{"location":"MISC/bit/#output-zero","title":"Output Zero","text":"<pre><code>module top_module ( output zero );\n\n    assign zero = 1'b0;\n\nendmodule\n</code></pre>"},{"location":"MISC/bit/#verilog-language","title":"Verilog Language","text":""},{"location":"MISC/bit/#basics","title":"Basics","text":""},{"location":"MISC/bit/#simple-wire","title":"Simple Wire","text":"<pre><code>module top_module( input in, output out );\n    assign out = in;\nendmodule\n</code></pre>"},{"location":"MISC/bit/#four-wires","title":"Four wires","text":"<pre><code>module top_module (\n    input a,\n    input b,\n    input c,\n    output w,\n    output x,\n    output y,\n    output z  );\n\n    assign w = a;\n    assign x = b;\n    assign y = b;\n    assign z = c;\n\n    // If we're certain about the width of each signal, using \n    // the concatenation operator is equivalent and shorter:\n    // assign {w,x,y,z} = {a,b,b,c};\n\nendmodule\n</code></pre>"},{"location":"MISC/bit/#inverter","title":"Inverter","text":"<pre><code>module top_module( input in, output out );\n    assign out = ~in;\nendmodule\n</code></pre>"},{"location":"MISC/bit/#and-gate","title":"AND gate","text":"<pre><code>module top_module( \n    input a, \n    input b, \n    output out );\n    assign out = a &amp; b;\nendmodule\n</code></pre>"},{"location":"MISC/bit/#nor-gate","title":"NOR gate","text":"<pre><code>module top_module( \n    input a, \n    input b, \n    output out );\n    assign out = ~(a|b);\nendmodule\n</code></pre>"},{"location":"MISC/bit/#xnor-gate","title":"XNOR gate","text":"<pre><code>module top_module( \n    input a, \n    input b, \n    output out );\n    assign out = ~(a^b);\nendmodule\n</code></pre>"},{"location":"MISC/bit/#declaring-wire","title":"Declaring wire","text":"<pre><code>`default_nettype none\nmodule top_module(\n    input a,\n    input b,\n    input c,\n    input d,\n    output out,\n    output out_n   ); \n    assign out = (a&amp;b)|(c&amp;d);\n    assign out_n = ~out;\nendmodule\n</code></pre>"},{"location":"MISC/bit/#7458-chip","title":"7458 chip","text":"<pre><code>module top_module ( \n    input p1a, p1b, p1c, p1d, p1e, p1f,\n    output p1y,\n    input p2a, p2b, p2c, p2d,\n    output p2y );\n    assign p1y = (p1a&amp;p1b&amp;p1c)|(p1d&amp;p1e&amp;p1f);\n    assign p2y = (p2a&amp;p2b)|(p2c&amp;p2d);\nendmodule\n</code></pre>"},{"location":"MISC/bit/#vectors","title":"Vectors","text":""},{"location":"MISC/bit/#vectors_1","title":"Vectors","text":"<pre><code>module top_module(\n    input [2:0] vec, \n    output [2:0] outv,\n    output o2,\n    output o1,\n    output o0\n);\n\n    assign outv = vec;\n\n    // This is ok too: assign {o2, o1, o0} = vec;\n    assign o0 = vec[0];\n    assign o1 = vec[1];\n    assign o2 = vec[2];\n\nendmodule\n</code></pre>"},{"location":"MISC/bit/#vectors-in-more-detail","title":"Vectors in more detail","text":"<pre><code>module top_module( \n    input wire [15:0] in,\n    output wire [7:0] out_hi,\n    output wire [7:0] out_lo );\n    assign out_hi = in[15:8];\n    assign out_lo = in[7:0];\nendmodule\n</code></pre>"},{"location":"MISC/bit/#vectors-part-select","title":"Vectors part select","text":"<pre><code>module top_module (\n    input [31:0] in,\n    output [31:0] out\n);\n    assign out[31:24] = in[ 7: 0];  \n    assign out[23:16] = in[15: 8];  \n    assign out[15: 8] = in[23:16];  \n    assign out[ 7: 0] = in[31:24];      \nendmodule\n</code></pre>"},{"location":"MISC/bit/#bitwise-operators","title":"Bitwise operators","text":"<pre><code>module top_module( \n    input [2:0] a,\n    input [2:0] b,\n    output [2:0] out_or_bitwise,\n    output out_or_logical,\n    output [5:0] out_not\n);\n    assign out_or_bitwise = a | b;\n    assign out_or_logical = a || b;\n\n    //assign out_not[2:0] = ~a; \n    //assign out_not[5:3] = ~b; \n    assign out_not = ~{b,a};\nendmodule\n</code></pre>"},{"location":"MISC/bit/#four-input-gates","title":"Four-input gates","text":"<pre><code>module top_module( \n    input [3:0] in,\n    output out_and,\n    output out_or,\n    output out_xor\n);\n    assign out_xor = ^in;\n    assign out_or = | in;\n    assign out_and = &amp; in;\nendmodule\n</code></pre>"},{"location":"MISC/bit/#vector-concatenation-operator","title":"Vector concatenation operator","text":"<pre><code>module top_module (\n    input [4:0] a, b, c, d, e, f,\n    output [7:0] w, x, y, z );//\n\n    // assign { ... } = { ... };\n    assign {w, x, y, z} = {a, b, c, d, e, f, 2'b11};\nendmodule\n</code></pre>"},{"location":"MISC/bit/#vertor-reversal-1","title":"Vertor reversal 1","text":"<pre><code>module top_module( \n    input [7:0] in,\n    output [7:0] out\n); \n    integer i;\n    always @* begin\n        for(i = 0; i &lt;= 7; i = i + 1) begin\n            out[i] = in[7-i];        \n        end    \n    end\nendmodule\n</code></pre> <ul> <li>\u8fd9\u9898\u6211\u4e00\u5f00\u59cb\u8bef\u89e3\u4e86\u9898\u76ee\u7684\u610f\u601d\uff0c\u770b\u4e86\u4eff\u771f\u56fe\u610f\u8bc6\u5230\u4e86<code>Reverse</code>\u7684\u542b\u4e49</li> </ul>"},{"location":"MISC/bit/#replication-operator","title":"Replication operator","text":"<pre><code>module top_module (\n    input [7:0] in,\n    output [31:0] out );//\n\n    // assign out = { replicate-sign-bit , the-input };\n    assign out = {{24{in[7]}}, in};\nendmodule\n</code></pre>"},{"location":"MISC/bit/#more-replication","title":"More replication","text":"<pre><code>module top_module (\n    input a, b, c, d, e,\n    output [24:0] out );//\n\n    // The output is XNOR of two vectors created by \n    // concatenating and replicating the five inputs.\n    // assign out = ~{ ... } ^ { ... };\n    assign out = ~ {{5{a}},{5{b}},{5{c}},{5{d}},{5{e}}} ^ {5{a,b,c,d,e}};\nendmodule\n</code></pre>"},{"location":"MISC/bit/#modules-hierarchy","title":"Modules: Hierarchy","text":""},{"location":"MISC/bit/#modules","title":"Modules","text":"<pre><code>module top_module ( input a, input b, output out );\n    mod_a(a, b, out);\nendmodule\n</code></pre>"},{"location":"MISC/bit/#connecting-ports-by-position","title":"Connecting ports by position","text":"<pre><code>module top_module ( \n    input a, \n    input b, \n    input c,\n    input d,\n    output out1,\n    output out2\n);\n    mod_a(out1, out2, a, b, c, d);\nendmodule\n</code></pre>"},{"location":"MISC/bit/#connecting-ports-by-name","title":"Connecting ports by name","text":"<pre><code>module top_module ( \n    input a, \n    input b, \n    input c,\n    input d,\n    output out1,\n    output out2\n);\n    mod_a (.out1(out1), .out2(out2), .in1(a), .in2(b), .in3(c), .in4(d));\nendmodule\n</code></pre> <ul> <li>\u5728Verilog\u4e2d\uff0c\u6a21\u5757\u5b9e\u4f8b\u5316\u7684\u4e00\u822c\u8bed\u6cd5\u5982\u4e0b\uff1a</li> </ul> <pre><code>verilogCopy codemodule_top_name u1 (\n  .port1(signal1),\n  .port2(signal2),\n  // ... other ports ...\n);\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>module_top_name</code>\u662f\u8981\u5b9e\u4f8b\u5316\u7684\u6a21\u5757\u7684\u540d\u79f0\uff0c<code>u1</code>\u662f\u8be5\u5b9e\u4f8b\u7684\u540d\u79f0\u3002\u901a\u8fc7\u4e3a\u6bcf\u4e2a\u5b9e\u4f8b\u63d0\u4f9b\u552f\u4e00\u7684\u540d\u79f0\uff0c\u4f60\u53ef\u4ee5\u5728\u8bbe\u8ba1\u4e2d\u5f15\u7528\u548c\u64cd\u4f5c\u8fd9\u4e9b\u5b9e\u4f8b\u3002</p> <p>\u6b64\u5916\uff0c\u6a21\u5757\u7684\u7aef\u53e3\u4e5f\u901a\u8fc7\u540d\u79f0\u8fde\u63a5\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c<code>.port1(signal1)</code>\u8868\u793a\u5c06\u6a21\u5757 <code>module_top_name</code> \u7684 <code>port1</code> \u8fde\u63a5\u5230\u4fe1\u53f7 <code>signal1</code>\u3002\u8fd9\u6837\u7684\u547d\u540d\u548c\u8fde\u63a5\u4f7f\u5f97\u4ee3\u7801\u66f4\u52a0\u6e05\u6670\u3001\u53ef\u8bfb\uff0c\u5e76\u4e14\u51cf\u5c11\u4e86\u51fa\u9519\u7684\u53ef\u80fd\u6027\u3002</p> <p>\u603b\u4f53\u6765\u8bf4\uff0c\u547d\u540d\u6a21\u5757\u5b9e\u4f8b\u548c\u7aef\u53e3\u8fde\u63a5\u6709\u52a9\u4e8e\u5728\u8bbe\u8ba1\u4e2d\u4fdd\u6301\u7ed3\u6784\u7684\u6e05\u6670\u6027\uff0c\u63d0\u9ad8\u53ef\u7ef4\u62a4\u6027\u548c\u53ef\u8bfb\u6027\u3002</p>"},{"location":"MISC/bit/#three-modules","title":"Three modules","text":"<pre><code>module top_module ( input clk, input d, output q );\n    wire q1, q2;\n    my_dff dff1(.clk(clk), .d(d), .q(q1)),\n    dff2(.clk(clk), .d(q1), .q(q2)),\n    dff3(.clk(clk), .d(q2), .q(q));\nendmodule\n</code></pre>"},{"location":"MISC/bit/#modules-and-vectors","title":"Modules and vectors","text":"<pre><code>module top_module ( \n    input clk, \n    input [7:0] d, \n    input [1:0] sel, \n    output [7:0] q \n);\n    wire [7:0] out1, out2, out3;\n    my_dff8 dff1(clk, d, out1),\n    dff2(clk, out1, out2),\n    dff3(clk, out2, out3);\n\n    always @* begin\n        case(sel)\n            2'b00:\n                q = d;\n            2'b01:\n                q = out1;\n            2'b10:\n                q = out2;\n            2'b11:\n                q = out3;\n        endcase\n   end\nendmodule\n</code></pre>"},{"location":"MISC/bit/#adder1","title":"Adder1","text":"<pre><code>module top_module(\n    input [31:0] a,\n    input [31:0] b,\n    output [31:0] sum\n);\n    wire [15:0] out1, out2;\n    wire out;\n    add16 add1(a[15:0],b[15:0],0,out1,out),\n    add2(a[31:16],b[31:16],out, out2,);\n    assign sum = {out2, out1};\nendmodule\n</code></pre>"},{"location":"MISC/bit/#adder2","title":"Adder2","text":"<pre><code>module top_module (\n    input [31:0] a,\n    input [31:0] b,\n    output [31:0] sum\n);//\n    wire cout1;\n    add16 adder1(a[15:0], b[15:0], 0, sum[15:0], cout1),\n    adder2(a[31:16], b[31:16], cout1, sum[31:16]);\nendmodule\n\nmodule add1 ( input a, input b, input cin, output sum, output cout );\n\n// Full adder module here\n    assign {cout, sum} = a + b + cin;\nendmodule\n</code></pre>"},{"location":"MISC/bit/#carry-select-adder","title":"Carry-select adder","text":"<pre><code>module top_module(\n    input [31:0] a,\n    input [31:0] b,\n    output [31:0] sum\n); \n    wire [15:0] out0, out1;\n    wire cout0;\n    add16 low(a[15:0], b[15:0], 0, sum[15:0], cout0),\n    high0(a[31:16], b[31:16], 0, out0, ),\n    high1(a[31:16], b[31:16], 1, out1, );\n    assign sum[31:16] = cout0 ? out1:out0;\nendmodule\n</code></pre>"},{"location":"MISC/bit/#adder-subtractor","title":"Adder-subtractor","text":"<pre><code>module top_module(\n    input [31:0] a,\n    input [31:0] b,\n    input sub,\n    output [31:0] sum\n);\n    wire [31: 0]b_n ;\n    wire cout0;\n    assign b_n = b ^ {32{sub}};\n    add16 adder0(a[15:0], b_n[15:0], sub, sum[15:0], cout0),\n    adder1(a[31:16], b_n[31:16], cout0, sum[31:16]);\nendmodule\n</code></pre>"},{"location":"MISC/bit/#procedures","title":"Procedures","text":"<ul> <li>Combinational: <code>always @(*)</code></li> <li>Clocked: <code>always @(posedge clk)</code></li> </ul>"},{"location":"MISC/bit/#always-blockscombinational","title":"Always blocks(combinational)","text":"<pre><code>// synthesis verilog_input_version verilog_2001\nmodule top_module(\n    input a, \n    input b,\n    output wire out_assign,\n    output reg out_alwaysblock\n);\n    assign out_assign = a &amp; b;\n    always @(*) out_alwaysblock = a &amp; b;  \nendmodule\n</code></pre>"},{"location":"MISC/bit/#always-blocksclocked","title":"Always blocks(clocked)","text":"<pre><code>module top_module(\n    input clk,\n    input a,\n    input b,\n    output wire out_assign,\n    output reg out_always_comb,\n    output reg out_always_ff   );\n    assign out_assign = a ^ b;\n    always @(*) out_always_comb = a ^ b;\n    always @(posedge clk) out_always_ff = a ^ b;\nendmodule\n</code></pre>"},{"location":"MISC/bit/#if-statement","title":"If statement","text":"<pre><code>module top_module(\n    input a,\n    input b,\n    input sel_b1,\n    input sel_b2,\n    output wire out_assign,\n    output reg out_always   ); \n    always @(*) begin\n        if (sel_b1 &amp; sel_b2) begin\n        out_always = b;\n    end\n    else begin\n        out_always = a;\n    end\nend\n    assign out_assign = (sel_b1 &amp; sel_b2)? b : a; \nendmodule\n</code></pre> <ul> <li>The second edtion</li> </ul> <pre><code>module top_module(\n    input a,\n    input b,\n    input sel_b1,\n    input sel_b2,\n    output wire out_assign,\n    output reg out_always\n);\n\n    always @(*) begin\n        if (sel_b1 &amp; sel_b2) begin\n            out_always = b;\n            out_assign = b;\n        end\n        else begin\n            out_always = a;\n            out_assign = a;\n        end\n    end\n\nendmodule\n</code></pre>"},{"location":"MISC/bit/#if-statement-latches","title":"If statement latches","text":"<pre><code>module top_module (\n    input      cpu_overheated,\n    output reg shut_off_computer,\n    input      arrived,\n    input      gas_tank_empty,\n    output reg keep_driving  ); //\n\n    always @(*) begin\n        if (cpu_overheated)\n           shut_off_computer = 1;\n        else \n           shut_off_computer = 0;\n    end\n\n    always @(*) begin\n        if (~arrived)\n           keep_driving = ~gas_tank_empty;\n        else \n           keep_driving = 0;\n    end\n\nendmodule\n</code></pre>"},{"location":"MISC/bit/#case-statement","title":"Case statement","text":"<pre><code>module top_module ( \n    input [2:0] sel, \n    input [3:0] data0,\n    input [3:0] data1,\n    input [3:0] data2,\n    input [3:0] data3,\n    input [3:0] data4,\n    input [3:0] data5,\n    output reg [3:0] out   );//\n\n    always@(*) begin  // This is a combinational circuit\n        case(sel)\n            3'b000:  out = data0;\n            3'b001:  out = data1;\n            3'b010:  out = data2;\n            3'b011:  out = data3;\n            3'b100:  out = data4;\n            3'b101:  out = data5;\n            default: out = 0;\n        endcase\n    end\n\nendmodule\n</code></pre>"},{"location":"MISC/bit/#priority-encoder","title":"Priority encoder","text":"<pre><code>module top_module (\n    input [3:0] in,\n    output reg [1:0] pos  );\n    always @ * begin\n        casex(in)\n            4'bxxx1: pos = 2'b00;\n            4'bxx10: pos = 2'b01;\n            4'bx100: pos = 2'b10;\n            4'b1000: pos = 2'b11;\n            default: pos = 2'b00;\n        endcase\n\n    end\n\nendmodule\n</code></pre>"},{"location":"MISC/bit/#priority-encoder-with-casez","title":"Priority encoder with casez","text":"<pre><code>module top_module (\n    input [7:0] in,\n    output reg [2:0] pos );\n    always @* begin\n        casez(in)\n            8'bzzzzzzz1: pos = 3'd0;\n            8'bzzzzzz1z: pos = 3'd1;\n            8'bzzzzz1zz: pos = 3'd2;\n            8'bzzzz1zzz: pos = 3'd3;\n            8'bzzz1zzzz: pos = 3'd4;\n            8'bzz1zzzzz: pos = 3'd5;\n            8'bz1zzzzzz: pos = 3'd6;\n            8'b1zzzzzzz: pos = 3'd7;\n            default: pos = 3'd0;\n        endcase\n    end\nendmodule\n</code></pre>"},{"location":"MISC/bit/#avoiding-latches","title":"Avoiding  latches","text":"<pre><code>module top_module (\n    input [15:0] scancode,\n    output reg left,\n    output reg down,\n    output reg right,\n    output reg up  ); \n    always @ * begin\n        case(scancode)\n            16'he06b:   {left, down, right, up} = 4'b1000;\n            16'he072:   {left, down, right, up} = 4'b0100;\n            16'he074:   {left, down, right, up} = 4'b0010;\n            16'he075:   {left, down, right, up} = 4'b0001;\n            default: {left, down, right, up} = 4'b0000;\n        endcase\n    end\n\nendmodule\n</code></pre>"},{"location":"MISC/bit/#more-verilog-features","title":"More Verilog Features","text":""},{"location":"MISC/bit/#conditional-ternary-operator","title":"Conditional ternary operator","text":"<pre><code>module top_module (\n    input [7:0] a, b, c, d,\n    output [7:0] min);//\n\n    // assign intermediate_result1 = compare? true: false;\n    wire [7:0] mid1, mid2;\n    assign mid1 = (a &lt; b) ? a : b;\n    assign mid2 = (c &lt; d) ? c : d;\n    assign min = (mid1 &lt; mid2) ? mid1 : mid2;\nendmodule\n</code></pre>"},{"location":"MISC/bit/#reduction-operators","title":"Reduction operators","text":"<pre><code>module top_module (\n    input [7:0] in,\n    output parity); \n    assign parity = ^ in;\nendmodule\n</code></pre>"},{"location":"MISC/bit/#reduction-even-wider-gates","title":"Reduction : Even wider gates","text":"<pre><code>module top_module( \n    input [99:0] in,\n    output out_and,\n    output out_or,\n    output out_xor \n);\n    assign out_and = &amp; in;\n    assign out_or = | in;\n    assign out_xor = ^ in;\nendmodule\n</code></pre>"},{"location":"MISC/bit/#combinational-for-loop-vector-reversal-2","title":"Combinational for loop Vector reversal 2","text":"<pre><code>module top_module( \n    input [99:0] in,\n    output [99:0] out\n);\n    integer i;\n    always @* begin\n        for(i = 0; i&lt;=99; i = i+1)begin\n            out[i] = in[99-i];\n        end\n    end\n\nendmodule\n</code></pre>"},{"location":"MISC/bit/#combinational-for-loop-255-bit-population-count","title":"Combinational for-loop 255-bit population count","text":"<pre><code>module top_module( \n    input [254:0] in,\n    output [7:0] out );\n    integer i;\n    always @(*) begin\n        out = 1'b0;\n        for(i = 0; i &lt;= 254; i = i + 1)begin\n            out = out + in[i];\n        end\n    end\nendmodule\n</code></pre>"},{"location":"MISC/bit/#generate-for-loop-100-bit-binary-adder-2","title":"Generate for-loop: 100-bit binary adder 2","text":"<pre><code>module top_module( \n    input [99:0] a, b,\n    input cin,\n    output [99:0] cout,\n    output [99:0] sum );\n    integer i;\n    always @* begin\n        sum[0] = a[0] ^ b[0] ^ cin ;\n        cout[0] = a[0] &amp; b[0] | a[0] &amp; cin | b[0] &amp; cin ;\n        for(i = 1;i &lt;= 99; i = i+1)begin\n            sum[i] = a[i] ^ b[i] ^ cout[i-1];\n            cout[i] = a[i] &amp; b[i] | a[i] &amp; cout[i-1] | b[i] &amp; cout[i-1] ; \n        end\n    end\n\nendmodule\n</code></pre> <ul> <li>Second Edtion</li> </ul> <pre><code>module top_module( \n    input [99:0] a, b,\n    input cin,\n    output [99:0] cout,\n    output [99:0] sum );\n    integer i;\n    always@(*)begin\n        {cout[0],sum[0]} = a[0]+b[0]+cin; \n        for(i=1;i&lt; 100;i=i+1)begin\n            {cout[i],sum[i]} = a[i]+b[i]+cout[i-1];\n        end\n    end\nendmodule\n</code></pre>"},{"location":"MISC/bit/#generate-for-loop-100-digit-bcd-adder","title":"Generate for-loop: 100-digit BCD adder","text":"<pre><code>module top_module( \n    input [399:0] a, b,\n    input cin,\n    output cout,\n    output [399:0] sum );\n    wire [99:0] cout_1;\n    bcd_fadd fadd0(.a(a[3:0]), .b(b[3:0]), .cin(cin), .cout(cout_1[0]), .sum(sum[3:0]));\n    genvar i;\n    generate\n        for(i = 1; i &lt; 100; i = i + 1)\n            begin: adder1\n                bcd_fadd fadd1(.a(a[i*4+3:i*4]), .b(b[4*i+3:4*i]), .cin(cout_1[i-1]), .cout(cout_1[i]), .sum(sum[3+4*i:i*4]));\n            end\n    endgenerate\n    assign cout = cout_1[99];\nendmodule\n</code></pre> <ul> <li><code>always</code>\u662f<code>Verilog</code>\u4e2d\u7684\u4e00\u79cd\u7ed3\u6784\uff0c\u7528\u6765\u63cf\u8ff0\u4e00\u4e2a\u6c38\u4e45\u7684\u72b6\u6001\u673a\uff0c\u5176\u4e2d\u7684\u8bed\u53e5\u4f1a\u4e00\u76f4\u4fdd\u6301\u6267\u884c\uff0c\u800c<code>generate</code>\u662f\u4e00\u79cd\u53ef\u4ee5\u751f\u6210\u591a\u4e2a\u5b9e\u4f8b\u7684\u7ed3\u6784\u3002</li> </ul>"},{"location":"ML/","title":"Mechine Learning In Data Analysis","text":"<p>Abstract</p> <p>\u673a\u5668\u5b66\u4e60\u5728\u6570\u636e\u5904\u7406\u4e2d\u8fd0\u7528\u8bfe\u7a0b\u7b14\u8bb0</p> <ul> <li>Prof \uff1aPradeepr Ravikumar, \u674e\u73ba</li> <li>TA \uff1a\u738b\u5b50\u5065/\u5362\u70e8\u660a</li> </ul> <p>Success</p> <ul> <li> Lecture 4 Bayesian Data Analysis</li> </ul>"},{"location":"ML/ML4/","title":"Lecture 4 Bayesian Data Analysis","text":""},{"location":"ML/ML4/#difference-between-classical-data-analysis-and-bayesian","title":"Difference Between Classical Data Analysis and Bayesian","text":"<ul> <li>Classical: Say we have a model with mass of electron as parameter. We might not know the value, but it is nonetheless a constant.\uff08\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u4ee5\u7535\u5b50\u8d28\u91cf\u4e3a\u53c2\u6570\u7684\u6a21\u578b\u3002\u6211\u4eec\u53ef\u80fd\u4e0d\u77e5\u9053\u5b83\u7684\u503c\uff0c\u4f46\u5b83\u4ecd\u7136\u662f\u4e00\u4e2a\u5e38\u6570\u3002\uff09</li> <li>Bayesian: If we do not know its value completely, use a prior distribution reflecting what we do know.\uff08\u5982\u679c\u6211\u4eec\u4e0d\u5b8c\u5168\u77e5\u9053\u5b83\u7684\u503c\uff0c\u4f7f\u7528\u53cd\u6620\u6211\u4eec\u6240\u77e5\u9053\u7684\u5148\u9a8c\u5206\u5e03\u3002\uff09</li> <li>Classical: Prior Distribution seems arbitrary.\uff08\u5148\u9a8c\u5206\u5e03\u4f3c\u4e4e\u662f\u4efb\u610f\u7684\uff09</li> <li>Bayesian: Every statistical method makes some choice might as well use a prior to codify these choices.(\u6bcf\u4e00\u79cd\u7edf\u8ba1\u65b9\u6cd5\u90fd\u6709\u4e00\u4e9b\u9009\u62e9\uff0c\u5728\u6574\u7406\u8fd9\u4e9b\u9009\u62e9\u4e4b\u524d\u4e0d\u59a8\u4f7f\u7528\u5148\u9a8c\u3002)</li> <li>Classical: Bayesian methods too difficult to compute (practical considerations) \u7ecf\u5178:\u8d1d\u53f6\u65af\u65b9\u6cd5\u592a\u96be\u8ba1\u7b97(\u5b9e\u9645\u8003\u8651)</li> </ul> <p>\u5148\u9a8c\u4e8b\u4ef6\u4e0e\u540e\u9a8c\u4e8b\u4ef6</p> <ul> <li>\u5148\u9a8c\u4e8b\u4ef6\u5c31\u662f\u7531\u56e0\u6c42\u679c\uff0c\u5148\u9a8c\u6982\u7387\u4e5f\u5c31\u662f\u6839\u636e\u4ee5\u5f80\u7ecf\u9a8c\u548c\u5206\u6790\u5f97\u5230\u7684\u6982\u7387\uff0c\u6700\u5178\u578b\u7684\u4ee3\u8868\u5c31\u662f\u629b\u786c\u5e01\uff0c\u629b\u4e00\u4e2a\u786c\u5e01\u6c42\u5176\u6b63\u9762\u7684\u6982\u7387\uff0c\u5c31\u662f\u5df2\u7ecf\u77e5\u9053\u786c\u5e01\u6b63\u53cd\u9762\u6982\u7387\u90fd\u662f0.5\u7684\u6761\u4ef6\uff0c\u6c42\u51fa\u201c\u786c\u5e01\u662f\u6b63\u9762\u201d\u7684\u201c\u7ed3\u679c\u201d\u7684\u6982\u7387\u3002</li> <li>\u540e\u9a8c\u4e8b\u4ef6\u5219\u662f\u7531\u679c\u6c42\u56e0\uff0c\u4e5f\u5c31\u662f\u4f9d\u636e\u5f97\u5230\"\u7ed3\u679c\"\u4fe1\u606f\u6240\u8ba1\u7b97\u51fa\u7684\u6700\u6709\u53ef\u80fd\u662f\u54ea\u79cd\u4e8b\u4ef6\u5f15\u8d77\u7684\uff0c\u4f8b\u5b50\u5c31\u662f\uff1a\u4e2d\u5348\u6211\u62c9\u4e86\u809a\u5b50\uff0c\u90a3\u4e48\u6211\u65e9\u4e0a\u559d\u4e86\u4e00\u676f\u51c9\u6c34\u7684\u6982\u7387\u662f\u591a\u5927\uff1f\u6362\u8a00\u4e4b\uff0c\u201c\u62c9\u809a\u5b50\u201d\u662f\u7ed3\u679c\uff0c\u6211\u5728\u5df2\u7ecf\u77e5\u9053\u7ed3\u679c\u7684\u524d\u63d0\u4e0b\uff0c\u6c42\u201c\u559d\u51c9\u6c34\u201d\u7684\u539f\u56e0\u7684\u6982\u7387\uff0c\u4e5f\u5c31\u662f\uff1a\\(P({\u559d\u51c9\u6c34}|{\u62c9\u809a\u5b50})\\), \u540e\u9a8c\u6982\u7387\u800c\u5148\u9a8c\u4e0e\u540e\u9a8c\u7684\u57fa\u7840\u90fd\u662f\u6761\u4ef6\u6982\u7387\u3002</li> </ul> <p>Summary</p> <ul> <li> <ul> <li>\u7ecf\u5178\u7edf\u8ba1\u6839\u636e\u6837\u672c\u4fe1\u606f\u5bf9\u603b\u4f53\u5206\u5e03\u6216\u8005\u603b\u4f53\u7279\u5f81\u5206\u5e03\u8fdb\u884c\u7edf\u8ba1\u63a8\u65ad\uff0c\u53ea\u9700\u8981\u7528\u4e24\u79cd\u4fe1\u606f\uff1a\u603b\u4f53\u5206\u5e03\u4fe1\u606f\u4ee5\u53ca\u6837\u672c\u4fe1\u606f</li> <li>\u8d1d\u53f6\u65af\u7edf\u8ba1\u9664\u4e86\u5229\u7528\u8fd9\u4e24\u79cd\u4fe1\u606f\u5916\u8fd8\u9700\u8981\u7528\u5230\u5148\u9a8c\u5206\u5e03\u4fe1\u606f\uff0c\u7279\u522b\u91cd\u89c6\u5148\u9a8c\u4fe1\u606f\u7684\u6536\u96c6\u3001\u6316\u6398\u3001\u52a0\u5de5\uff0c\u4f7f\u4ed6\u6570\u91cf\u5316\uff0c\u63d0\u9ad8\u7edf\u8ba1\u63a8\u65ad\u7684\u8d28\u91cf\uff0c\u5229\u7528\u4e09\u79cd\u4fe1\u606f\u53ef\u4ee5\u5f97\u5230\uff1a</li> </ul> <p>\u4fe1\u606f\u5229\u7528\u4e0d\u540c</p> \\[\\pi(\\theta|x) = \\frac{h(x,\\theta)}{m(x)} = \\frac{p(x|\\theta)\\pi(\\theta)}{\\sum p(x|\\theta) \\pi(\\theta)} \\] </li> <li> <p>\u5bf9\u4e3b\u89c2\u6982\u7387\u7684\u8ba4\u540c\u4e0d\u540c</p> <ul> <li>\u7ecf\u5178\u7edf\u8ba1\u7684\u6982\u7387\u662f\u5927\u91cf\u91cd\u590d\u5b9e\u9a8c\u4e2d\u83b7\u5f97\u7684</li> <li>\u8d1d\u53f6\u65af\u6982\u7387\u662f\u6839\u636e\u81ea\u5df1\u7684\u751f\u6d3b\u6d3b\u52a8\u79ef\u7d2f\uff0c\u5bf9\u67d0\u4ef6\u4e8b\u60c5\u53d1\u751f\u7684\u53ef\u80fd\u6027\u7ed9\u51fa\u7684\u4fe1\u606f\uff0c\u8d1d\u53f6\u65af\u5141\u8bb8\u5229\u7528\u4e3b\u89c2\u6982\u7387\u3002</li> </ul> </li> <li>\u5bf9\u53c2\u6570\\(\u03b8\\)\u7684\u8ba4\u8bc6\u4e0d\u540c<ul> <li>\u7ecf\u5178\u7edf\u8ba1\u628a\\(\u03b8\\)\u770b\u6210\u4e00\u4e2a\u5e38\u6570\uff0c\u5bf9\u4e8e\u67d0\u79cd\u73b0\u8c61\u8fdb\u884c\u7edf\u8ba1\u63a8\u65ad\u8d1d\u53f6\u65af\u7edf\u8ba1\u628a\u53c2\u6570\u03b8\u770b\u6210\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\u6765\u8fdb\u884c\u7edf\u8ba1\u63a8\u65ad\uff0c\u7528\u4e00\u4e2a\u6982\u7387\u5206\u5e03\u6765\u63cf\u8ff0\u03b8\u7684\u672a\u77e5\u72b6\u51b5\uff0c\u8fd9\u4e2a\u6982\u7387\u5206\u5e03\u5728\u62bd\u6837\u524d\u5c31\u6709\u5173\u4e8e\u03b8\u7684\u5148\u9a8c\u4fe1\u606f\u7684\u6982\u7387\u9648\u8ff0\u3002</li> </ul> </li> <li>\u5bf9\u6837\u672c\u7684\u8ba4\u8bc6\u4e0d\u540c<ul> <li>\u7ecf\u5178\u7edf\u8ba1\u5b66\u628a\u6837\u672c\u770b\u505a\u662f\u603b\u4f53\u5206\u5e03\u7684\u4fe1\u606f\uff0c\u7814\u7a76\u7684\u662f\u603b\u4f53\uff0c\u4e0d\u5c40\u9650\u4e8e\u6570\u636e\u672c\u8eab\u3002\u8d1d\u53f6\u65af\u662f\u91cd\u89c6\u6837\u672c\u89c2\u6d4b\u503c\uff0c\u901a\u8fc7\u6837\u672c\u89c2\u6d4b\u503c\u8bbe\u51fa\u5148\u9a8c\u5206\u5e03\uff0c\u5f97\u5230\u540e\u9a8c\u5206\u5e03\u3002</li> </ul> </li> <li> <ul> <li>\u7ecf\u5178\u7edf\u8ba1\u628a\u771f\u503c\u770b\u4f5c\u662f\u5e38\u91cf\uff0c\u7f6e\u4fe1\u6c34\u5e73\u4e3an\u6b21\u4f7f\u7528\u8fd9\u4e2a\u533a\u95f4\u65f6\uff0c\u5927\u6982\u6709\u591a\u5c11\u53ef\u4ee5\u76d6\u4f4f\u03b8\uff0c\u7f6e\u4fe1\u533a\u95f4\u6bd4\u8f83\u96be\u6c42\uff0c\u9700\u8981\u5f15\u5165\u542b\u88ab\u4f30\u53c2\u6570\u7684\u968f\u673a\u53d8\u91cf\uff0c\u4f7f\u5176\u4e0d\u542b\u672a\u77e5\u53c2\u6570\u3002</li> <li>\u8d1d\u53f6\u65af\u7edf\u8ba1\u53ef\u4fe1\u533a\u95f4\u5c06\u771f\u503c\u770b\u6210\u53d8\u91cf\uff0c\u53ef\u4fe1\u6c34\u5e73\\(\u03b8\\)\u843d\u5165\u53ef\u4fe1\u533a\u95f4\u5185\u7684\u6982\u7387\u4f8b\u5982</li> </ul> <p>\u5bf9\u4e8e\u53ef\u4fe1\u533a\u95f4\u548c\u7f6e\u4fe1\u533a\u95f4\u7684\u8ba4\u8bc6\u4e0d\u540c</p> <p>Example</p> <p> </p> </li> <li> <p>\u5047\u8bbe\u68c0\u9a8c\u8ba4\u540c\u4e0d\u540c</p> <ul> <li>\u7ecf\u5178\u7edf\u8ba1\u5047\u8bbe\u68c0\u9a8c\u9700\u8981\u5efa\u7acb\u539f\u5047\u8bbe\\(H_0\\)\uff0c\u5907\u62e9\u5047\u8bbe\\(H_1\\)\uff0c\u9009\u62e9\u68c0\u9a8c\u7edf\u8ba1\u91cf\uff0c\u663e\u8457\u6027\u6c34\u5e73\uff0c\u5e76\u786e\u5b9a\u62d2\u7edd\u57df\u3002</li> <li>\u8d1d\u53f6\u65af\u7edf\u8ba1\u6839\u636e\u5148\u9a8c\u5206\u5e03\uff0c\u5f97\u5230\u540e\u9a8c\u5206\u5e03\u4e4b\u540e\u8fdb\u884c\u5047\u8bbe\u68c0\u9a8c\\(H_0\\)\uff0c\\(H_1\\)\uff0c\u4e0d\u9700\u8981\u7edf\u8ba1\u91cf\u6765\u5047\u8bbe\u62bd\u6837\u5206\u5e03\uff0c\u4e5f\u4e0d\u9700\u8981\u663e\u8457\u6027\u6c34\u5e73\u6765\u5047\u8bbe\u62d2\u7edd\u57df\uff0c\u4f46\u662f\u9700\u8981\u8003\u8651\u635f\u5931\u51fd\u6570\u3002</li> </ul> </li> <li>\u4e09\u79cd\u4fe1\u606f\u7684\u56fe\u5f62\u4e0d\u540c<ul> <li>\u7ecf\u5178\u7edf\u8ba1\u53ea\u6709\u4e00\u4e2a\u6837\u672c\u56fe\u578b</li> <li>\u8d1d\u53f6\u65af\u7edf\u8ba1\u7684\u540e\u9a8c\u5206\u5e03\u662f\u5229\u7528\u6837\u672c\u4fe1\u606f\u5bf9\u5148\u9a8c\u4fe1\u606f\u4fee\u6b63\u7684\u7ed3\u679c\uff0c\u540e\u9a8c\u6982\u7387\u5bc6\u5ea6\u56fe\u5f62\u5728\u6837\u672c\u5bc6\u5ea6\u56fe\u5f62\u4e0e\u5148\u9a8c\u5bc6\u5ea6\u56fe\u5f62\u4e4b\u95f4\u3002</li> </ul> </li> </ul>"},{"location":"ML/ML4/#bayesian-learning","title":"Bayesian Learning","text":"\\[P({\\theta}|{D}) = \\frac{P({D}|{\\theta})P(\\theta)}{P(D)}\\] <ul> <li>\\(P(\\theta)\\) : \u5148\u9a8c\u6982\u7387\uff08Prior Probability\uff09 \u5c31\u662f\u8fd8\u6ca1\u6709\u8bad\u7ec3\u6570\u636e\u4e4b\u524d\uff0c\u67d0\u4e2a\u5047\u8bbe\\(h(h\u2208H)\\)\u7684\u521d\u59cb\u6982\u7387\uff0c\u8bb0\u4e3a\\(P(\\theta)\\)\u3002</li> <li>\\(P({\\theta}|{D})\\) : \u540e\u9a8c\u6982\u7387\uff08Posterior Probability\uff09 \u5c31\u662f\u5728\u6570\u636ed\u4e0a\u7ecf\u8fc7\u5b66\u4e60\u4e4b\u540e\uff0c\u83b7\u5f97\u7684\u5047\u8bbeh\u6210\u7acb\u7684\u6982\u7387\uff0c\u8bb0\u4e3a\\(P(\\theta|D)\\)\u3002 \\(P(\\theta|D)\\)\u8868\u793a\u7ed9\u5b9a\u6570\u636e\\(D\\)\u65f6\u5047\u8bbe\\(\\theta\\)\u6210\u7acb\u7684\u6982\u7387\uff0c\u79f0\u4e3ah\u7684\u540e\u9a8c\u6982\u7387\u3002(\u540e\u9a8c\u6982\u7387\u662f\u5b66\u4e60\u7684\u7ed3\u679c\uff0c\u53cd\u6620\u4e86\u5728\u770b\u5230\u8bad\u7ec3\u6570\u636ed\u4e4b\u540e\uff0c\u5047\u8bbeh\u6210\u7acb\u7684\u7f6e\u4fe1\u5ea6\u3002\u540e\u9a8c\u6982\u7387\u7528\u4f5c\u89e3\u51b3\u95ee\u9898\u65f6\u7684\u4f9d\u636e\u3002 \u5bf9\u4e8e\u7ed9\u5b9a\u6570\u636e\u6839\u636e\u8be5\u6982\u7387\u505a\u51fa\u76f8\u5e94\u51b3\u7b56\uff0c\u4f8b\u5982\u5224\u65ad\u6570\u636e\u7684\u7c7b\u522b\uff0c\u6216\u5f97\u51fa\u67d0\u79cd\u7ed3\u8bba\uff0c\u6216\u6267\u884c\u67d0\u79cd\u884c\u52a8\u7b49\u7b49\u3002)</li> <li>\\(P({D}|{\\theta})\\) : \u4f3c\u7136\u5ea6\uff0c\u8868\u793a\u5df2\u77e5\u5047\u8bbe\\(\\theta\\)\u6210\u7acb\u65f6\\(D\\)\u7684\u6982\u7387\uff0c\u79f0\u4e4b\u4e3a\u7c7b\u6761\u4ef6\u6982\u7387\uff0c\u6216\u8005\u7ed9\u5b9a\u5047\u8bbe\\(\\theta\\)\u65f6\u6570\u636e\\(D\\)\u7684\u4f3c\u7136\u5ea6</li> </ul> <p>Summary</p> <ul> <li>\\(P(\\theta|D)\\)\u968f\u7740\\(P(\\theta)\\)\u548c\\(P(D|\\theta)\\)\u7684\u589e\u957f\u800c\u589e\u957f\uff0c\u968f\u7740\\(P(D)\\)\u7684\u589e\u957f\u800c\u51cf\u5c11\u3002 \u5373\u5982\u679c\\(D\\)\u72ec\u7acb\u4e8e\\(\\theta\\)\u65f6\u88ab\u89c2\u5bdf\u5230\u7684\u53ef\u80fd\u6027\u8d8a\u5927\uff0c\u90a3\u4e48\\(D\\)\u5bf9\\(\\theta\\)\u7684\u652f\u6301\u5ea6\u8d8a\u5c0f\u3002 \u540e\u9a8c\u6982\u7387\u662f\u5bf9\u5148\u9a8c\u6982\u7387\u7684\u4fee\u6b63\u3002\u540e\u9a8c\u6982\u7387\\(P(\\theta|D)\\)\u662f\u5728\u6570\u636e\\(D\\)\u4e0a\u5f97\u5230\u7684\u5b66\u4e60\u7ed3\u679c\uff0c\u53cd\u6620\u4e86\u6570\u636e\\(D\\)\u7684\u5f71\u54cd\uff0c\u8fd9\u4e2a\u5b66\u4e60\u7ed3\u679c\u662f\u4e0e\u8bad\u7ec3\u6570\u636e\u76f8\u5173\u7684\u3002 \u4e0e\u6b64\u76f8\u53cd\uff0c\u5148\u9a8c\u6982\u7387\u662f\u4e0e\u8bad\u7ec3\u6570\u636e\\(D\\)\u65e0\u5173\u7684\uff0c\u662f\u72ec\u7acb\u4e8e\\(D\\)\u7684</li> <li>\u8d1d\u53f6\u65af\u6cd5\u5219\u89e3\u51b3\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e00\u822c\u662f\uff1a \u5728\u7ed9\u5b9a\u8bad\u7ec3\u6570\u636e\\(D\\)\u65f6\uff0c\u786e\u5b9a\u5047\u8bbe\u7a7a\u95f4\\(H\\)\u4e2d\u7684\u6700\u4f18\u5047\u8bbe</li> </ul>"},{"location":"ML/ML4/#bayesian-rule","title":"Bayesian Rule","text":""},{"location":"ML/ML4/#output-of-bayesian-inference","title":"Output of Bayesian Inference","text":"<p>AP\u7edf\u8ba1\u53ef\u4ee5\u5206\u4e3a\u63cf\u8ff0\u7edf\u8ba1(Descriptive statistics)\u548c\u7edf\u8ba1\u63a8\u65ad(Inferential statistics)\u4e24\u5927\u90e8\u5206\u3002\u800c\u53c2\u6570\u4f30\u8ba1(Parameter estimation)\u548c\u5047\u8bbe\u68c0\u9a8c(Hypothesis test)\u662f\u7edf\u8ba1\u63a8\u65ad\u7684\u4e24\u4e2a\u91cd\u8981\u5185\u5bb9\u3002\u5176\u4e2d\u53c2\u6570\u4f30\u8ba1\u53c8\u5305\u62ec\u70b9\u4f30\u8ba1(Point estimation)\u548c\u533a\u95f4\u4f30\u8ba1(Interval estimation)\u4e24\u5757\u5185\u5bb9\u3002</p>"},{"location":"ML/ML4/#point-estimation","title":"Point Estimation(\u70b9\u4f30\u8ba1)","text":"<ul> <li>We get it by applying some function \\(g\\) to the observation \\(x\\),\\(\\hat{\\Theta} = g(x)\\)</li> </ul> \\[\\hat{\\Theta}(X) = g(X)\\]"},{"location":"ML/ML4/#point-estimators","title":"Point Estimators","text":"<ul> <li>MAP Estimator : \\(\\hat{\\Theta}(X) = arg \\max\\limits_{\\Theta}p_{\\Theta}(\\Theta|X)\\)</li> <li>Conditional Expectation : \\(\\hat{\\Theta}(X) = \\mathbb{E}(\\Theta|X)\\)</li> </ul> <p>MAP Rule</p> <p></p> <ul> <li>since the denominator depends only on \\(x\\), and is the same for all \\(\\theta\\).</li> </ul>"},{"location":"ML/ML4/#map-and-mle","title":"MAP(\u6700\u5927\u540e\u9a8c\u4f30\u8ba1) and MLE(\u6700\u5927\u4f3c\u7136\u4f30\u8ba1)","text":"<p>\u4e00\u822c\u6765\u8bf4,\u9891\u7387\u5b66\u6d3e\u66f4\u559c\u6b22MLE,\u8d1d\u53f6\u65af\u5b66\u6d3e\u66f4\u559c\u6b22MAP</p> <p></p> <p>compare</p> <p> - MLE\u5f53\u6570\u636e\u8f83\u5c11\u7684\u65f6\u5019\uff0c\u53c2\u6570\u4f30\u8ba1\u7684\u504f\u5dee\u5f88\u5927\u3002 - MAP\u7684\u7ed3\u679c\u4f1a\u968f\u7740\u5148\u9a8c\u6982\u7387\u800c\u53d8\u5316</p> \\(P(x;\\theta)\\) \u548c \\(P(x|\\theta)\\)\u7684\u533a\u522b <ul> <li>\u5728\u8d1d\u53f6\u65af\u7edf\u8ba1\u7684\u89d2\u5ea6\u4e0b\u5e94\u8be5\u4e00\u6837\u7684\u3002\u8fd9\u65f6\\(x\\)\u548c\\(\\theta\\)\u53ef\u4ee5\u770b\u505a\u670d\u4ece\u67d0\u4e2a\u8054\u5408\u5206\u5e03\uff0c\u800c\u4e24\u4e2a\u7b26\u53f7\u90fd\u8868\u793a\\(\\theta\\)\u53d6\u67d0\u4e2a\u503c\u65f6\uff0c\\(x\\)\u7684\u6761\u4ef6\u5206\u5e03\u3002</li> <li>\u5728\u9891\u7387\u5b66\u6d3e\u89d2\u5ea6\u4e0b\u4e0d\u540c\u3002\u524d\u8005\\(\\theta\\)\u8868\u793a\u5f85\u4f30\u8ba1\u53c2\u6570\uff0c\u540e\u8005\u8868\u793a\u968f\u673a\u53d8\u91cf\uff0c\u4e0d\u4e00\u6837\u3002</li> </ul>"},{"location":"ML/ML4/#lms-estimation","title":"LMS Estimation","text":"<p>\u83ab\u540d\u8054\u60f3\u5230\u4e86\u6700\u5927\u7c7b\u95f4\u65b9\u5dee\u7684\u5927\u6d25\u7b97\u6cd5</p> <ul> <li>\\(\\hat{y}(n) = w^T(n) x(n)\\) \u9884\u671f</li> <li>\\(e(n) = y(n) - \\hat{y}(n)\\) \u6c42\u5e73\u65b9\u8bef\u5dee</li> <li>\\(w(n+1) = w(n) + \\mu \\cdot e(n) \\cdot x(n)\\) \u4fee\u6b63</li> </ul>"},{"location":"ODE/","title":"\u5e38\u5fae\u5206\u65b9\u6052","text":"<p>Abstract</p> <p>\u5e38\u5fae\u5206\u65b9\u7a0b\u8bfe\u7a0b\u7b14\u8bb0</p>"},{"location":"ODE/ode1/","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>Abstract</p> <p>\u4e00\u822c\u7684\uff0c\u5728\u4e00\u4e2a\u65b9\u7a0b\u6216\u8005\u65b9\u7a0b\u7ec4\u4e2d\uff0c\u5982\u679c\u672a\u77e5\u91cf\u662f\u4e00\u4e2a\u51fd\u6570(\u7ec4)\uff0c\u800c\u4e14\u8be5\u65b9\u7a0b\u4e2d\u542b\u6709\u6b64\u672a\u77e5\u51fd\u6570\u7684\u5bfc\u6570(\u7ec4)\uff0c\u5219\u79f0\u8fd9\u79cd\u65b9\u7a0b\u4e3a\u5fae\u5206\u65b9\u7a0b(\u7ec4)\u3002 - \u5982\u679c\u5728\u5fae\u5206\u65b9\u7a0b\u91cc\uff0c\u51fa\u73b0\u7684\u672a\u77e5\u51fd\u6570\u662f\u5355\u4e2a\u81ea\u53d8\u91cf\u7684\u51fd\u6570\uff0c\u6211\u4eec\u79f0\u8fd9\u4e00\u7c7b\u5fae\u5206\u65b9\u7a0b\u4e3a\u5e38\u5fae\u5206\u65b9\u7a0b - \u5982\u679c\u672a\u77e5\u51fd\u6570\u6709\u4e24\u4e2a\u6216\u4ee5\u4e0a\u7684\u81ea\u53d8\u91cf\uff0c\u5219\u79f0\u4e3a\u504f\u5fae\u5206\u65b9\u7a0b</p>"},{"location":"ODE/ode1/#_2","title":"\u9636","text":"<p>\u5728\u5fae\u5206\u65b9\u7a0b\u4e2d\u51fa\u73b0\u7684\u672a\u77e5\u51fd\u6570\u7684\u5bfc\u6570\u7684\u6700\u9ad8\u9636\u6570\uff0c\u79f0\u4e3a\u5fae\u5206\u65b9\u7a0b\u7684\u9636</p> <p>Example</p> <ul> <li>\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a\\(F(x,y,\\frac{dy}{dx}) = 0\\)</li> <li>\\(F(x,y,\\frac{\\mathrm{d}y}{\\mathrm{d}x},\\cdots,\\frac{\\mathrm{d}^ny}{\\mathrm{d}x^n})=0\\)\u4e3a\\(n\\)\u9636\u65b9\u7a0b</li> <li>eg. \\(\\frac{d^2y}{dx^2} = \\frac{1}{a}\\sqrt{1+(\\frac{dy}{dx})^2}\\)\u4e3a\u4e8c\u9636\u5fae\u5206\u65b9\u7a0b</li> </ul>"},{"location":"ODE/ode1/#_3","title":"\u89e3","text":"<ul> <li>\u5982\u679c\\(y = \\varphi(x)\\)\u6ee1\u8db3\\(F(x,y,\\frac{\\mathrm{d}y}{\\mathrm{d}x},\\cdots,\\frac{\\mathrm{d}^ny}{\\mathrm{d}x^n})=0\\)\uff0c\u5219\u8be5\u51fd\u6570\u79f0\u4e3aODE\u7684\u89e3</li> <li>\u9690\u5f0f\u89e3\uff1a\u82e5\\(\\Phi(x,y) = 0\\)\u51b3\u5b9a\u7684\\(y = \\varphi(x)\\),\u5219\u79f0\\(\\Phi(x,y) = 0\\)\u4e3a\u9690\u5f0f\u89e3</li> <li>\u901a\u89e3\uff1a\u5982\\(y = \\varphi(x,c_1,c_2,\\cdots,c_n)\\)</li> <li>\u65b9\u7a0b\u7684\u89e3\u6216\u79ef\u5206\u5728\\((x, y)\\)\u5e73\u9762\u4e0a\u7684\u56fe\u5f62\u79f0\u4e3a\u8be5\u65b9\u7a0b\u7684\u79ef\u5206\u66f2\u7ebf</li> </ul>"},{"location":"ODE/ode1/#_4","title":"\u89e3\u7684\u5b58\u5728\u6027","text":"<p>\u4f8b\uff1a\\(\\frac{dy}{dx} = f(x, y)\\)</p> <ul> <li>\u521d\u503c\u6761\u4ef6\u4e3a\uff1a\\(y|_{x = x_0} = y_0\\)</li> </ul> <p>\u8bbe\\(f(x, y)\\)\u5728\u533a\u57df\\(D: |x - x_0| \\leq a, |y - y_0| \\leq b\\)\u5185\u8fde\u7eed\uff0c\u4e14\u6709\u5bf9\u4e8e\\(y\\)\u7684\u504f\u5bfc\u6570,\u5219\u5728\u533a\u95f4\\(|x - x_0| &lt; h \\quad (h = min(a,\\frac{b}{M}), M = \\max\\limits_{(x, y) \\in D}|f(x, y)|)\\)\u5185\u5b58\u5728\u552f\u4e00\u7684\\(y = \\varphi(x)\\)</p> <ul> <li>\u6ee1\u8db3\u521d\u59cb\u6761\u4ef6\u7684\u89e3\u79f0\u4e3a\u7279\u89e3</li> </ul>"},{"location":"ODE/ode1/#_5","title":"\u901a\u89e3","text":"<p>\u4e00\u822c\u7684\uff0c\u5982\u679c\u542b\u6709\u4e00\u4e2a\u4efb\u610f\u5e38\u6570\\(c\\)\u7684\u51fd\u6570\\(y = \\varphi(x, c)\\)\u6ee1\u8db3\\(\\frac{d \\varphi(x, c)}{dx} \\equiv f(x, \\varphi(x, c))\\),\u5219\u79f0\\(\\varphi(x, c)\\)\u4e3a\u901a\u89e3</p>"},{"location":"ODE/ode2/","title":"\u53d8\u91cf\u5206\u79bb","text":""},{"location":"ODE/ode2/#_2","title":"\u57fa\u672c\u5f62\u5f0f","text":"\\[\\frac{dy}{dx} = \\varphi(x)\\phi(y)\\] <p>\u7279\u70b9\u662f\uff0c\u65b9\u7a0b\u53f3\u8fb9\u662f\u4e00\u4e2a\\(x\\)\u7684\u51fd\u6570\u4e0e\\(y\\)\u7684\u51fd\u6570\u76f8\u4e58,\u8fd9\u7c7b\u5c31\u662f\u53ef\u5206\u79bb\u53d8\u91cf\u7684\u5fae\u5206\u65b9\u7a0b\u3002</p> <p>\u6211\u4eec\u53ea\u9700\u8fdb\u884c\u53d8\u6362\uff0c\u4f7f\u5f97\u4e00\u8fb9\u5bf9\\(x\\)\u79ef\u5206\uff0c\u4e00\u8fb9\u5bf9\\(y\\)\u79ef\u5206</p> \\[\\frac{dy}{\\phi(y)} = \\varphi(x)dx\\]"},{"location":"OOP/","title":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u201d \u8bfe\u7a0b\u53ca\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <ul> <li>Prof:\u8bb8\u5a01\u5a01</li> </ul> <p>Success</p> <ul> <li> C++\u8bed\u8a00\u7279\u6027</li> <li> \u7c7b\u7684\u57fa\u672c\u6027\u8d28</li> </ul>"},{"location":"OOP/oop1/","title":"chapter 1 C++\u8bed\u8a00\u7279\u6027","text":"<p>Abstract</p> <ul> <li>\u8bfe\u4e0a\u4f8b\u7a0b</li> <li>\u8bed\u6cd5\u8bb0\u5f55</li> </ul>"},{"location":"OOP/oop1/#the-first-c-program","title":"The First C++ Program","text":"<pre><code>#include&lt;iostream&gt;\nusing namespace std;\nint main()\n{\n    cout &lt;&lt; \"hello\" &lt;&lt; \"world\" &lt;&lt; endl;\n    return;\n}\n</code></pre>"},{"location":"OOP/oop1/#read-input","title":"Read Input","text":"<pre><code>#include&lt;iostream&gt;\nusing namespace std;\nint main()\n{\n    int number;\n    cin &gt;&gt; number;\n    cout &lt;&lt; \"hello\" &lt;&lt; \"world\" &lt;&lt; number &lt;&lt; endl;\n    return;\n}\n</code></pre>"},{"location":"OOP/oop1/#c","title":"\u4e0eC\u8bed\u8a00\u5bf9\u6bd4","text":"<ul> <li>Strengths:</li> <li>Efficient programs</li> <li>Direct access to machine</li> <li> <p>Flexible</p> </li> <li> <p>Weakness:</p> </li> <li>Insufficient type checking</li> <li>Poor support for programming-in-the-large</li> <li>TBD</li> </ul>"},{"location":"OOP/oop1/#string","title":"String","text":"<p>Info</p> <ul> <li><code>string</code> is a class in C++. (\u9700\u8981 <code>#include &lt;string&gt;</code>)  </li> <li>\u53ef\u4ee5\u50cf\u5b9a\u4e49\u5176\u4ed6\u7c7b\u578b\u4e00\u6837\u5b9a\u4e49\u53d8\u91cf\u3002 e.g. <code>string str;</code></li> <li>\u53ef\u4ee5\u5bf9\u5b57\u7b26\u4e32\u521d\u59cb\u5316\uff0c\u7528 <code>cin, cout</code> \u8f93\u5165\u8f93\u51fa\u3002</li> </ul>"},{"location":"OOP/oop1/#assignment-for-string","title":"Assignment for string","text":"<ul> <li>\u4e0e<code>char</code>\u6570\u7ec4\u5bf9\u6bd4</li> </ul> <pre><code>char charr1[20];\nchar charr2[20] = \"ABC\";\n\nstring str1;\nstring str2 = \"ABC\";\n\nstr1 = str2; //legal\ncharr1 = charr2; //illegal\n</code></pre>"},{"location":"OOP/oop1/#concatenation-for-string","title":"Concatenation for string","text":"<ul> <li><code>str3 = str1 + str2;</code></li> <li><code>str1 += str2;</code></li> <li><code>str1 += \"ABC\";</code></li> </ul> <p>Warning</p> <pre><code>string name;\nname = name + \"Johnson\";\n</code></pre> <p>\u8fd9\u91cc <code>name</code> \u5df2\u7ecf\u6709\u786e\u5b9a\u503c\u4e86\uff0c\u56e0\u4e3a\u8fd9\u91cc\u662f\u4e00\u4e2a class \u6001\uff0c\u4e3a\u7a7a\u5b57\u7b26\u4e32\u3002</p>"},{"location":"OOP/oop1/#ctors","title":"Ctors","text":"<ul> <li>string(const char*cp, int len);</li> <li>string(const string&amp; s2, int pos);</li> <li>string(const string&amp; s2, int pos, int len);</li> </ul> <pre><code>#include&lt;string&gt;\n#include&lt;iostream&gt;\nusing namespace std;\nint main()\n{\n    string str1, str2(\"world\");\n    str1 = \"hello\";\n    cout &lt;&lt; str1 &lt;&lt; str2 &lt;&lt; endl;\n    return;\n}\n</code></pre> <ul> <li>\u53ef\u4ee5\u4f7f\u7528<code>str.empty()</code>\u6765\u5224\u65ad\u662f\u5426\u4e3a\u7a7a</li> </ul> <p>Warning</p> <p>\u8981\u6ce8\u610f\u884c\u4e3a\u8c03\u7528\u4e0e\u51fd\u6570\u8c03\u7528\u7684\u533a\u522b</p>"},{"location":"OOP/oop1/#alter-string","title":"alter string(\u4e0d\u5e38\u8003)","text":"<ul> <li>assign();</li> <li>insert(const string &amp;, int len);</li> <li>insert(int pos, const string &amp;s);</li> <li>erase();</li> <li>append();</li> <li>replace();</li> </ul>"},{"location":"OOP/oop1/#search-string","title":"search string","text":"<ul> <li>find()</li> </ul>"},{"location":"OOP/oop1/#file-io","title":"File I/O","text":"<pre><code>#include&lt;ifstream&gt;\n#include&lt;ofstream&gt;\n/*\u73b0\u5728\u5408\u5e76\u4e3a\u4e86&lt;fstream&gt;*/\nofstream File1(\"C:\\\\test.txt\");\nFile1 &lt;&lt; \"Hello\" &lt;&lt; endl;\nofstream File2(\"C:\\\\test.txt\");\nFile2 &gt;&gt; str;\n</code></pre>"},{"location":"OOP/oop1/#stream","title":"Stream","text":"<ul> <li><code>iostream</code>\u5904\u7406\u63a7\u5236\u53f0IO</li> <li><code>fstream</code>\u5904\u7406\u547d\u540d\u6587\u4ef6IO</li> <li><code>stringstream</code>\u5b8c\u6210\u5185\u5b58<code>string</code>\u7684IO</li> </ul>"},{"location":"OOP/oop1/#vars","title":"Vars","text":"<ul> <li>global vars</li> <li>static global vars</li> <li>local vars</li> <li>static local vars</li> </ul> <pre><code>int i; //global vars\nstring str;\nstatic int j; // static global vars\n\nf(){\n    int k; // local vars\n    static int j; //static local\n}\n</code></pre>"},{"location":"OOP/oop1/#momery-model","title":"Momery Model","text":"<ul> <li>extern : \u8bf4\u660e\u5728\u5916\u90e8\u5b9a\u4e49(\u591a\u6587\u4ef6\u5de5\u7a0b)</li> <li>static global var inhibits access from outside the .ccp file(\u8bbf\u95ee\u63a7\u5236)</li> <li>static local var initialized at its first time(persistence) </li> </ul>"},{"location":"OOP/oop1/#pointers-to-object","title":"Pointers to object","text":"<p>Example</p> <ul> <li>string s = \u201chello\u201d;(object itself)</li> <li>string* ps = &amp;s;(a pointer to an object)</li> </ul>"},{"location":"OOP/oop1/#operators-with-pointers","title":"Operators with Pointers","text":"<ul> <li><code>&amp;</code> : get address</li> <li><code>*</code> : get the object</li> <li><code>-&gt;</code> :call the function</li> </ul>"},{"location":"OOP/oop1/#assignment","title":"Assignment","text":"<ul> <li>string s1, s2;</li> <li>s1 = s2;</li> <li>string ps1, ps2;</li> <li>ps1 = ps2;</li> </ul>"},{"location":"OOP/oop1/#dynamic-memory-allocation","title":"Dynamic memory allocation","text":"<ul> <li>new(\u8fd4\u56de\u4e00\u4e2a\u6307\u9488)</li> <li>new int;</li> <li>new Stash;</li> <li>new int[10];</li> <li>delete</li> <li>delete p;</li> <li>delete [] p;</li> </ul> <p>Example</p> <ul> <li>int *psome = new int [10];</li> <li>delete [] psome;</li> </ul> <p>The new-delete mech</p> <p> </p> <p>Tips for new and delete</p> <ul> <li>Don't use delete to free memory that new didn't allocate.</li> <li>Don't use delete to free the same block of memory twice  in succession.</li> <li>Use delete [] if you used new [] to allocate an array.</li> <li>Use delete (no brackets) if you used new to allocate a  single entity.</li> <li>It's safe to apply delete to the null pointer (nothing  happens).</li> </ul>"},{"location":"OOP/oop1/#references","title":"References(\u5f15\u7528)","text":"<p>References are a new data type in C++</p> <p></p> <p>\u4fee\u6539\u5f15\u7528\u503c\u4e5f\u4f1a\u5bfc\u81f4\u539f\u503c\u53d1\u751f\u6539\u53d8\uff0c\u6548\u679c\u7c7b\u4f3c\u6307\u9488</p> <ul> <li>int x = 3;</li> <li>int &amp;y = x;</li> <li>const int &amp;z = x; (z\u503c\u4e0d\u80fd\u4fee\u6539)</li> </ul> <p></p> <p>Rules of references</p> <ul> <li>References must be initialized when defined</li> <li>Initialization establishes a binding</li> <li>Bindings don\u2019t change at run time, unlike pointers(binding\u53ef\u4ee5\u7406\u89e3\u4e3a\u7ed1\u5b9a)</li> <li>No references to references</li> </ul> Example <p></p> <p>Pointers vs. References</p> <p> - ailas \uff1a\u522b\u540d  - \u6307\u9488\u53ef\u4ee5\u62e5\u6709\u5f15\u7528 - \u5f15\u7528\u4e0d\u80fd\u62e5\u6709\u6307\u9488</p>"},{"location":"OOP/oop1/#const","title":"const","text":"<ul> <li>declares a variable to have a constant value</li> </ul> <p>code</p> <p></p>"},{"location":"OOP/oop1/#constants","title":"constants","text":"<ul> <li>Constants are variables<ul> <li>Observe scoping rules</li> <li>Declared with \u201cconst\u201d type modifier</li> </ul> </li> <li>A const in C++ defaults to internal linkage<ul> <li>the compiler tries to avoid creating storage for a const<ul> <li>holds the value in its symbol table.</li> </ul> </li> <li>extern forces storage to be allocated.</li> </ul> </li> </ul> <p>Abstract</p> <p>\u7f16\u8bd1\u671f\u5e38\u91cf\u6307\u7684\u5c31\u662f\u7a0b\u5e8f\u5728\u7f16\u8bd1\u65f6\u5c31\u80fd\u786e\u5b9a\u8fd9\u4e2a\u5e38\u91cf\u7684\u5177\u4f53\u503c \u975e\u7f16\u8bd1\u671f\u5e38\u91cf\u5c31\u662f\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u624d\u80fd\u786e\u5b9a\u5e38\u91cf\u7684\u503c,\u56e0\u6b64\u4e5f\u79f0\u4e3a\u8fd0\u884c\u65f6\u5e38\u91cf</p>"},{"location":"OOP/oop1/#compile-time-constants","title":"Compile time constants","text":""},{"location":"OOP/oop1/#run-time-constants","title":"Run-time constants","text":""},{"location":"OOP/oop1/#aggregates","title":"Aggregates","text":"<p>\u53ef\u4ee5\u5c06const\u7528\u4e8eaggregates\uff0c\u4f46\u4f1a\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0cconst\u7684\u610f\u601d\u662f\u201c\u4e0d\u80fd\u66f4\u6539\u7684\u5b58\u50a8\u7a7a\u95f4\u201d\u3002\u4f46\u662f\uff0c\u8be5\u503c\u4e0d\u80fd\u5728\u7f16\u8bd1\u65f6\u4f7f\u7528\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u4e0d\u9700\u8981\u77e5\u9053\u5b58\u50a8\u7684\u5185\u5bb9\u3002</p> <p></p>"},{"location":"OOP/oop1/#pointers-and-const","title":"Pointers and const","text":"<p>const\u8ddf\u8c01\u8fd1\u5c31\u4fee\u9970\u8c01</p> <p></p> <p>Question</p> <ul> <li>string p1(\"fred\");</li> <li>const string *p = &amp;p1;</li> <li>string const *p = &amp;p1;</li> <li>string *const p = &amp;p1;</li> </ul> Answer <p>3\u4e0e4\u610f\u4e49\u4e00\u81f4 </p> <p></p> <ul> <li>Can always treat a non-const value as const</li> <li>You cannot treat a constant object as non-constant without an explicit cast  (const_cast)\u53ef\u4ee5\u5c06const\u6539\u6210varible</li> </ul> <p>Passing and returning addresses</p> <ul> <li>Passing a whole object may cost you a lot.    It is  better to pass by a pointer. But it\u2019s possible for the  programmer to take it and modify the original value. </li> <li>In fact, whenever you\u2019re passing an address into a  function, you should make it a const if at all  possible. </li> </ul> <p>xww\u7684\u7f16\u7a0b\u5efa\u8bae</p> <ul> <li>\u5efa\u8bae\u4f20\u5165\u6307\u9488\u6216\u8005\u5f15\u7528\uff0c\u5e76\u52a0\u4e0aconst\uff0c\u53ef\u4ee5\u4f7f\u5f97\u4ee3\u7801\u8fd0\u884c\u7684\u66f4\u5feb</li> </ul>"},{"location":"OOP/oop2/","title":"Chapter 2 \u7c7b\u7684\u57fa\u672c\u6027\u8d28","text":"<p>Abstract</p> <ul> <li>\u62bd\u8c61</li> <li>\u5c01\u88c5\u548c\u6570\u636e\u9690\u85cf</li> <li>\u591a\u6001</li> <li>\u7ee7\u627f</li> <li>\u4ee3\u7801\u7684\u53ef\u91cd\u7528\u6027</li> <li>\u5bb9\u5668</li> </ul>"},{"location":"OOP/oop2/#class","title":"Class(\u7c7b)","text":"<p>\u7c7b\u662f\u4e00\u79cd\u5c06\u62bd\u8c61\u8f6c\u5316\u4e3a\u7528\u6237\u5b9a\u4e49\u7c7b\u578b\u7684C++\u5de5\u5177\uff0c\u4ed6\u5c06\u6570\u636e\u7c7b\u578b\u548c\u64cd\u7eb5\u6570\u636e\u7684\u65b9\u6cd5\u7ec4\u5408\u6210\u4e00\u4e2a\u6574\u6d01\u7684\u5305\u3002</p> <p>\u8fd9\u91cc\u5982\u4e0b\u662f<code>CS61A</code>\u7684<code>Account</code>\u4ee5\u53ca\u5bf9\u5e94\u7684<code>C++</code>\u7248\u672c</p> code-python <pre><code>class Account:\n    def __init__(self, account_holder):\n        self.balance = 0\n        self.holder = account_holder\n    def deposit(self, amount):\n        self.balance = self.balance + amount\n        return self.balance\n    def withdraw(self, amount):\n        if amount &gt; self.balance:\n            return 'Insufficient funds'\n        self.balance = self.balance - amount\n        return self.balance\n</code></pre> code-C++ <pre><code>#include&lt;iostream&gt;\n#include&lt;string&gt;\nusing namespace std;\n\nclass Account\n{\nprivate:\n    /* data */\n    int accountNumber;\n    string accountHolderName;\n    double balance;\npublic:\n    Account(int accountNumber = 0, string accountHolderName = \"No name\", double balance = 0);\n    /*\n    Account();//default constructor(\u9ed8\u8ba4\u6784\u9020\u51fd\u6570)\n    \u5df2\u7ecf\u63d0\u4f9b\u663e\u793a\u6784\u9020\u51fd\u6570\u540e\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u518d\u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u6240\u4ee5\u8fd9\u91cc\u4f1a\u62a5\u9519\uff0c\u53ea\u80fd\u624b\u52a8\u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\n    */\n    void withdraw(double amount);\n    void deposit(double amount);\n    void display();\n}; \n\nvoid Account::display()\n{\n    cout &lt;&lt; \"Account Number: \" &lt;&lt; accountNumber &lt;&lt; endl;\n    cout &lt;&lt; \"Account Holder Name: \" &lt;&lt; accountHolderName &lt;&lt; endl;\n    cout &lt;&lt; \"Balance: \" &lt;&lt; balance &lt;&lt; endl;\n}\n\n\nAccount::Account(int accountNumber, string accountHolderName, double balance)\n{\n    this-&gt;accountNumber = accountNumber;\n    this-&gt;accountHolderName = accountHolderName;\n    this-&gt;balance = balance;\n}\n\nvoid Account::withdraw(double amount)\n{\n    if (balance &lt; amount)\n    {\n        cout &lt;&lt; \"Insufficient balance\" &lt;&lt; endl;\n    }\n    else\n    {\n        balance -= amount;\n    }\n}\n\nvoid Account::deposit(double amount)\n{\n    balance += amount;\n}\n\nint main()\n{\n    Account a1(101, \"John\", 5000); //\u9690\u5f0f\u8c03\u7528\n    //Account a1 = Account(101, \"John\", 5000); \u663e\u5f0f\u8c03\u7528\n    a1.display();\n    a1.deposit(2000);\n    a1.display();\n    return 0;\n}\n</code></pre>"},{"location":"OOP/oop2/#examplepoint","title":"Example:Point","text":"<pre><code>typedef struct point {\n    float x;\n    float y;\n} Point;\n\nvoid print(const Point *p)\n{\n    printf(\"%d %d\\n\", p-&gt;x, p-&gt;y);\n}\n\nvoid move(Point* p,int dx, int dy)\n{\n    p-&gt;x += dx;\n    p-&gt;y += dy;\n}\n\nint main()\n{\n    Point a;\n    a.x = 1;\n    a.y = 2;\n    print(&amp;a);\n    move(&amp;a, 10, 20);\n    print(&amp;a);\n}\n</code></pre> <p>\u4ee5\u4e0a\u662f C \u8bed\u8a00\u80fd\u505a\u7684\uff0c\u5728 C++ \u91cc\u6211\u4eec\u53ef\u4ee5\u628a\u51fd\u6570\u4e5f\u653e\u5230\u7ed3\u6784\u91cc\u9762\u3002  </p> <pre><code>typedef struct point {\n    int x;\n    int y;\n    void print();       \n}Point;\n</code></pre> <p>\u8fd9\u91cc\u53ea\u662f\u58f0\u660e\uff0c\u5e76\u4e0d\u4f1a\u4ea7\u751f\u5b9e\u9645\u4ee3\u7801\uff08\u5305\u62ec\u7ed3\u6784\u91cc\u7684\u53d8\u91cf\u4e5f\u53ea\u662f\u58f0\u660e\uff09\u3002\u6211\u4eec\u5f80\u7ed3\u6784\u91cc\u653e\u4e86\u51fd\u6570\u539f\u578b\uff08\u5373\u51fd\u6570\u58f0\u660e\uff09  </p> <p>\u7ed3\u6784\u5916\u9762\u7684 <code>print()</code> \u79f0\u4e3a\u81ea\u7531\u51fd\u6570\uff0c\u548c\u4efb\u4f55\u7c7b\u90fd\u6ca1\u6709\u5173\u7cfb\uff0c\u5de6\u4e3a\u51fd\u6570\u81ea\u8eab\u662f\u72ec\u7acb\u7684\u3002  \u58f0\u660e\u5728\u7ed3\u6784\u5185\u7684\u51fd\u6570\u4e0d\u662f\u72ec\u7acb\u7684\uff0c\u4ece\u5c5e\u4e8e <code>Point</code> \u7ed3\u6784\u3002\u8fd8\u9700\u8981\u4e00\u4e2a body.  </p> <pre><code>struct Point {\n    int x;\n    int y;\n    void print();       \n}Point;\n\nvoid Point::print()\n{\n    printf(\"%d %d\\n\", x, y);\n}\n</code></pre> <p>C++ \u4e2d\u4e0d\u9700\u8981 <code>typedef</code> \u6765\u58f0\u660e\u7ed3\u6784\u4f53\u3002 <code>a.print()</code> \u5373\u53ef\u8c03\u7528\u7ed3\u6784\u4f53\u5185\u6210\u5458\u51fd\u6570\u3002\u4f46\u662f\u8fd9\u4e2a\u6210\u5458\u51fd\u6570\u5982\u4f55\u77e5\u9053\u6211\u4eec\u8981\u8f93\u51fa\u7684\u5c31\u662f <code>a.x a.y</code> ?  </p> <p>\u6211\u4eec\u5728\u6210\u5458\u51fd\u6570\u5185 <code>cout &lt;&lt; this &lt;&lt; endl;</code> \u53d1\u73b0 <code>this</code> \u548c <code>&amp;a</code> \u76f8\u540c\u3002 </p> <pre><code>void Point::init(int x, int y)\n{\n    this-&gt;x = x;\n    this-&gt;y = y;\n}\n</code></pre> <p>\u8fd9\u91cc\u5fc5\u987b\u52a0 <code>this</code>, \u5426\u5219\u7c7b\u4f3c\u4e8e\u5c40\u90e8\u53d8\u91cf\u4f1a\u5c4f\u853d\u5168\u5c40\u53d8\u91cf\uff0c\u7f16\u8bd1\u5668\u4f1a\u8ba4\u4e3a <code>x = x</code> \u4ec0\u4e48\u4e5f\u6ca1\u505a\u3002</p>"},{"location":"OOP/oop2/#resolver","title":"<code>::</code>resolver(\u9884\u89e3\u6790\u5668)","text":"<ul> <li><code>&lt;Class Name&gt;::&lt;function name&gt;</code></li> <li><code>::&lt;function name&gt;</code></li> </ul> <pre><code>void S::f(){\n::f(); // Would be recursive otherwise!\n::a++; // Select the global a  \na--; // The a at class scope\n}\n</code></pre> Info <p><code>Point</code> \u662f\u59d3, <code>init</code> \u662f\u540d\uff0c\u56e0\u6b64 <code>Point::init</code> \u5171\u540c\u6784\u6210\u4e86\u6210\u5458\u51fd\u6570\u7684\u540d\u5b57\uff0c\u56e0\u6b64 <code>void</code> \u9700\u8981\u653e\u5728\u51fd\u6570\u540d\u524d\u9762\uff0c\u5373 <code>void Point::init</code>. </p>"},{"location":"OOP/oop2/#this-the-hidden-parameter","title":"this: the hidden parameter","text":"<ul> <li>this is a hidden parameter for all member functions, with the type of the struct</li> </ul> <pre><code>void Stash::initialize(int sz) \n</code></pre> <p>\\(\u2794\\) (can be regarded as) </p> <pre><code>void Stash::initialize(Stash* this, int sz)\n</code></pre> <ul> <li>To call the function, you must specify a variable</li> </ul> <pre><code>Stash a; \na.initialize(10);\n</code></pre> <p>\\(\u2794\\) (can be regarded as)</p> <pre><code>Stash::initialize(&amp;a,10);\n</code></pre> <ul> <li>Inside member functions, you can use this as the pointer to the variable that calls the function.</li> <li>this is a natural local variable of all structs member functions that you can not define, but can use it directly.</li> </ul>"},{"location":"OOP/oop2/#container","title":"Container","text":"<p>Abstract</p> <ul> <li>Container is an object that holds other objects.</li> <li>For most kinds of containers, the common interface is put() and get().</li> <li>Stash is a container that stores objects and can be expanded during running.</li> </ul> <p>Stash</p> <ul> <li>Typeless container.</li> <li>Stores objects of the same type.<ul> <li>Initialized w/ the size of the type </li> <li>Doesn\u2019t care the type but the size</li> </ul> </li> <li>add() and fetch() </li> <li>Expanded when needed</li> </ul> <p></p>"},{"location":"OOP/oop2/#objects","title":"Objects","text":"<p>Objects = Attributes + Services</p> <ul> <li>Data: the properties or status </li> <li>Operations: the functions </li> </ul> Ticket Machine <ul> <li>We make a program simulate the  procedure of buying tickets.  It works.  But there is no such machine. There's  nothing left for the further development. </li> </ul> <ul> <li>Objects(cat)<ul> <li>Represent things, events, or concepts</li> <li>Respond to messages at run-time</li> </ul> </li> <li>Classes(cat class)<ul> <li>Define properties of instances</li> <li>Act like types in C++</li> </ul> </li> </ul> <p></p>"},{"location":"OOP/oop2/#_1","title":"\u8bbf\u95ee\u63a7\u5236","text":"<p>Info</p> <p><code>private</code>\u548c<code>public</code>\u63cf\u8ff0\u4e86\u5bf9\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u63a7\u5236\u3002\u4f7f\u7528\u7c7b\u5bf9\u8c61\u7684\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u516c\u6709\u90e8\u5206\uff0c\u4f46\u662f\u79c1\u6709\u5bf9\u8c61\u53ea\u80fd\u901a\u8fc7\u516c\u6709\u6210\u5458\u51fd\u6570(\u6216\u53cb\u5143\u51fd\u6570)\u6765\u8bbf\u95ee\u3002</p> <ul> <li>\u65e0\u8bba\u7c7b\u6210\u5458\u662f\u6570\u636e\u6210\u5458\u8fd8\u662f\u6210\u5458\u51fd\u6570\uff0c\u90fd\u53ef\u4ee5\u5728\u7c7b\u7684\u516c\u6709\u90e8\u5206\u6216\u79c1\u6709\u90e8\u5206\u4e2d\u58f0\u660e\u5b83\u3002\u4f46\u7531\u4e8e\u9690\u85cf\u6570\u636e\u662fOOP\u4e3b\u8981\u76ee\u6807\u4e4b\u4e00\uff0c\u56e0\u6b64\u901a\u5e38\u6570\u636e\u9879\u653e\u5728\u79c1\u6709\u90e8\u5206\u800c\u7ec4\u6210\u7c7b\u63a5\u53e3\u653e\u5728\u516c\u6709\u90e8\u5206</li> <li>\u901a\u5e38\uff0c\u4f7f\u7528\u79c1\u6709\u51fd\u6570\u6765\u5904\u7406\u4e0d\u5c5e\u4e8e\u516c\u6709\u63a5\u53e3\u7684\u90e8\u5206</li> </ul>"},{"location":"OOP/oop2/#_2","title":"\u5c01\u88c5","text":"<ul> <li>\u7c7b\u8bbe\u8ba1\u5c3d\u53ef\u80fd\u5c06\u516c\u6709\u63a5\u53e3\u4e0e\u5b9e\u73b0\u7ec6\u8282\u5206\u5f00\u3002\u516c\u6709\u63a5\u53e3\u8868\u793a\u8bbe\u8ba1\u7684\u62bd\u8c61\u7ec4\u4ef6\uff0c\u5c06\u5b9e\u73b0\u7ec6\u8282\u653e\u5728\u4e00\u8d77\u5e76\u5c06\u4ed6\u4eec\u4e0e\u62bd\u8c61\u5206\u5f00\u79f0\u4e4b\u4e3a\u5c01\u88c5</li> <li>\u6570\u636e\u9690\u85cf(\u5c06\u6570\u636e\u653e\u5728\u7c7b\u7684\u79c1\u6709\u90e8\u5206\u4e2d)\u4e5f\u662f\u4e00\u79cd\u5c01\u88c5\uff0c\u5c06\u5b9e\u73b0\u7ec6\u8282\u9690\u85cf\u5728\u79c1\u6709\u90e8\u5206(\u79c1\u6709\u63a5\u53e3)\u4e5f\u662f\u5c01\u88c5</li> </ul>"},{"location":"OOP/oop2/#_3","title":"\u5b9e\u73b0\u6210\u5458\u51fd\u6570","text":"<p>Abstract</p> <p>\u7c7b\u7684\u63cf\u8ff0\u7684\u7b2c\u4e8c\u90e8\u5206\uff1a\u4e3a\u90a3\u4e9b\u7c7b\u58f0\u660e\u7684\u539f\u578b\u8868\u793a\u7684\u6210\u5458\u51fd\u6570\u63d0\u4f9b\u4ee3\u7801 - \u5b9a\u4e49\u6210\u5458\u51fd\u6570\u65f6\uff0c\u4f7f\u7528\u4f5c\u7528\u57df\u89e3\u6790\u8fd0\u7b97\u7b26<code>(::)</code>\u6765\u6807\u8bc6\u51fd\u6570\u6240\u5c5e\u7684\u7c7b - \u7c7b\u7684\u65b9\u6cd5\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u7684<code>private</code>\u7ec4\u4ef6</p>"},{"location":"OOP/oop2/#inline-function","title":"Inline Function","text":"<p>Info</p> <p>\u5728C\u8bed\u8a00\u4e2d\uff0c\u5982\u679c\u4e00\u4e9b\u51fd\u6570\u88ab\u9891\u7e41\u8c03\u7528\uff0c\u4e0d\u65ad\u5730\u6709\u51fd\u6570\u5165\u6808\uff0c\u5373\u51fd\u6570\u6808\uff0c\u4f1a\u9020\u6210\u6808\u7a7a\u95f4\u6216\u6808\u5185\u5b58\u7684\u5927\u91cf\u6d88\u8017\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u7279\u522b\u7684\u5f15\u5165\u4e86<code>inline</code>\u4fee\u9970\u7b26\uff0c\u8868\u793a\u4e3a\u5185\u8054\u51fd\u6570\u3002(\u6808\u7a7a\u95f4\u5c31\u662f\u6307\u653e\u7f6e\u7a0b\u5f0f\u7684\u5c40\u90e8\u6570\u636e\u4e5f\u5c31\u662f\u51fd\u6570\u5185\u6570\u636e\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5728\u7cfb\u7edf\u4e0b\uff0c\u6808\u7a7a\u95f4\u662f\u6709\u9650\u7684\uff0c\u5047\u5982\u9891\u7e41\u5927\u91cf\u7684\u4f7f\u7528\u5c31\u4f1a\u9020\u6210\u56e0\u6808\u7a7a\u95f4\u4e0d\u8db3\u6240\u9020\u6210\u7684\u7a0b\u5f0f\u51fa\u9519\u7684\u95ee\u9898\uff0c\u51fd\u6570\u7684\u6b7b\u5faa\u73af\u9012\u5f52\u8c03\u7528\u7684\u6700\u7ec8\u7ed3\u679c\u5c31\u662f\u5bfc\u81f4\u6808\u5185\u5b58\u7a7a\u95f4\u67af\u7aed\u3002)</p> Example <pre><code>class Account\n{\nprivate:\n    int number;\n    void set_num(){number += 1;}//Inline Function\n}\uff1b\n/*\u6216\u8005\u4f7f\u7528inline\u4fee\u9970\u7b26*/\nclass Account\n{\nprivate:\n    int number;\n    void set_num();//Inline Function\n}\uff1b\ninline void set_num()\n{\n    number += 1;\n}\n</code></pre> <p>\u53ef\u4ee5\u7c7b\u6bd4\u4e3a<code>#define</code>,\u51fd\u6570\u4f1a\u5728\u8c03\u7528\u5b83\u7684\u5730\u65b9\u8fdb\u884c\u66ff\u6362\u3002(\u4e00\u822c\u5185\u8054\u51fd\u6570\u4e0d\u5efa\u8bae\u8d85\u8fc7\u5341\u884c)\uff0c\u8fd8\u8981\u786e\u4fdd\u5185\u8054\u51fd\u6570\u5bf9\u591a\u6587\u4ef6\u7a0b\u5e8f\u4e2d\u7684\u6240\u6709\u6587\u4ef6\u90fd\u662f\u53ef\u7528\u7684\uff0c\u6700\u7b80\u4fbf\u7684\u65b9\u6cd5\u662f\uff1a\u5c06\u5185\u8054\u5b9a\u4e49\u653e\u5728\u5b9a\u4e49\u7c7b\u7684\u5934\u6587\u4ef6\u91cc\u3002</p>"},{"location":"OOP/oop2/#constructor","title":"Constructor(\u6784\u9020\u51fd\u6570)","text":"<ul> <li>\u6784\u9020\u51fd\u6570\u867d\u7136\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u4f46\u662f\u6ca1\u6709\u88ab\u58f0\u660e\u4e3a<code>void</code>\uff0c\u5b9e\u9645\u4e0a\uff0c\u6784\u9020\u51fd\u6570\u6ca1\u6709\u58f0\u660e\u7c7b\u578b\u3002</li> <li>\u9690\u5f0f\u8c03\u7528\u6784\u9020\u51fd\u6570</li> <li><code>Stock garment(\"Furry Mason\", 50, 2.5);</code></li> <li>\u663e\u5f0f\u8c03\u7528\u6784\u9020\u51fd\u6570</li> <li><code>Stock gaement = Stock(\"Furry Mason\", 50, 2.5);</code></li> <li>\u4f7f\u7528<code>new</code>\u52a8\u6001\u5206\u914d\u5185\u5b58</li> <li><code>Stock *pstock = new Stock(\"Furry Mason\", 50, 2.5);</code></li> </ul> <p>default constructor(\u9690\u5f0f\u6784\u9020\u51fd\u6570)</p> <ul> <li>\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\u4efb\u4f55\u6784\u9020\u51fd\u6570\uff0c\u5219<code>C++</code>\u5c06\u81ea\u52a8\u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u5b83\u662f\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u9690\u5f0f\u7248\u672c\uff0c\u4e0d\u505a\u4efb\u4f55\u5de5\u4f5c</li> <li>\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u6ca1\u6709\u4efb\u4f55\u53c2\u6570\uff0c\u56e0\u4e3a\u58f0\u660e\u4e2d\u4e0d\u5305\u542b</li> <li>\u5982\u679c\u4e3a\u7c7b\u63d0\u4f9b\u4e86\u975e\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u800c\u6ca1\u6709\u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u5219\u7c7b\u4f3c\u4e0b\u9762\u7684\u58f0\u660e\u5c06\u51fa\u9519(\u7981\u6b62\u521b\u5efa\u672a\u521d\u59cb\u5316\u7684\u5bf9\u8c61)<ul> <li><code>Stock stock1;</code></li> </ul> </li> <li>\u5b9a\u4e49\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u6709\u4e24\u79cd\u65b9\u6cd5</li> <li>\u7ed9\u5df2\u6709\u6784\u9020\u51fd\u6570\u63d0\u4f9b\u6240\u6709\u53c2\u6570\u9ed8\u8ba4\u503c</li> <li>\u51fd\u6570\u91cd\u8f7d\u6765\u5b9a\u4e49\u4e00\u4e2a\u6ca1\u6709\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570 </li> </ul> <ul> <li><code>C++11</code>\u5217\u8868\u521d\u59cb\u5316(\u63d0\u4f9b\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u53c2\u6570\u5217\u8868\u5339\u914d\u7684\u5185\u5bb9)\uff1a</li> <li><code>Stock stock1 = {\"name\", 2, 2.0};</code> </li> <li><code>Stock stock1 {\"name\", 2, 2.0};</code></li> </ul>"},{"location":"OOP/oop2/#destructor","title":"Destructor(\u6790\u6784\u51fd\u6570)","text":"<ul> <li>\u5982\u679c\u6784\u9020\u51fd\u6570\u4f7f\u7528<code>new</code>\u6765\u5206\u914d\u5185\u5b58,\u5219\u4f7f\u7528<code>delete</code>\u6765\u91ca\u653e\u7a7a\u95f4</li> <li> <p>\u5982\u679c\u6ca1\u6709\u4f7f\u7528<code>new</code>,\u5219\u4f1a\u8ba9\u7f16\u8bd1\u5668\u751f\u6210\u4e00\u4e2a\u9690\u5f0f\u6790\u6784\u51fd\u6570</p> </li> <li> <p><code>C++</code>\u4e2d\u5bf9\u8c61<code>new</code>\u51fa\u6765\u548c\u76f4\u63a5\u58f0\u660e\u7684\u533a\u522b(\u7c7b\u4f3cmalloc)</p> </li> <li>\u9996\u5148\uff0c\u6700\u76f4\u89c2\u7684\uff0cnew\u51fa\u6765\u7684\u5bf9\u8c61\u9700\u8981\u4f7f\u7528\u6307\u9488\u63a5\u6536\uff0c\u800c\u76f4\u63a5\u58f0\u660e\u7684\u4e0d\u7528\u3002\u4f8b\u5982 A* a=new A() \u4e0eA a\uff08\uff09\u3002</li> <li><code>new</code>\u51fa\u6765\u7684\u5bf9\u8c61\u662f\u76f4\u63a5\u4f7f\u7528\u5806\u7a7a\u95f4\uff0c\u800c\u5c40\u90e8\u58f0\u660e\u4e00\u4e2a\u5bf9\u8c61\u662f\u653e\u5728\u6808\u4e2d\u3002</li> <li><code>new</code>\u51fa\u6765\u7684\u5bf9\u8c61\u7c7b\u4f3c\u4e8e\u7533\u8bf7\u7a7a\u95f4\uff0c\u56e0\u6b64\u9700\u8981delete\u9500\u6bc1\uff0c\u800c\u76f4\u63a5\u58f0\u660e\u7684\u5bf9\u8c61\u5219\u5728\u4f7f\u7528\u5b8c\u76f4\u63a5\u9500\u6bc1\u3002</li> <li><code>new</code>\u51fa\u6765\u7684\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u662f\u5177\u6709\u5168\u5c40\u6027\uff0c\u8b6c\u5982\u5728\u4e00\u4e2a\u51fd\u6570\u5757\u91ccnew\u4e00\u4e2a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u5c06\u8be5\u5bf9\u8c61\u7684\u6307\u9488\u8fd4\u56de\u56de\u53bb\uff0c\u8be5\u5bf9\u8c61\u4f9d\u65e7\u5b58\u5728\u3002\u800c\u58f0\u660e\u7684\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u53ea\u5b58\u5728\u4e8e\u58f0\u660e\u4e86\u8be5\u5bf9\u8c61\u7684\u51fd\u6570\u5757\u4e2d\uff0c\u5982\u679c\u8fd4\u56de\u8be5\u58f0\u660e\u7684\u5bf9\u8c61\uff0c\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5df2\u7ecf\u88ab\u9500\u6bc1\u7684\u5bf9\u8c61\u3002</li> <li><code>new</code>\u5bf9\u8c61\u6307\u9488\u7528\u9014\u5e7f\u6cdb\uff0c\u6bd4\u5982\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u3001\u51fd\u6570\u53c2\u6570\u7b49</li> </ul>"},{"location":"OOP/oop2/#this-pointerthis","title":"This Pointer(this \u6307\u9488)","text":"<p><code>this</code>\u6307\u9488\u6307\u5411\u7528\u6765\u8c03\u7528\u6210\u5458\u51fd\u6570\u7684\u5bf9\u8c61(this\u88ab\u4f5c\u4e3a\u9690\u85cf\u53c2\u6570\u4f20\u9012\u7ed9\u65b9\u6cd5) \u5982\u679c\u8981\u9632\u6b62<code>this</code>\u88ab\u8c03\u7528\u4fee\u6539\u6240\u6307\u5411\u7684\u5bf9\u8c61\u7684\u503c\uff0c\u5219\u53ef\u4ee5\u5728\u51fd\u6570\u58f0\u660e\u540e\u9762\u52a0\u4e0a<code>const</code></p> Info <p>\u6700\u521d\u7684UNIX\u5b9e\u73b0\u4f7f\u7528C++\u524d\u7aefcfront\u5c06C++\u7a0b\u5e8f\u8f6c\u5316\u4e3aC\u7a0b\u5e8f\u3002\u4f1a\u5c06\u9650\u5b9a\u7b26<code>ClassName::</code>\u8f6c\u6362\u4e3a\u51fd\u6570\u53c2\u6570(\u6307\u5411\u5bf9\u8c61\u7684\u6307\u9488)</p>"},{"location":"OOP/oop2/#_4","title":"\u5bf9\u8c61\u6570\u7ec4","text":"<ul> <li>\u5728\u6ca1\u6709\u663e\u5f0f\u6784\u9020\u51fd\u6570\u7684\u60c5\u51b5\u4e0b(\u6216\u663e\u5f0f\u6784\u9020\u51fd\u6570\u6709\u9ed8\u8ba4\u503c)\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u76f4\u63a5\u5982\u4e0b\u5b9a\u4e49</li> <li><code>Stock mystuff[4];</code>\u6216\u8005\u53ef\u4ee5\u5bc4\u5e0c\u671b\u4e8e\u81ea\u52a8\u8865\u8db3\u672a\u521d\u59cb\u5316\u7684\u5bf9\u8c61</li> <li>\u5426\u5219\u8981\u4e3a\u6bcf\u4e2a\u5143\u7d20\u8c03\u7528\u6784\u9020\u51fd\u6570</li> </ul> <pre><code>const int num = 4;\nStock stocks[num] = {\n    Stock(\"A\", 2, 2.0),\n    Stock(\"B\", 3, 3.0),\n    Stock(\"C\", 4, 4.0),\n    Stock(\"D\", 5, 5.0)\n};\n</code></pre>"},{"location":"OOP/oop2/#_5","title":"\u7c7b\u4f5c\u7528\u57df","text":""},{"location":"OOP/oop2/#_6","title":"\u4f5c\u7528\u57df\u4e3a\u7c7b\u7684\u5e38\u91cf","text":"<p>\u5982\u679c\u5e0c\u671b\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u4e00\u4e2a\u5e38\u91cf\uff0c\u8fd9\u6837\u505a\u662f\u9519\u8bef\u7684\u4f8b\u5b50\uff1a</p> <pre><code>class Bakery:\n{\nprivate:\n    const int months = 12; \n    double costs[months];   \n}\n</code></pre> <p>Warning</p> <p>\u58f0\u660e\u7c7b\u53ea\u662f\u63cf\u8ff0\u4e86\u5bf9\u8c61\u7684\u5f62\u5f0f\uff0c\u5e76\u6ca1\u6709\u521b\u5efa\u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u5728\u521b\u5efa\u5bf9\u8c61\u524d\uff0c\u5c06\u6ca1\u6709\u7528\u4e8e\u5b58\u50a8\u503c\u7684\u7a7a\u95f4\u3002</p>"},{"location":"OOP/oop2/#1","title":"1.\u58f0\u660e\u4e00\u4e2a\u679a\u4e3e","text":"<p>\u5728\u7c7b\u58f0\u660e\u4e2d\u58f0\u660e\u7684\u679a\u4e3e\u7684\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7c7b\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u679a\u4e3e\u4e3a\u6574\u578b\u53d8\u91cf\u63d0\u4f9b\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7c7b\u7684\u7b26\u53f7\u540d\u79f0\u3002</p> <p>Example</p> <p>\u540c\u4e3a\u8fd9\u4e2a<code>Bakrey</code>\u7c7b <pre><code>class Bakery:\n{\nprivate:\n    enum {enum = 12};\n    double costs[Months];\n}\n</code></pre></p> <p>\u6240\u6709\u5bf9\u8c61\u4e2d\u90fd\u4e0d\u5305\u542b\u679a\u4e3e(\u679a\u4e3e\u4e0d\u4f1a\u521b\u5efa\u7c7b\u6570\u636e\u6210\u5458)\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u57df\u7684\u4ee3\u7801\u9047\u5230\u5b83\u65f6\uff0c\u4f1a\u8fdb\u884c\u66ff\u6362\u3002</p>"},{"location":"OOP/oop2/#2static","title":"2.\u4f7f\u7528\u5173\u952e\u5b57<code>static</code>","text":"<p>Example</p> <p>\u5728<code>const</code>\u52a0\u4e0a<code>static</code> <pre><code>class Bakery:\n{\nprivate:\n    static const int months = 12; \n    double costs[months];   \n}\n</code></pre></p> <p>\u8fd9\u4e2a<code>static</code>\u7c7b\u578b\u7684\u53d8\u91cf\u4f1a\u88ab\u4e0e\u5176\u4ed6\u9759\u6001\u53d8\u91cf\u4e00\u8d77\u5b58\u50a8\uff0c\u800c\u4e0d\u662f\u5b58\u50a8\u5728\u5bf9\u8c61\u4e2d\u3002</p>"},{"location":"OOP/oop2/#_7","title":"\u4f5c\u7528\u57df\u5185\u679a\u4e3e","text":"<p>\u4f20\u7edf\u7684\u679a\u4e3e\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff0c\u5176\u4e2d\u4e4b\u4e00\u662f\u4e24\u4e2a\u679a\u4e3e\u5b9a\u4e49\u4e2d\u7684\u679a\u4e3e\u91cf\u53ef\u80fd\u53d1\u751f\u51b2\u7a81\u3002</p> <p>Example</p> <p>\u5982\u4e0b\uff0c<code>egg Small</code>\u548c<code>t_shirt Small</code>\u4f4d\u4e8e\u76f8\u540c\u7684\u4f5c\u7528\u57df\u4e2d\uff0c\u4ed6\u4eec\u5c06\u53d1\u751f\u51b2\u7a81\u3002 <pre><code>    enum egg {Small, Medium, Large, Jumbo};\n    enum t_shirt {Small, Medium, Large, Jumbo};\n</code></pre></p> <ul> <li><code>C++</code>\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b0\u679a\u4e3e\uff0c\u4f5c\u7528\u57df\u4e3a\u7c7b\u3002</li> </ul> <pre><code>enum class egg {Small, Medium, Large, Jumbo};\n</code></pre> <ul> <li><code>class</code>\u4e5f\u53ef\u4ee5\u66ff\u6362\u4e3a<code>struct</code></li> </ul> <p>\u4f46\u662f\u4f5c\u7528\u57df\u5185\u679a\u4e3e\u4e0d\u80fd\u8fdb\u884c\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u53ea\u80fd\u8fdb\u884c\u663e\u5f0f\u7c7b\u578b\u8f6c\u6362\u3002</p>"},{"location":"OOP/oop2/#using-class","title":"Using Class","text":"<p>Abstract</p> <ul> <li>Overload(\u91cd\u8f7d)</li> <li>Friends(\u53cb\u5143)</li> <li>\u81ea\u52a8\u8f6c\u6362\u548c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362</li> </ul>"},{"location":"OOP/oop2/#overload","title":"Overload(\u91cd\u8f7d)","text":"<p>!!! Info Overload(\u51fd\u6570\u91cd\u8f7d)     \u9ed8\u8ba4\u53c2\u6570\u8ba9\u60a8\u80fd\u591f\u4f7f\u7528\u4e0d\u540c\u6570\u76ee\u7684\u53c2\u6570\u8c03\u7528\u540c\u4e00\u4e2a\u51fd\u6570\uff0c\u800c\u51fd\u6570\u591a\u6001(\u51fd\u6570\u91cd\u8f7d)\u8ba9\u60a8\u80fd\u591f\u4f7f\u7528\u591a\u4e2a\u540c\u540d\u7684\u51fd\u6570\u3002\u51fd\u6570\u91cd\u8f7d\u7684\u5173\u952e\u662f\u51fd\u6570\u7279\u5f81\u6807(function signature):\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u3002</p>"},{"location":"OOP/oop2/#_8","title":"\u8fd0\u7b97\u7b26\u91cd\u8f7d\u9650\u5236","text":"<p>1.\u91cd\u8f7d\u540e\u7684\u8fd0\u7b97\u7b26\u5fc5\u987b\u6709\u4e00\u4e2a\u64cd\u4f5c\u6570\u662f\u7528\u6237\u5b9a\u4e49\u7684\u7c7b\u578b\u3002(\u9632\u6b62\u7528\u6237\u4e3a\u6807\u51c6\u7c7b\u578b\u91cd\u8f7d\u8fd0\u7b97\u7b26) 2.\u4e0d\u80fd\u8fdd\u53cd\u539f\u6765\u7684\u53e5\u6cd5\u89c4\u5219\u3002 3.\u4e0d\u80fd\u521b\u5efa\u65b0\u7684\u8fd0\u7b97\u7b26 4.\u4e0d\u80fd\u91cd\u8f7d\u5982\u4e0b\u7684\u8fd0\u7b97\u7b26</p> operator function sizeof sizeof\u8fd0\u7b97\u7b26 . \u6210\u5458\u8fd0\u7b97\u7b26 .* \u6210\u5458\u6307\u9488\u8fd0\u7b97\u7b26 :: \u4f5c\u7528\u57df\u89e3\u6790\u8fd0\u7b97\u7b26 ?: \u6761\u4ef6\u8fd0\u7b97\u7b26 typeid \u4e00\u4e2aRTTI\u8fd0\u7b97\u7b26 const_cast \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26 dynamic_cast \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26 reinterpret_cast \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26 static_cast \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26 <p>5.\u5927\u90e8\u5206\u8fd0\u7b97\u7b26\u90fd\u53ef\u4ee5\u901a\u8fc7\u6210\u5458\u6216\u975e\u6210\u5458\u51fd\u6570\u6765\u8fdb\u884c\u91cd\u8f7d\uff0c\u4f46\u4e0b\u9762\u7684\u8fd0\u7b97\u7b26\u53ea\u80fd\u901a\u8fc7\u6210\u5458\u51fd\u6570\u8fdb\u884c\u91cd\u8f7d\u3002</p> <ul> <li><code>=</code> : \u8d4b\u503c\u8fd0\u7b97\u7b26</li> <li><code>()</code> : \u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26</li> <li><code>[]</code> : \u4e0b\u6807\u8fd0\u7b97\u7b26</li> <li><code>-&gt;</code> : \u901a\u8fc7\u6307\u9488\u8bbf\u95ee\u7c7b\u6210\u5458\u7684\u8fd0\u7b97\u7b26</li> </ul>"},{"location":"OOP/oop3/","title":"Chapter 3 Object Interaction","text":""},{"location":"OOP/oop3/#_1","title":"\u591a\u6587\u4ef6\u5de5\u7a0b","text":""},{"location":"OOP/oop3/#definition-of-a-class","title":"Definition of a class","text":"<ul> <li>In C++, separated .h and .cpp files are used to define one class.</li> <li>Class declaration and prototypes in that class are inthe header file (.h).</li> <li>All the bodies of these functions are in the source file (.cpp).</li> </ul>"},{"location":"OOP/oop3/#compile-unit","title":"Compile unit","text":"<ul> <li>The compiler sees only one .cpp file, and generates <code>.obj</code> file</li> <li>The linker links all <code>.obj</code> into one executable file</li> <li>To provide information about functions in other <code>.cpp</code> files, use <code>.h</code></li> <li>\u53ea\u6709.cpp\u624d\u4f1a\u751f\u6210obj</li> </ul>"},{"location":"OOP/oop3/#header-interface","title":"Header = interface","text":"<ul> <li>The header is a contract between you and the user of your code.</li> <li>The compile enforces the contract by requiring you to declare all structures and functions before they are used.</li> </ul>"},{"location":"OOP/oop3/#declarations-vs-definitions","title":"Declarations vs. Definitions","text":"<ul> <li>A .cpp file is a compile unit</li> <li>Only declarations are allowed to be in .h <ul> <li>extern variables</li> <li>function prototypes </li> <li>class/struct declaration</li> </ul> </li> </ul>"},{"location":"OOP/oop3/#the-makefile-utility","title":"The Makefile utility","text":""},{"location":"OOP/oop3/#motivation","title":"Motivation","text":"<ul> <li>Small programs single file</li> <li>\u201cNot so small\u201d programs :     \u2013 Many lines of code     \u2013 Multiple components     \u2013 More than one programmer</li> </ul>"},{"location":"OOP/oop3/#ctor-and-dtor","title":"C'tor and D'tor","text":""},{"location":"OOP/oop3/#pointinit","title":"Point::init()","text":"<pre><code>class Point {\npublic: \n    void init(int x, int y); \n    void print() const; \n    void move(int dx, int dy);\nprivate: \n    int x; \n    int y;\n};\n\nPoint a;\na.init(1,2);\na.move(2,2);\na.print();\n</code></pre>"},{"location":"OOP/oop3/#guaranteed-initialization-with-the-constructor","title":"Guaranteed initialization with the constructor","text":"<ul> <li>If a class has a constructor, the compiler automatically calls that constructor at the point an object is created, before client programmers can get their hands on the  object.</li> <li>The  name of the constructor is the same as the name of the class.</li> </ul>"},{"location":"Paper/","title":"Index","text":"<p>Abstract</p> <p>\u8fd9\u91cc\u8bb0\u5f55\u4e86\u5173\u4e8e\u591a\u6a21\u6001\u4ee5\u53ca\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u8bba\u6587\u9605\u8bfb\u7b14\u8bb0</p> <p> \u5f31\u5c0f\u4e0e\u65e0\u77e5\u4e0d\u662f\u751f\u5b58\u7684\u969c\u788d\uff0c\u50b2\u6162\u624d\u662f\u3002 </p>"},{"location":"Paper/DDPM/","title":"Denoising Diffusion Probabilistic Models","text":""},{"location":"Paper/DDPM/#reference","title":"Reference","text":"<p>Lil's blog</p> <p>\u7531\u6d45\u5165\u6df1\u4e86\u89e3Diffusion Model </p> <p>\u53bb\u566a\u6269\u6563\u6982\u7387\u6a21\u578b\uff08Denoising Diffusion Probabilistic Models\uff09</p>"},{"location":"Paper/DDPM/#definition","title":"Definition","text":"<p>Diffusion Model\u6709\u4e24\u4e2a\u8fc7\u7a0b\uff1a\u524d\u5411\u8fc7\u7a0b\uff08forward process\uff09\u548c\u53cd\u5411\u8fc7\u7a0b\uff08reverse process\uff09\uff0c\u5176\u4e2d\u524d\u5411\u8fc7\u7a0b\u53c8\u79f0\u4e3a\u6269\u6563\u8fc7\u7a0b\uff08diffusion process\uff09\u3002\u65e0\u8bba\u662f\u524d\u5411\u8fc7\u7a0b\u8fd8\u662f\u53cd\u5411\u8fc7\u7a0b\u90fd\u662f\u4e00\u4e2a\u53c2\u6570\u5316\u7684\u9a6c\u5c14\u53ef\u592b\u94fe\uff08<code>Markov chain</code>\uff09\uff0c\u5176\u4e2d\u53cd\u5411\u8fc7\u7a0b\u53ef\u7528\u4e8e\u751f\u6210\u6570\u636e\u6837\u672c\uff08\u5b83\u7684\u4f5c\u7528\u7c7b\u4f3cGAN\u4e2d\u7684\u751f\u6210\u5668\uff0c\u53ea\u4e0d\u8fc7GAN\u751f\u6210\u5668\u4f1a\u6709\u7ef4\u5ea6\u53d8\u5316\uff0c\u800c<code>DDPM</code>\u7684\u53cd\u5411\u8fc7\u7a0b\u6ca1\u6709\u7ef4\u5ea6\u53d8\u5316\uff09\u3002</p> <p></p> <p>- \\(X_0\\) \u5230\\(X_t\\)\u4e3a\u9010\u6b65\u52a0\u566a\u8fc7\u7684\u524d\u5411\u7a0b\uff0c\u566a\u58f0\u662f\u5df2\u77e5\u7684\uff0c\u8be5\u8fc7\u7a0b\u4ece\u539f\u59cb\u56fe\u7247\u9010\u6b65\u52a0\u566a\u81f3\u4e00\u7ec4\u7eaf\u566a\u58f0\u3002</p> <p>- \\(X_t\\)\u5230\\(X_0\\)\u200b\u4e3a\u5c06\u4e00\u7ec4\u968f\u673a\u566a\u58f0\u8fd8\u539f\u4e3a\u8f93\u5165\u7684\u8fc7\u7a0b\u3002\u8be5\u8fc7\u7a0b\u9700\u8981\u5b66\u4e60\u4e00\u4e2a\u53bb\u566a\u8fc7\u7a0b\uff0c\u76f4\u5230\u8fd8\u539f\u4e00\u5f20\u56fe\u7247\u3002</p>"},{"location":"Paper/DDPM/#forward-process","title":"Forward Process","text":"<p>\u524d\u5411\u8fc7\u7a0b\u662f\u52a0\u566a\u7684\u8fc7\u7a0b\uff0c\u524d\u5411\u8fc7\u7a0b\u4e2d\u56fe\u50cf\\(\\mathbf{x}_t\\)\u53ea\u548c\u4e0a\u4e00\u65f6\u523b\u7684\\(\\mathbf{x}_{t-1}\\)\u6709\u5173, \u8be5\u8fc7\u7a0b\u53ef\u4ee5\u89c6\u4e3a\u9a6c\u5c14\u79d1\u592b\u8fc7\u7a0b, \u6ee1\u8db3:</p> \\[ q(\\mathbf{x}_t \\vert \\mathbf{x}_{t-1}) = \\mathcal{N}(\\mathbf{x}_t; \\sqrt{1 - \\beta_t} \\mathbf{x}_{t-1}, \\beta_t\\mathbf{I}) \\quad q(\\mathbf{x}_{1:T} \\vert \\mathbf{x}_0) = \\prod^T_{t=1} q(\\mathbf{x}_t \\vert \\mathbf{x}_{t-1}) \\] <p>\u53ef\u4ee5\u63a8\u51fa\\(\\mathbf{x}_0\\)\u4e0e\\(\\mathbf{x}_{t}\\)\u7684\u5173\u7cfb\u5982\u4e0b</p> \\[ \\begin{aligned} \\mathbf{x}_t &amp;= \\sqrt{\\alpha_t}\\mathbf{x}_{t-1} + \\sqrt{1 - \\alpha_t}\\boldsymbol{\\epsilon}_{t-1} &amp; \\text{ ;where } \\boldsymbol{\\epsilon}_{t-1}, \\boldsymbol{\\epsilon}_{t-2}, \\dots \\sim \\mathcal{N}(\\mathbf{0}, \\mathbf{I}) \\\\ &amp;= \\sqrt{\\alpha_t \\alpha_{t-1}} \\mathbf{x}_{t-2} + \\sqrt{1 - \\alpha_t \\alpha_{t-1}} \\bar{\\boldsymbol{\\epsilon}}_{t-2} &amp; \\text{ ;where } \\bar{\\boldsymbol{\\epsilon}}_{t-2} \\text{ merges two Gaussians (*).} \\\\ &amp; = \\dots \\\\ &amp;= \\sqrt{\\bar{\\alpha}_t}\\mathbf{x}_0 + \\sqrt{1 - \\bar{\\alpha}_t}\\boldsymbol{\\epsilon} \\\\ q(\\mathbf{x}_t \\vert \\mathbf{x}_0) &amp;= \\mathcal{N}(\\mathbf{x}_t; \\sqrt{\\bar{\\alpha}_t} \\mathbf{x}_0, (1 - \\bar{\\alpha}_t)\\mathbf{I}) \\end{aligned} \\] \\[ \\alpha_t = 1 - \\beta_t  \\quad \\bar{\\alpha}_t = \\prod_{i=1}^t \\alpha_i \\] <p>\u6ce8\uff1a\\(\\beta_t\\)\u7531\u5bf9\u5e94\u65f6\u523b\\(t\\)\u200b\u51b3\u5b9a,</p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u968f\u7740\\(t\\)\u7684\u589e\u5927\uff0c \\(\\mathbf{x}_t\\)\u8d8a\u6765\u8d8a\u63a5\u8fd1\u7eaf\u566a\u58f0\u3002\u5f53\\(t\\)\u2192\u221e \uff0c \\(\\mathbf{x}_t\\)\u662f\u5b8c\u5168\u7684\u9ad8\u65af\u566a\u58f0</p>"},{"location":"Paper/DDPM/#reverse-process","title":"reverse process","text":"\\[ p_\\theta(\\mathbf{x}_{0:T}) = p(\\mathbf{x}_T) \\prod^T_{t=1} p_\\theta(\\mathbf{x}_{t-1} \\vert \\mathbf{x}_t) \\quad p_\\theta(\\mathbf{x}_{t-1} \\vert \\mathbf{x}_t) = \\mathcal{N}(\\mathbf{x}_{t-1}; \\boldsymbol{\\mu}_\\theta(\\mathbf{x}_t, t), \\boldsymbol{\\Sigma}_\\theta(\\mathbf{x}_t, t)) \\]"},{"location":"Paper/DDPM/#characteristic","title":"Characteristic","text":"<p>diffusion model\u548c\u5176\u4ed6\u6a21\u578b\u6700\u5927\u7684\u533a\u522b\u662f\u5b83\u7684latent code(z)\u548c\u539f\u56fe\u662f\u540c\u5c3a\u5bf8\u5927\u5c0f\u7684</p>"},{"location":"Paper/DDPM/#reparameterization-trick","title":"\u91cd\u53c2\u6570\uff08reparameterization trick\uff09","text":"\\[ \\mathbf{x}_t = \\mathbf{x}_{t-1} + \\frac{\\delta}{2} \\nabla_\\mathbf{x} \\log p(\\mathbf{x}_{t-1}) + \\sqrt{\\delta} \\boldsymbol{\\epsilon}_t ,\\quad\\text{where } \\boldsymbol{\\epsilon}_t \\sim \\mathcal{N}(\\mathbf{0}, \\mathbf{I}) \\]"},{"location":"Paper/DDPM/#tbd","title":"TBD","text":""},{"location":"Python/","title":"Python\u7a0b\u5e8f\u8bbe\u8ba1","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201cPython\u7a0b\u5e8f\u8bbe\u8ba1\u201d \u8bfe\u7a0b\u53ca\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <ul> <li>Prof:\u6c88\u777f</li> <li>TA\uff1a\u5468\u5065\u5747</li> </ul>"},{"location":"Python/Py1/","title":"Introduction","text":"<p>Abstract</p> <ul> <li>\u8bed\u8a00\u6982\u8ff0</li> <li>\u6570\u636e\u8868\u793a\u4e0e\u8bbe\u8ba1</li> <li>\u6d41\u7a0b\u63a7\u5236</li> <li>\u6587\u4ef6\u8bfb\u5199</li> <li>\u6a21\u5757\u4e0e\u5305</li> <li>\u5e38\u7528\u7b97\u6cd5</li> </ul>"},{"location":"Python/Py1/#_1","title":"\u7f16\u7801","text":""},{"location":"Python/Py1/#_2","title":"\u539f\u7801\uff0c\u53cd\u7801\uff0c\u8865\u7801","text":"<p>Example</p> <p>-78\u7684\u539f\u7801\uff0c\u53cd\u7801\uff0c\u8865\u7801\uff08\u7528\u516b\u4f4d\u8868\u793a\uff09</p> <ul> <li>\u539f\u7801\uff08Sign-Magnitude\uff09\uff1a</li> <li>\u539f\u7801\u5c31\u662f\u7b26\u53f7\u4f4d\u52a0\u4e0a\u771f\u503c\u7684\u7edd\u5bf9\u503c</li> </ul> <p>Example</p> <ul> <li>\u5c0678\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 01001110\u3002</li> <li>\u5c06\u7b26\u53f7\u4f4d\u6539\u4e3a1\uff0c\u5f97\u5230\u539f\u7801\uff1a11001110\u3002</li> </ul> <ul> <li>\u53cd\u7801\uff08One's Complement\uff09\uff1a</li> <li>\u6b63\u6570\u7684\u53cd\u7801\u5c31\u662f\u5176\u672c\u8eab</li> <li>\u8d1f\u6570\u7684\u53cd\u7801\u662f\u5728\u5176\u539f\u7801\u7684\u57fa\u7840\u4e0a\uff0c\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u5176\u4f59\u5404\u4f4d\u53d6\u53cd</li> </ul> <p>Example</p> <ul> <li>\u5bf9\u539f\u7801\u7684\u975e\u7b26\u53f7\u4f4d\u53d6\u53cd\uff0c\u5f97\u5230\u53cd\u7801\uff1a10110001\u3002</li> </ul> <ul> <li>\u8865\u7801\uff08Two's Complement\uff09\uff1a</li> <li>\u6b63\u6570\u7684\u8865\u7801\u5c31\u662f\u5176\u672c\u8eab</li> <li>\u8d1f\u6570\u7684\u8865\u7801\u662f\u5728\u5176\u539f\u7801\u7684\u57fa\u7840\u4e0a\uff0c\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u5176\u4f59\u5404\u4f4d\u53d6\u53cd\uff0c\u6700\u540e+1\u3002(\u4e5f\u5373\u5728\u53cd\u7801\u7684\u57fa\u7840\u4e0a+1)</li> </ul> <p>Example</p> <p>\u53cd\u7801\u52a01\uff0c\u5f97\u5230\u8865\u7801\uff1a10110010\u3002</p> <ul> <li>\u6b63\u6570\u4e0e\u65e0\u7b26\u53f7\u6570\u5904\u7406\u76f8\u540c</li> </ul>"},{"location":"Python/Py1/#_3","title":"\u6587\u5b57\u7f16\u7801","text":"<ul> <li>UTF-8\u662f\u9488\u5bf9Unicode\u7684\u4e00\u79cd\u53ef\u53d8\u957f\u5b57\u7b26\u7f16\u7801\u6a21\u5f0f\uff0c\u4f7f\u7528\u65f6\u628a\u6240\u6709Unicode\u8f6c\u6362UTF-8\uff0c\u6bcf\u4e2aASCii\u90fd\u6709\u5bf9\u5e94\u7684UTF-8,\u4e0e8\u4f4d\u7684\u4e00\u81f4</li> <li>Unicode\u56ca\u62ec\u4e86\u6240\u6709\u7684\u8bed\u8a00\u7684\u6240\u6709\u5b57\u7b26</li> </ul>"},{"location":"Python/Py2/","title":"Input and Output","text":"<p>Abstract</p> <ul> <li>\u8f93\u5165\u51fd\u6570</li> <li>\u8f93\u51fa\u51fd\u6570</li> <li>\u8f93\u51fa\u683c\u5f0f\u63a7\u5236</li> <li>\u6570\u636e\u7c7b\u578b</li> <li>\u6807\u8bc6\u7b26</li> <li>\u4fdd\u7559\u5b57</li> </ul>"},{"location":"Python/Py2/#input","title":"\u8f93\u5165\u51fd\u6570 input","text":"<ul> <li>input()\u51fd\u6570\u5b9e\u73b0\u4e86\u4ece\u63a7\u5236\u53f0\u8bfb\u5165\u8f93\u5165</li> </ul> <pre><code>a = input()\ntype(a)\n\n&lt;class 'str'&gt;\n</code></pre> <ul> <li>\u770b\u4f3c\u6574\u6570\u7c7b\u578b\uff0c\u4f46\u5b9e\u5219\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u82e5\u60f3\u83b7\u5f97\u6574\u6570\u7c7b\u578b\uff0c\u53ef\u7528<code>int()</code>\u51fd\u6570\u8fdb\u884c\u8f6c\u6362\uff1a<code>a=int(input())</code></li> <li>\u53ef\u4ee5\u8c03\u7528split()\u51fd\u6570\u5206\u5272\uff0c\u5728\u4e00\u884c\u4e2d\u83b7\u5f97\u591a\u4e2a\u503c</li> <li>\u53ef\u4ee5\u8c03\u7528map\u5c06\u4e00\u884c\u4e2d\u591a\u4e2a\u8f93\u5165\u8f6c\u5316\u4e3a\u5176\u4ed6\u7c7b\u578b</li> <li>m,n = map(int, input().split('/'))</li> </ul>"},{"location":"Python/Py2/#print","title":"\u8f93\u51fa\u51fd\u6570 print","text":"<ul> <li>\u5982\u4f55\u8bbe\u7f6e\u591a\u4e2a\u503c\u4e4b\u95f4\u7684\u5206\u9694 \uff1a <code>print(a, b, c, sep = ',')</code></li> <li>\u5982\u4f55\u8bbe\u7f6e\u7ed3\u675f\u7b26: <code>print(a, end = \"\")</code></li> </ul>"},{"location":"Python/Py2/#_1","title":"\u8f93\u51fa\u683c\u5f0f\u63a7\u5236","text":"<ul> <li>\u65b9\u6cd5\u4e00 \uff1a%</li> <li>\u65b9\u6cd5\u4e8c \uff1aformat</li> <li>\u65b9\u6cd5\u4e09 \uff1af-string</li> </ul> <pre><code># 1 %\nprint(\"my name is %s, my age is %d, my height is %.lf \" % (name, age, height))\n# 2 format\nprint(\"my name is {:s}, my age is {:d}, my height is {:.lf} \".format(name, age, height))\n# 3 f-string\nprint(f\"my name is {name}, my age is {age}, my height is {height:.lf} \".format(name, age, height))\n</code></pre> <p>format\u5bf9\u9f50</p> <ul> <li>\u5c45\u4e2d\u5bf9\u9f50 (:^)(\u6570\u636e\u5c45\u4e2d\uff0c\u6b64\u9009\u9879\u9700\u548c width \u53c2\u6570\u4e00\u8d77\u4f7f\u7528)</li> <li>\u9760\u5de6\u5bf9\u9f50 (:&lt;)(\u5bf9\u4e8e\u5927\u90e8\u5206\u5bf9\u8c61\u65f6\u4e3a\u9ed8\u8ba4)</li> <li>\u9760\u53f3\u5bf9\u9f50 (:&gt;)(\u6570\u5b57\u60c5\u51b5\u4e0b\u9ed8\u8ba4)</li> <li>\u5c45\u4e2d\u5bf9\u9f50 (:=)(\u6570\u636e\u53f3\u5bf9\u9f50\uff0c\u540c\u65f6\u5c06\u7b26\u53f7\u653e\u7f6e\u5728\u586b\u5145\u5185\u5bb9\u7684\u6700\u5de6\u4fa7\uff0c\u8be5\u9009\u9879\u53ea\u5bf9\u6570\u5b57\u7c7b\u578b\u6709\u6548)</li> </ul>"},{"location":"Python/Py2/#_2","title":"\u5b57\u7b26\u4e32","text":"<p>Abstract</p> <p>\u5728python\u8bed\u8a00\u4e2d,\u4e00\u822c\u5bf9\u4e8e\u7247\u6bb5\uff0c\u5f15\u53f7\u540e\u9762\u7684\u503c\u90fd\u662f\u53d6\u4e0d\u5230\u7684.</p>"},{"location":"Python/Py2/#_3","title":"\u8f6c\u4e49\u5b57\u7b26","text":"\u5b57\u7b26 \u542b\u4e49 <code>\\'</code> \u5355\u5f15\u53f7 <code>\\\"</code> \u53cc\u5f15\u53f7 \\a \u54cd\u94c3 \\b \u9000\u683c(Backspace) \\n \u6362\u884c \\v \u7eb5\u5411\u5236\u8868\u7b26 \\t \u6a2a\u5411\u5236\u8868\u7b26 \\r \u56de\u8f66 \\ooo \u6700\u591a\u4e09\u4f4d \u516b\u8fdb\u5236\uff0c\u4f8b\u5982\uff1a\\12\u4ee3\u8868\u6362\u884c \\xyy \u5341\u516d\u8fdb\u5236\u6570\uff0cyy\u4ee3\u8868\u7684\u5b57\u7b26\uff0c\u4f8b\u5982\uff1a\\x0a\u4ee3\u8868\u6362"},{"location":"Python/Py2/#_4","title":"\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7","text":"\u4f18\u5148\u7ea7 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u7ed3\u5408\u6027 1 x**y \u5e42 \u4ece\u53f3\u5411\u5de6 2 +x,-x \u6b63\uff0c\u8d1f 3 x*y, x/y,x//y, x%y \u4e58\uff0c\u9664\uff0c\u53d6\u6a21 \u4ece\u5de6\u5411\u53f3 4 x+y, x-y \u52a0\uff0c\u51cf \u4ece\u5de6\u5411\u53f3 5 x&lt;y, x&lt;=y, x==y, x!=y, x&gt;=y, x&gt;y \u6bd4\u8f83 \u4ece\u5de6\u5411\u53f3 6 not x \u903b\u8f91\u5426 \u4ece\u5de6\u5411\u53f3 7 x and y \u903b\u8f91\u4e0e \u4ece\u5de6\u5411\u53f3 8 x or y \u903b\u8f91\u6216 \u4ece\u5de6\u5411\u53f3"},{"location":"Python/Py2/#_5","title":"\u5185\u7f6e\u8f6c\u6362\u51fd\u6570","text":"\u51fd\u6570\u540d \u542b\u4e49 bool \u6839\u636e\u4f20\u5165\u7684\u53c2\u6570\u7684\u903b\u8f91\u503c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5e03\u5c14\u503c int \u6839\u636e\u4f20\u5165\u7684\u53c2\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6574\u6570 float \u6839\u636e\u4f20\u5165\u7684\u53c2\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6d6e\u70b9\u6570 complex \u6839\u636e\u4f20\u5165\u53c2\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u590d\u6570 str \u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32 ord \u8fd4\u56deUnicode\u5b57\u7b26\u5bf9\u5e94\u7684\u6574\u6570 chr \u8fd4\u56de\u6574\u6570\u6240\u5bf9\u5e94\u7684Unicode\u5b57\u7b26 bin \u5c06\u6574\u6570\u8f6c\u6362\u62102\u8fdb\u5236\u5b57\u7b26\u4e32 oct \u5c06\u6574\u6570\u8f6c\u5316\u62108\u8fdb\u5236\u6570\u5b57\u7b26\u4e32 hex \u5c06\u6574\u6570\u8f6c\u6362\u621016\u8fdb\u5236\u5b57\u7b26\u4e32 list \u6839\u636e\u4f20\u5165\u7684\u53c2\u6570\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5217\u8868"},{"location":"Python/Py3/","title":"\u57fa\u672c\u8bed\u53e5","text":"<p>Abstract</p> <p>\u8bed\u53e5\u901a\u5e38\u662f\u4e00\u884c\u4e00\u6761\u8bed\u53e5\u3002\u5982\u4e00\u884c\u4e2d\u6709\u591a\u6761\u8bed\u53e5,\u5219\u7528\u5206\u53f7(;)\u5206\u5f00,\u5982\u8bed\u53e5\u592a\u957f\u8981\u8de8\u884c\u65f6,\u53ef\u4ee5\u7528\u7eed\u884c\u7b26()\u8de8\u884c\u8868\u793a\u4e00\u4e2a\u8bed\u53e5\u3002</p> <ul> <li>\u8f93\u5165\u8f93\u51fa\u8bed\u53e5\uff08\u5df2\u8bb2\uff09</li> <li>\u8d4b\u503c\u8bed\u53e5</li> <li>\u5206\u652f\u8bed\u53e5</li> <li>\u5faa\u73af\u8bed\u53e5</li> </ul>"},{"location":"Python/Py3/#_2","title":"\u8d4b\u503c\u8bed\u53e5","text":""},{"location":"Python/Py3/#_3","title":"\u5206\u652f\u8bed\u53e5","text":"<p>Example</p> <pre><code>x = float(input())\nif !x :\n    y = 0\nelse :\n    y = 1/x\n\nprint(f\"f({x:.1f}) = {y:.1f}\")\n</code></pre>"},{"location":"Python/Py3/#_4","title":"\u5faa\u73af\u8bed\u53e5","text":""},{"location":"Python/Py3/#for","title":"for\u8bed\u53e5","text":"<p>for varible in \u5217\u8868\uff1a     \u8bed\u53e5\u5757</p> <pre><code>for i in [1,2,3,4]:\n    print(i)\n</code></pre> <p>range\u51fd\u6570</p> <p></p>"},{"location":"Python/Py3/#_5","title":"\u5217\u8868","text":"<ul> <li>\u5217\u8868\u63a8\u5bfc\u5f0f\u662f\u5c06\u67d0\u79cd\u64cd\u4f5c\u5e94\u7528\u5230\u5e8f\u5217\uff0c\u4ece\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5217\u8868\u5feb\u901f\u7b80\u6d01\u5730\u521b\u5efa\u65b0\u5217\u8868\u7684\u4e00\u79cd\u65b9\u6cd5\uff0c\u53c8\u88ab\u79f0\u4e3a\u5217\u8868\u89e3\u6790\u3002</li> <li>\u5b83\u8fd8\u53ef\u4ee5\u5c06\u5faa\u73af\u548c\u6761\u4ef6\u5224\u65ad\u7ed3\u5408,\u4ece\u800c\u907f\u514d\u8bed\u6cd5\u5197\u957f\u7684\u4ee3\u7801,\u540c\u65f6\u63d0\u9ad8\u7a0b\u5e8f\u6027\u80fd\u3002</li> </ul> <p>\u5217\u8868\u63a8\u5bfc\u5f0f\u7684\u51e0\u79cd\u5f62\u5f0f</p> <p></p> <p>\u6c42\u548c</p> <p></p>"},{"location":"Python/Py4/","title":"\u5e8f\u5217","text":"<p>Abstract</p> <ul> <li>list \u5217\u8868</li> <li>string \u5b57\u7b26\u4e32</li> <li>tuple \u5143\u7ec4</li> <li>dictionary \u5b57\u5178</li> <li>set \u96c6\u5408</li> </ul>"},{"location":"Python/Py4/#_2","title":"\u5e38\u89c1\u64cd\u4f5c","text":"<ul> <li>\u5207\u7247</li> </ul> <p>\u590d\u5236\u5e8f\u5217</p> <p></p>"},{"location":"Python/Py4/#_3","title":"\u5e8f\u5217\u7684\u8fd0\u7b97","text":""},{"location":"Python/Py4/#_4","title":"\u5217\u8868","text":"<ul> <li>\u6709\u4e00\u7cfb\u5217\u6309\u7167\u6307\u5b9a\u987a\u5e8f\u6392\u5217\u7684\u5143\u7d20\u7ec4\u6210\u3002\u5217\u8868\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u4e0d\u540c\u7c7b\u578b\u3002</li> <li>\u5217\u8868\u7684\u8868\u793a\u7528\u65b9\u62ec\u53f7<code>[]</code>\u5c06\u5143\u7d20\u62ec\u8d77\u6765\uff0c\u5143\u7d20\u4e4b\u95f4\u7528\u9017\u53f7<code>(,)</code>\u5206\u9694\u3002</li> <li>\u5217\u8868\u662f\u5e8f\u5217\u7c7b\u578b\u7684\u4e00\u79cd\uff0c\u5e8f\u5217\u6240\u6709\u7684\u7279\u6027\u548c\u64cd\u4f5c\u5bf9\u4e8e\u5217\u8868\u90fd\u662f\u6210\u7acb\u7684\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u5217\u8868\u8fd8\u6709\u81ea\u5df1\u7684\u7279\u6b8a\u64cd\u4f5c\u3002</li> </ul>"},{"location":"Python/Py4/#_5","title":"\u521b\u5efa\u5217\u8868","text":""},{"location":"Python/Py4/#_6","title":"\u5217\u8868\u8d4b\u503c","text":""},{"location":"Python/Py4/#_7","title":"\u5b57\u7b26\u4e32","text":""},{"location":"Python/Py4/#_8","title":"\u5b57\u7b26\u4e32\u7684\u8868\u793a","text":"<ul> <li>\u5b57\u7b26\u4e32\u662f\u4e00\u8fde\u4e32\u7684\u5b57\u7b26\uff0c\u7528\u82f1\u6587\u5355\u5f15\u53f7<code>'</code>\u6216\u8005\u82f1\u6587\u53cc\u5f15\u53f7<code>\"</code>\u62ec\u8d77\u6765\u3002<ul> <li>'Pyhton is the best'</li> <li>\"Programming is fun\"</li> </ul> </li> <li>\u5f15\u53f7\u5fc5\u987b\u6210\u5bf9\u51fa\u73b0\uff1b\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u4e86\u5355\u5f15\u53f7\u6216\u53cc\u5370\u53f7\uff0c\u5219\u8981\u7528\u53e6\u4e00\u79cd\u62ec\u53f7\u62ec\u8d77\u6765\uff0c\u5982\u679c\u4e24\u79cd\u5f15\u53f7\u90fd\u6709\u5219\u53ef\u4ee5\u7528\u4e09\u5f15\u53f7\u3002<ul> <li>\"It's amazing!\"</li> <li>'He said, \"You are so cool!'</li> </ul> </li> </ul> <p>Example</p> <p>'''This is a test for multiple lines  of text.'''</p> <ul> <li>\u8868\u793a\u5305\u542b\u4e86\u4e24\u4e2a\u6362\u884c\u7b26\u7684\u591a\u884c\u5b57\u7b26\u4e32</li> <li>'This is a test\\nfor multiple lines\\nof text.'</li> <li>\u5982\u679c\u8981\u5728\u7a0b\u5e8f\u4e2d\u7528\u591a\u884c\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u53ef\u4ee5\u5728\u6bcf\u884c\u7684\u7ed3\u5c3e\u7528<code>\\</code>\u7ed3\u675f<ul> <li>'hello \\ world'</li> <li>\u8f93\u51fa\u7ed3\u679c\u662f'hello world'</li> </ul> </li> </ul> <p>\u539f\u59cb\u5b57\u7b26\u4e32</p> <ul> <li>\u5728\u5b57\u7b26\u4e32\u524d\u9762\u52a0\u4e00\u4e2a'r'\uff0c\u8868\u793a\u662f\u539f\u59cb\u5b57\u7b26\u4e32\u3002</li> <li>s = r'hello\\nworld'</li> <li>print(s) </li> <li>\u8f93\u51fa \uff1ahello\\nworld </li> <li>\u76f8\u5f53\u4e8e s = 'hello\\\\nworld'</li> </ul>"},{"location":"Python/Py4/#_9","title":"\u5b57\u7b26\u4e32\u7279\u70b9","text":"<p>\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u4fee\u6539\u7684</p> <ul> <li>\u5143\u7d20\u8d4b\u503c\uff0c\u5207\u7247\u8d4b\u503c\u90fd\u662f\u975e\u6cd5\u7684</li> </ul> <p></p> <p>\u6570\u503c\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u8f93\u51fa</p> <p></p>"},{"location":"Python/Py4/#format","title":"<code>format()</code>\u65b9\u6cd5","text":""},{"location":"Python/Py4/#_10","title":"\u5b57\u7b26\u4e32\u5e38\u7528\u65b9\u6cd5","text":"<p>\u62c6\u5206\u5b57\u7b26\u4e32\u7684split()\u65b9\u6cd5</p> <p></p> <p>\u805a\u5408\u5b57\u7b26\u4e32\u7684join()\u65b9\u6cd5</p> <p></p>"},{"location":"Python/Py4/#_11","title":"\u5143\u7ec4","text":"<p>\u5143\u7ec4\u662f\u4e0d\u53ef\u4fee\u6539\u7684\u4efb\u4f55\u7c7b\u578b\u7684\u6570\u636e\u5e8f\u5217\u3002\u5143\u7ec4\u50cf\u5217\u8868\u4e00\u6837\u53ef\u4ee5\u8868\u8fbe\u4efb\u4f55\u7c7b\u578b\u3001\u4efb\u4f55\u6570\u91cf\u7684\u6570\u636e\u7684\u8bed\u5e8f\u5e8f\u5217\u3002</p> <p>Example</p> <ul> <li>(1, 3.2, 5, 7.0, 9)</li> <li>('not', 'and', 'or')</li> </ul>"},{"location":"Python/Py4/#_12","title":"\u5143\u7ec4\u7684\u521b\u5efa","text":""},{"location":"Python/Py4/#_13","title":"\u5143\u7ec4\u4f7f\u7528","text":"<ul> <li>\u5143\u7ec4\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff0c\u6240\u4ee5\u5217\u8868\u4e2d\u7684<code>append()</code>, <code>insert()</code>, <code>remove()</code>\u5bf9\u4e8e\u5143\u7ec4\u90fd\u4e0d\u9002\u7528</li> <li>\u5143\u7ec4\u5e38\u7528\u65b9\u6cd5\u548c\u51fd\u6570</li> </ul>"},{"location":"Python/Py4/#_14","title":"\u5143\u7ec4\u7684\u4f18\u70b9","text":"<ul> <li>\u5143\u7ec4\u901f\u5ea6\u6bd4\u5217\u8868\u66f4\u5feb</li> <li>\u5143\u7ec4\u4e0d\u5141\u8bb8\u4fee\u6539\u7684\u7279\u6027\u53ef\u4ee5\u4fdd\u62a4\u6570\u636e</li> <li>\u5143\u7ec4\u4f5c\u4e3a\u5b57\u5178\u7684\u201c\u952e\u201d\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u96c6\u5408\u7684\u5143\u7d20\uff0c\u800c\u5217\u8868\u4e0d\u53ef\u4ee5</li> </ul>"},{"location":"Python/problems/","title":"\u4f5c\u4e1a\u8bb0\u5f55","text":""},{"location":"Python/problems/#week-1","title":"Week 1","text":"<p>Question</p> <p>\u5b57\u6bcdA\u7684ASCII\u7f16\u7801\u503c\u548cUnicode\u7f16\u7801\u503c\u76f8\u540c\u3002</p> <ul> <li>Answer : T (\u7f16\u7801\u4e0d\u540c\uff0c\u4f46\u662f\u7f16\u7801\u503c\u76f8\u540c)</li> </ul> <p>Question</p> <p>\u9ad8\u7ea7\u8bed\u8a00\u7a0b\u5e8f\u8981\u88ab\u673a\u5668\u6267\u884c,\u53ea\u6709\u7528\u89e3\u91ca\u5668\u6765\u89e3\u91ca\u6267\u884c</p> <ul> <li>Answer : F (\u8fd8\u6709\u7f16\u8bd1\u578b\u8bed\u8a00)</li> </ul> <p>Question</p> <p>Python\u662f\u811a\u672c\u8bed\u8a00</p> <ul> <li>Answer : T</li> </ul> <p>Question</p> <p>Python\u662f\u9759\u6001\u8bed\u8a00</p> <ul> <li>Answer : F</li> </ul>"},{"location":"Python/problems/#week-2","title":"Week 2","text":"<p>Question</p> <p>\u5f53\u8f93\u5165\u662f\uff1a45,8 \u65f6\uff0c\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f37\u3002 <pre><code>a,b = input().split(',')\nb=int(b)\nc=int('a',b)\nprint(c)\n</code></pre></p> <ul> <li>a\u52a0\u5f15\u53f7\u4f1a\u62a5\u9519\uff0c\u4e0d\u52a0\u5f15\u53f7\u4e3astr</li> </ul> <p>Question</p> <p>print(bin(12.5))\u7684\u8f93\u51fa\u662f0b1100.1</p> <ul> <li>bin()\u4e0d\u80fd\u5904\u7406float</li> </ul>"},{"location":"Python/problems/#week-3","title":"Week 3","text":"<p>Question</p> <p></p> <p>Question</p> <p></p> <p>Question</p> <p></p> <p></p> <p>\u5b9e\u9a8c\u8bfe\u7ec3\u4e60</p> <p></p>"},{"location":"Think/","title":"Thinking","text":"<p>\u8fd9\u91cc\u8bb0\u5f55\u5e73\u65e5\u5b66\u4e60\u751f\u6d3b\u7684\u6240\u601d\u6240\u611f</p>"}]}